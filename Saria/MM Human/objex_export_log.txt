INFO:objex.OBJEX_OT_export.progress_report_print:   (  0.0000 sec |   0.0000 sec) Objex Export path: 'D:\\Games\\Modding\\ModLoader64\\Models\\Z64\\Saria\\MM Human\\object_link_child.objex'
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0020 sec |   0.0000 sec) Finished writing geometry of 'skeleton'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating riggedmesh, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0309 sec |   0.0269 sec) Finished writing geometry of 'riggedmesh'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Blade.3, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0389 sec |   0.0070 sec) Finished writing geometry of 'Blade.3'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Bottle.Hand.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0469 sec |   0.0059 sec) Finished writing geometry of 'Bottle.Hand.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Bow, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0578 sec |   0.0090 sec) Finished writing geometry of 'Bow'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Bow.String, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0638 sec |   0.0050 sec) Finished writing geometry of 'Bow.String'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating FPS.Forearm.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0788 sec |   0.0130 sec) Finished writing geometry of 'FPS.Forearm.R'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Fist.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0858 sec |   0.0060 sec) Finished writing geometry of 'Fist.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Fist.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0938 sec |   0.0059 sec) Finished writing geometry of 'Fist.R'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Hilt.3, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1027 sec |   0.0080 sec) Finished writing geometry of 'Hilt.3'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Hookshot, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1147 sec |   0.0099 sec) Finished writing geometry of 'Hookshot'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Hookshot.Spike, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1207 sec |   0.0050 sec) Finished writing geometry of 'Hookshot.Spike'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Shield.2, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1287 sec |   0.0060 sec) Finished writing geometry of 'Shield.2'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Ocarina.2, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1376 sec |   0.0070 sec) Finished writing geometry of 'Ocarina.2'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Shield.3, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1466 sec |   0.0080 sec) Finished writing geometry of 'Shield.3'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Shield.3.Face, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1526 sec |   0.0050 sec) Finished writing geometry of 'Shield.3.Face'.
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.1537 sec |   0.1527 sec) Finished exporting geometry, now exporting materials
TRACE:objex.export_objex_mtl.write_mtl: Writing name='orange' name_q='"orange"' material=bpy.data.materials['orange'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['0600B168.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'primitiveA': 1.0, 'texel0RGB': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['0600B168.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 0.7216500043869019, 0.3172760009765625, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['0600B168.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} and texel0A {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['0600B168.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} into texel0 {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['0600B168.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='geruto.insignia.2' name_q='"geruto.insignia.2"' material=bpy.data.materials['geruto.insignia.2'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_scale_v': 0, 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06009968.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'primitiveA': 1.0, 'texel0RGB': {'uv_scale_v': 0, 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06009968.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06009968.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} and texel0A {'uv_scale_v': 0, 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06009968.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} into texel0 {'uv_scale_v': 0, 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06009968.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_06003808.001' name_q='"mtl_06003808.001"' material=bpy.data.materials['mtl_06003808.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['06003808.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'primitiveA': 1.0, 'texel0RGB': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['06003808.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['06003808.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} and texel0A {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['06003808.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} into texel0 {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['06003808.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}
WARNING:objex.export_objex_mtl.write_mtl: Image 06003808.tga uses Color Space 'sRGB',
but the scene uses display_device='None'. This makes the preview less accurate.
The Color Space property can be found in the Image Editor.
Recommended value: Linear
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_060037C8.001' name_q='"mtl_060037C8.001"' material=bpy.data.materials['mtl_060037C8.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['060037C8.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'primitiveA': 1.0, 'texel0RGB': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['060037C8.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['060037C8.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} and texel0A {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['060037C8.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} into texel0 {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['060037C8.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}
WARNING:objex.export_objex_mtl.write_mtl: Image 060037C8.tga uses Color Space 'sRGB',
but the scene uses display_device='None'. This makes the preview less accurate.
The Color Space property can be found in the Image Editor.
Recommended value: Linear
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_06019240' name_q='"mtl_06019240"' material=bpy.data.materials['mtl_06019240'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06019240.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'primitiveA': 1.0, 'texel0RGB': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06019240.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06019240.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} and texel0A {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06019240.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} into texel0 {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06019240.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}
WARNING:objex.export_objex_mtl.write_mtl: Image 06019240.tga uses Color Space 'sRGB',
but the scene uses display_device='None'. This makes the preview less accurate.
The Color Space property can be found in the Image Editor.
Recommended value: Linear
TRACE:objex.export_objex_mtl.write_mtl: Writing name='string' name_q='"string"' material=bpy.data.materials['string'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'primitiveA': 1.0, 'texel0RGB': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} and texel0A {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} into texel0 {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ms.metal' name_q='"ms.metal"' material=bpy.data.materials['ms.metal'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 0.05000000074505806, 'texgen': True, 'texgen_linear': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['04000000.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'primitiveA': 1.0, 'texel0RGB': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 0.05000000074505806, 'texgen': True, 'texgen_linear': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['04000000.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 0.8431373238563538, 0.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 0.05000000074505806, 'texgen': True, 'texgen_linear': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['04000000.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} and texel0A {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 0.05000000074505806, 'texgen': True, 'texgen_linear': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['04000000.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} into texel0 {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 0.05000000074505806, 'texgen': True, 'texgen_linear': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['04000000.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_060024F0.001' name_q='"mtl_060024F0.001"' material=bpy.data.materials['mtl_060024F0.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['060024F0.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'primitiveA': 1.0, 'texel0RGB': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['060024F0.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['060024F0.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} and texel0A {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['060024F0.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} into texel0 {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['060024F0.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}
WARNING:objex.export_objex_mtl.write_mtl: Image 060024F0.tga uses Color Space 'sRGB',
but the scene uses display_device='None'. This makes the preview less accurate.
The Color Space property can be found in the Image Editor.
Recommended value: Linear
TRACE:objex.export_objex_mtl.write_mtl: Writing name='geruto.insignia.dark.1' name_q='"geruto.insignia.dark.1"' material=bpy.data.materials['geruto.insignia.dark.1'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['0600A968.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'primitiveA': 1.0, 'texel0RGB': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['0600A968.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['0600A968.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} and texel0A {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['0600A968.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} into texel0 {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['0600A968.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ocarian.fairy' name_q='"ocarian.fairy"' material=bpy.data.materials['ocarian.fairy'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['060091E0.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'primitiveA': 1.0, 'texel0RGB': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['060091E0.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['060091E0.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} and texel0A {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['060091E0.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} into texel0 {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['060091E0.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_0A000000.001' name_q='"mtl_0A000000.001"' material=bpy.data.materials['mtl_0A000000.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['mouth.png'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'primitiveA': 1.0, 'texel0RGB': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['mouth.png'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['mouth.png'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} and texel0A {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['mouth.png'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} into texel0 {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['mouth.png'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='handle' name_q='"handle"' material=bpy.data.materials['handle'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['0600B228.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'primitiveA': 1.0, 'texel0RGB': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['0600B228.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['0600B228.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} and texel0A {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['0600B228.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} into texel0 {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['0600B228.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_06002530.001' name_q='"mtl_06002530.001"' material=bpy.data.materials['mtl_06002530.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['skin.png'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'primitiveA': 1.0, 'texel0RGB': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['skin.png'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['skin.png'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} and texel0A {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['skin.png'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} into texel0 {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['skin.png'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}
WARNING:objex.export_objex_mtl.write_mtl: Image skin.png uses Color Space 'sRGB',
but the scene uses display_device='None'. This makes the preview less accurate.
The Color Space property can be found in the Image Editor.
Recommended value: Linear
TRACE:objex.export_objex_mtl.write_mtl: Writing name='metal.hookshot' name_q='"metal.hookshot"' material=bpy.data.materials['metal.hookshot'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 0.05000000074505806, 'texgen': True, 'texgen_linear': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'primitiveA': 1.0, 'texel0RGB': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 0.05000000074505806, 'texgen': True, 'texgen_linear': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 0.05000000074505806, 'texgen': True, 'texgen_linear': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} and texel0A {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 0.05000000074505806, 'texgen': True, 'texgen_linear': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} into texel0 {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 0.05000000074505806, 'texgen': True, 'texgen_linear': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria_tunic_light' name_q='"saria_tunic_light"' material=bpy.data.materials['saria_tunic_light'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06002670.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'primitiveA': 1.0, 'texel0RGB': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06002670.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06002670.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} and texel0A {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06002670.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} into texel0 {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06002670.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}
WARNING:objex.export_objex_mtl.write_mtl: Image 06002670.tga uses Color Space 'sRGB',
but the scene uses display_device='None'. This makes the preview less accurate.
The Color Space property can be found in the Image Editor.
Recommended value: Linear
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_060029F0.001' name_q='"mtl_060029F0.001"' material=bpy.data.materials['mtl_060029F0.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['060029F0.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'primitiveA': 1.0, 'texel0RGB': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['060029F0.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['060029F0.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} and texel0A {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['060029F0.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} into texel0 {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['060029F0.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}
WARNING:objex.export_objex_mtl.write_mtl: Image 060029F0.tga uses Color Space 'sRGB',
but the scene uses display_device='None'. This makes the preview less accurate.
The Color Space property can be found in the Image Editor.
Recommended value: Linear
TRACE:objex.export_objex_mtl.write_mtl: Writing name='red' name_q='"red"' material=bpy.data.materials['red'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['0600B168.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'primitiveA': 1.0, 'texel0RGB': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['0600B168.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.6600000262260437, 0.0, 0.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['0600B168.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} and texel0A {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['0600B168.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} into texel0 {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['0600B168.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 0600B168.tga <bpy_struct, Image("0600B168.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ns.guard' name_q='"ns.guard"' material=bpy.data.materials['ns.guard'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06006CE0.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'primitiveA': 1.0, 'texel0RGB': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06006CE0.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.01748347282409668, 1.0, 0.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06006CE0.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} and texel0A {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06006CE0.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} into texel0 {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06006CE0.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_06002570.001' name_q='"mtl_06002570.001"' material=bpy.data.materials['mtl_06002570.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['leg.png'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'primitiveA': 1.0, 'texel0RGB': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['leg.png'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['leg.png'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} and texel0A {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['leg.png'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} into texel0 {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['leg.png'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}
WARNING:objex.export_objex_mtl.write_mtl: Image leg.png uses Color Space 'sRGB',
but the scene uses display_device='None'. This makes the preview less accurate.
The Color Space property can be found in the Image Editor.
Recommended value: Linear
TRACE:objex.export_objex_mtl.write_mtl: Writing name='body' name_q='"body"' material=bpy.data.materials['body'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['0600B1A8.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'primitiveA': 1.0, 'texel0RGB': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['0600B1A8.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['0600B1A8.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} and texel0A {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['0600B1A8.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} into texel0 {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['0600B1A8.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mirror' name_q='"mirror"' material=bpy.data.materials['mirror'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_0': bpy.data...nodes["OBJEX_Color0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': True, 'texgen_linear': True, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['shieldtexture.png'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'texel0RGB': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': True, 'texgen_linear': True, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['shieldtexture.png'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': True, 'texgen_linear': True, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['shieldtexture.png'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} and texel0A {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': True, 'texgen_linear': True, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['shieldtexture.png'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} into texel0 {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': True, 'texgen_linear': True, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['shieldtexture.png'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ms.gem' name_q='"ms.gem"' material=bpy.data.materials['ms.gem'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 0.02500000037252903, 'texgen': True, 'texgen_linear': True, 'uv_scale_v_main': 0.02500000037252903, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['04000000.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'primitiveA': 1.0, 'texel0RGB': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 0.02500000037252903, 'texgen': True, 'texgen_linear': True, 'uv_scale_v_main': 0.02500000037252903, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['04000000.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 0.4664573669433594, 0.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 0.02500000037252903, 'texgen': True, 'texgen_linear': True, 'uv_scale_v_main': 0.02500000037252903, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['04000000.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} and texel0A {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 0.02500000037252903, 'texgen': True, 'texgen_linear': True, 'uv_scale_v_main': 0.02500000037252903, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['04000000.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} into texel0 {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 0.02500000037252903, 'texgen': True, 'texgen_linear': True, 'uv_scale_v_main': 0.02500000037252903, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['04000000.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga <bpy_struct, Image("04000000.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='hylian.crest' name_q='"hylian.crest"' material=bpy.data.materials['hylian.crest'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_scale_v': 0, 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['04000400.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'primitiveA': 1.0, 'texel0RGB': {'uv_scale_v': 0, 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['04000400.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['04000400.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} and texel0A {'uv_scale_v': 0, 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['04000400.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} into texel0 {'uv_scale_v': 0, 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['04000400.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_06002EC8.001' name_q='"mtl_06002EC8.001"' material=bpy.data.materials['mtl_06002EC8.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06002EC8.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'primitiveA': 1.0, 'texel0RGB': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06002EC8.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06002EC8.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} and texel0A {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06002EC8.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} into texel0 {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06002EC8.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}
WARNING:objex.export_objex_mtl.write_mtl: Image 06002EC8.tga uses Color Space 'sRGB',
but the scene uses display_device='None'. This makes the preview less accurate.
The Color Space property can be found in the Image Editor.
Recommended value: Linear
TRACE:objex.export_objex_mtl.write_mtl: Writing name='chain' name_q='"chain"' material=bpy.data.materials['chain'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['0600B2A8.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'primitiveA': 1.0, 'texel0RGB': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['0600B2A8.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['0600B2A8.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} and texel0A {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['0600B2A8.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} into texel0 {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['0600B2A8.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mirror.surface' name_q='"mirror.surface"' material=bpy.data.materials['mirror.surface'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['04000000.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'primitiveA': 1.0, 'texel0RGB': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['04000000.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.07322400063276291, 0.22602500021457672, 0.605247974395752, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['04000000.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} and texel0A {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['04000000.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} into texel0 {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['04000000.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga <bpy_struct, Image("04000000.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_06003788.001' name_q='"mtl_06003788.001"' material=bpy.data.materials['mtl_06003788.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06003788.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'primitiveA': 1.0, 'texel0RGB': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06003788.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06003788.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} and texel0A {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06003788.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} into texel0 {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06003788.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria_belt' name_q='"saria_belt"' material=bpy.data.materials['saria_belt'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_scale_v': 0, 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06002770.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'primitiveA': 1.0, 'texel0RGB': {'uv_scale_v': 0, 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06002770.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06002770.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} and texel0A {'uv_scale_v': 0, 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06002770.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} into texel0 {'uv_scale_v': 0, 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06002770.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}
WARNING:objex.export_objex_mtl.write_mtl: Image 06002770.tga uses Color Space 'sRGB',
but the scene uses display_device='None'. This makes the preview less accurate.
The Color Space property can be found in the Image Editor.
Recommended value: Linear
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mirror.frame' name_q='"mirror.frame"' material=bpy.data.materials['mirror.frame'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 0.022887999191880226, 'texgen': True, 'texgen_linear': True, 'uv_scale_v_main': 0.030517999082803726, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['04000000.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'primitiveA': 1.0, 'texel0RGB': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 0.022887999191880226, 'texgen': True, 'texgen_linear': True, 'uv_scale_v_main': 0.030517999082803726, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['04000000.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.6784313917160034, 0.0, 0.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 0.022887999191880226, 'texgen': True, 'texgen_linear': True, 'uv_scale_v_main': 0.030517999082803726, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['04000000.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} and texel0A {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 0.022887999191880226, 'texgen': True, 'texgen_linear': True, 'uv_scale_v_main': 0.030517999082803726, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['04000000.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} into texel0 {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 0.022887999191880226, 'texgen': True, 'texgen_linear': True, 'uv_scale_v_main': 0.030517999082803726, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['04000000.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga <bpy_struct, Image("04000000.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='geruto.insignia' name_q='"geruto.insignia"' material=bpy.data.materials['geruto.insignia'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['0600A968.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'primitiveA': 1.0, 'texel0RGB': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['0600A968.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['0600A968.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} and texel0A {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['0600A968.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} into texel0 {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['0600A968.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 0600A968.tga <bpy_struct, Image("0600A968.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_09000000.001' name_q='"mtl_09000000.001"' material=bpy.data.materials['mtl_09000000.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['eyes.png'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'primitiveA': 1.0, 'texel0RGB': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['eyes.png'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['eyes.png'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} and texel0A {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['eyes.png'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} into texel0 {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['eyes.png'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria_hands' name_q='"saria_hands"' material=bpy.data.materials['saria_hands'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['hand.png'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'primitiveA': 1.0, 'texel0RGB': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['hand.png'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['hand.png'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} and texel0A {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['hand.png'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} into texel0 {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['hand.png'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}
WARNING:objex.export_objex_mtl.write_mtl: Image hand.png uses Color Space 'sRGB',
but the scene uses display_device='None'. This makes the preview less accurate.
The Color Space property can be found in the Image Editor.
Recommended value: Linear
TRACE:objex.export_objex_mtl.write_mtl: Writing name='shield.back' name_q='"shield.back"' material=bpy.data.materials['shield.back'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_scale_v': 0, 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06009768.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'primitiveA': 1.0, 'texel0RGB': {'uv_scale_v': 0, 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06009768.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06009768.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} and texel0A {'uv_scale_v': 0, 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06009768.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} into texel0 {'uv_scale_v': 0, 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06009768.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_0601A280.001' name_q='"mtl_0601A280.001"' material=bpy.data.materials['mtl_0601A280.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['0601A280.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'primitiveA': 1.0, 'texel0RGB': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['0601A280.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['0601A280.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} and texel0A {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['0601A280.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} into texel0 {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['0601A280.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}
WARNING:objex.export_objex_mtl.write_mtl: Image 0601A280.tga uses Color Space 'sRGB',
but the scene uses display_device='None'. This makes the preview less accurate.
The Color Space property can be found in the Image Editor.
Recommended value: Linear
TRACE:objex.export_objex_mtl.write_mtl: Writing name='bow.string.001' name_q='"bow.string.001"' material=bpy.data.materials['bow.string.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['0600B168.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'primitiveA': 1.0, 'texel0RGB': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['0600B168.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['0600B168.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} and texel0A {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['0600B168.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} into texel0 {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['0600B168.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 0600B168.tga <bpy_struct, Image("0600B168.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='empty.dummy' name_q='"empty.dummy"' material=bpy.data.materials['empty.dummy'] face_img=None
TRACE:objex.export_objex_mtl.write_mtl: Writing name='geruto.insignia.dark' name_q='"geruto.insignia.dark"' material=bpy.data.materials['geruto.insignia.dark'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_scale_v': 0, 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06009968.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'primitiveA': 1.0, 'texel0RGB': {'uv_scale_v': 0, 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06009968.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06009968.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} and texel0A {'uv_scale_v': 0, 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06009968.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} into texel0 {'uv_scale_v': 0, 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['06009968.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 06009968.tga <bpy_struct, Image("06009968.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='blue' name_q='"blue"' material=bpy.data.materials['blue'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['0600B168.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'primitiveA': 1.0, 'texel0RGB': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['0600B168.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.05951099842786789, 0.05951099842786789, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['0600B168.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} and texel0A {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['0600B168.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} into texel0 {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['0600B168.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 0600B168.tga <bpy_struct, Image("0600B168.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria_boot' name_q='"saria_boot"' material=bpy.data.materials['saria_boot'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['060023F0.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'primitiveA': 1.0, 'texel0RGB': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['060023F0.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['060023F0.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} and texel0A {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['060023F0.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} into texel0 {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['060023F0.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}
WARNING:objex.export_objex_mtl.write_mtl: Image 060023F0.tga uses Color Space 'sRGB',
but the scene uses display_device='None'. This makes the preview less accurate.
The Color Space property can be found in the Image Editor.
Recommended value: Linear
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ms.hilt.001' name_q='"ms.hilt.001"' material=bpy.data.materials['ms.hilt.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['060090E8.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'primitiveA': 1.0, 'texel0RGB': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['060090E8.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['060090E8.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} and texel0A {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['060090E8.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} into texel0 {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['060090E8.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='yellow' name_q='"yellow"' material=bpy.data.materials['yellow'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['0600B168.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'primitiveA': 1.0, 'texel0RGB': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['0600B168.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.6786090135574341, 0.5721610188484192, 0.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['0600B168.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} and texel0A {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['0600B168.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} into texel0 {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': True, 'uv_scale_u': 0, 'uv_wrap_u': True, 'image': bpy.data.images['0600B168.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 0600B168.tga <bpy_struct, Image("0600B168.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_06003548.001' name_q='"mtl_06003548.001"' material=bpy.data.materials['mtl_06003548.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['06003548.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'primitiveA': 1.0, 'texel0RGB': {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['06003548.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['06003548.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} and texel0A {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['06003548.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False} into texel0 {'uv_scale_v': 0, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'texgen_linear': False, 'uv_scale_v_main': 1.0, 'uv_wrap_v': False, 'uv_scale_u': 0, 'uv_wrap_u': False, 'image': bpy.data.images['06003548.tga'], 'uv_layer': '', 'uv_mirror_v': False, 'uv_map': False}
WARNING:objex.export_objex_mtl.write_mtl: Image 06003548.tga uses Color Space 'sRGB',
but the scene uses display_device='None'. This makes the preview less accurate.
The Color Space property can be found in the Image Editor.
Recommended value: Linear
TRACE:objex.export_objex_mtl.write_mtl: Writing name='slingshot.string' name_q='"slingshot.string"' material=bpy.data.materials['slingshot.string'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.2304 sec |   0.2294 sec) Finished exporting materials, now exporting skeletons/animations
INFO:objex.ObjexWriter.write: now exporting skeletons
INFO:objex.ObjexWriter.write:  ... and animations
WARNING:objex.anim.write_armatures: animations are being viewed at 24.0 fps (change this in render settings), but will be used at 20 fps
DEBUG:objex.anim.write_action: origins of object Blade.3 Vector((-1.3412405252456665, -0.08182669430971146, -0.16644184291362762)) and parent armature skeleton Vector((0.0, 0.0, 0.0)) mismatch
DEBUG:objex.anim.write_action: origin of object Blade.3 Vector((-1.3412405252456665, -0.08182669430971146, -0.16644184291362762)) (parent armature skeleton) is not world origin (0,0,0)
DEBUG:objex.anim.write_action: origins of object Bottle.Hand.L Vector((-0.15000000596046448, -0.07729700207710266, 0.0)) and parent armature skeleton Vector((0.0, 0.0, 0.0)) mismatch
DEBUG:objex.anim.write_action: origin of object Bottle.Hand.L Vector((-0.15000000596046448, -0.07729700207710266, 0.0)) (parent armature skeleton) is not world origin (0,0,0)
DEBUG:objex.anim.write_action: origins of object Bow Vector((-0.0969650000333786, -0.06670799851417542, -0.37943199276924133)) and parent armature skeleton Vector((0.0, 0.0, 0.0)) mismatch
DEBUG:objex.anim.write_action: origin of object Bow Vector((-0.0969650000333786, -0.06670799851417542, -0.37943199276924133)) (parent armature skeleton) is not world origin (0,0,0)
DEBUG:objex.anim.write_action: origins of object Bow.String Vector((-0.15000000596046448, 0.0, 0.0)) and parent armature skeleton Vector((0.0, 0.0, 0.0)) mismatch
DEBUG:objex.anim.write_action: origin of object Bow.String Vector((-0.15000000596046448, 0.0, 0.0)) (parent armature skeleton) is not world origin (0,0,0)
DEBUG:objex.anim.write_action: origins of object Fist.L Vector((-0.15000000596046448, -0.1233542412519455, 0.0)) and parent armature skeleton Vector((0.0, 0.0, 0.0)) mismatch
DEBUG:objex.anim.write_action: origin of object Fist.L Vector((-0.15000000596046448, -0.1233542412519455, 0.0)) (parent armature skeleton) is not world origin (0,0,0)
DEBUG:objex.anim.write_action: origins of object Fist.R Vector((-0.15000000596046448, 0.07729701697826385, 0.0)) and parent armature skeleton Vector((0.0, 0.0, 0.0)) mismatch
DEBUG:objex.anim.write_action: origin of object Fist.R Vector((-0.15000000596046448, 0.07729701697826385, 0.0)) (parent armature skeleton) is not world origin (0,0,0)
DEBUG:objex.anim.write_action: origins of object Hilt.3 Vector((-0.1483379453420639, -0.08182669430971146, -0.16644184291362762)) and parent armature skeleton Vector((0.0, 0.0, 0.0)) mismatch
DEBUG:objex.anim.write_action: origin of object Hilt.3 Vector((-0.1483379453420639, -0.08182669430971146, -0.16644184291362762)) (parent armature skeleton) is not world origin (0,0,0)
DEBUG:objex.anim.write_action: origins of object Hookshot Vector((1.6378411054611206, 0.4625951051712036, -0.37793710827827454)) and parent armature skeleton Vector((0.0, 0.0, 0.0)) mismatch
DEBUG:objex.anim.write_action: origin of object Hookshot Vector((1.6378411054611206, 0.4625951051712036, -0.37793710827827454)) (parent armature skeleton) is not world origin (0,0,0)
DEBUG:objex.anim.write_action: origins of object Hookshot.Spike Vector((0.0, -0.3290899991989136, -0.10000000149011612)) and parent armature skeleton Vector((0.0, 0.0, 0.0)) mismatch
DEBUG:objex.anim.write_action: origin of object Hookshot.Spike Vector((0.0, -0.3290899991989136, -0.10000000149011612)) (parent armature skeleton) is not world origin (0,0,0)
DEBUG:objex.anim.write_action: origins of object riggedmesh Vector((-0.2112663984298706, 0.004999999888241291, -0.24335065484046936)) and parent armature skeleton Vector((0.0, 0.0, 0.0)) mismatch
DEBUG:objex.anim.write_action: origin of object riggedmesh Vector((-0.2112663984298706, 0.004999999888241291, -0.24335065484046936)) (parent armature skeleton) is not world origin (0,0,0)
DEBUG:objex.anim.write_action: origins of object Shield.2 Vector((-0.5372598171234131, -0.052238043397665024, -0.20072956383228302)) and parent armature skeleton Vector((0.0, 0.0, 0.0)) mismatch
DEBUG:objex.anim.write_action: origin of object Shield.2 Vector((-0.5372598171234131, -0.052238043397665024, -0.20072956383228302)) (parent armature skeleton) is not world origin (0,0,0)
DEBUG:objex.anim.write_action: origins of object Shield.3 Vector((-0.26726600527763367, -0.04341999813914299, -0.22859999537467957)) and parent armature skeleton Vector((0.0, 0.0, 0.0)) mismatch
DEBUG:objex.anim.write_action: origin of object Shield.3 Vector((-0.26726600527763367, -0.04341999813914299, -0.22859999537467957)) (parent armature skeleton) is not world origin (0,0,0)
DEBUG:objex.anim.write_action: origins of object Shield.3.Face Vector((-0.2672664523124695, -0.043419841676950455, -0.2286001741886139)) and parent armature skeleton Vector((0.0, 0.0, 0.0)) mismatch
DEBUG:objex.anim.write_action: origin of object Shield.3.Face Vector((-0.2672664523124695, -0.043419841676950455, -0.2286001741886139)) (parent armature skeleton) is not world origin (0,0,0)
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.2376 sec |   0.2366 sec) Objex Export Finished

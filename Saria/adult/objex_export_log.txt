WARNING:objex.OBJEX_OT_export.execute: Scene uses display_device='sRGB' which changes how colors are displayed in the viewport, reducing the preview accuracy.
This can be changed under Color Management in Scene properties.
Note that this should also be kept consistent with the Color Space property of image texture nodes (display_device="None", Color Space="Linear").
In Blender 2.7x, "Color Space" can be found in the Image Editor.
Recommended value: None
INFO:objex.OBJEX_OT_export.progress_report_print:   (  0.0000 sec |   0.0000 sec) Objex Export path: 'D:\\Games\\Modding\\ModLoader64\\Models\\Z64O_Models\\Saria\\adult\\object_link_boy.objex'
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Hookshot.Spike, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0120 sec |   0.0110 sec) Finished writing geometry of 'Hookshot.Spike'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating FPS.Hookshot, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0340 sec |   0.0190 sec) Finished writing geometry of 'FPS.Hookshot'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating FPS.Forearm.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0580 sec |   0.0210 sec) Finished writing geometry of 'FPS.Forearm.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Blade.3.Break, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0750 sec |   0.0140 sec) Finished writing geometry of 'Blade.3.Break'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Bow.String, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0930 sec |   0.0160 sec) Finished writing geometry of 'Bow.String'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating FPS.Forearm.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1140 sec |   0.0180 sec) Finished writing geometry of 'FPS.Forearm.R'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating FPS.Hand.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1450 sec |   0.0280 sec) Finished writing geometry of 'FPS.Hand.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating FPS.Hand.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1700 sec |   0.0210 sec) Finished writing geometry of 'FPS.Hand.R'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Hookshot.Chain, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1850 sec |   0.0130 sec) Finished writing geometry of 'Hookshot.Chain'.
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1930 sec |   0.0010 sec) Finished writing geometry of 'skeleton'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Sheath, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2090 sec |   0.0140 sec) Finished writing geometry of 'Sheath'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Gauntlet.Forearm.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2310 sec |   0.0180 sec) Finished writing geometry of 'Gauntlet.Forearm.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Blade.3, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2570 sec |   0.0230 sec) Finished writing geometry of 'Blade.3'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Broken.Blade.3, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2710 sec |   0.0130 sec) Finished writing geometry of 'Broken.Blade.3'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Fist.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2840 sec |   0.0120 sec) Finished writing geometry of 'Fist.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Fist.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.3020 sec |   0.0150 sec) Finished writing geometry of 'Fist.R'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Bottle.Hand.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.3180 sec |   0.0140 sec) Finished writing geometry of 'Bottle.Hand.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Hilt.2, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.3400 sec |   0.0210 sec) Finished writing geometry of 'Hilt.2'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Hookshot, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.3630 sec |   0.0220 sec) Finished writing geometry of 'Hookshot'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Hammer, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.3830 sec |   0.0180 sec) Finished writing geometry of 'Hammer'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Bottle.001, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.4030 sec |   0.0180 sec) Finished writing geometry of 'Bottle.001'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Gauntlet.Hand.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.4230 sec |   0.0180 sec) Finished writing geometry of 'Gauntlet.Hand.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Gauntlet.Hand.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.4410 sec |   0.0160 sec) Finished writing geometry of 'Gauntlet.Hand.R'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Foot.2.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.4580 sec |   0.0150 sec) Finished writing geometry of 'Foot.2.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Foot.2.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.4740 sec |   0.0140 sec) Finished writing geometry of 'Foot.2.R'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Gauntlet.Fist.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.4960 sec |   0.0200 sec) Finished writing geometry of 'Gauntlet.Fist.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Gauntlet.Fist.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.5140 sec |   0.0140 sec) Finished writing geometry of 'Gauntlet.Fist.R'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Foot.3.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.5300 sec |   0.0140 sec) Finished writing geometry of 'Foot.3.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Foot.3.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.5490 sec |   0.0180 sec) Finished writing geometry of 'Foot.3.R'.
WARNING:objex.ObjexWriter.write_object: Mesh riggedmesh is not triangulated and will be triangulated automatically (for exporting only).
Preview accuracy (UVs, shading, vertex colors) is improved by using a triangulated mesh.
Note: mesh has no triangulate modifier
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.6390 sec |   0.0880 sec) Finished writing geometry of 'riggedmesh'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Hilt.3, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.6580 sec |   0.0170 sec) Finished writing geometry of 'Hilt.3'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Ocarina.2, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.6780 sec |   0.0170 sec) Finished writing geometry of 'Ocarina.2'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Bow, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.7130 sec |   0.0300 sec) Finished writing geometry of 'Bow'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Shield.3, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.7490 sec |   0.0290 sec) Finished writing geometry of 'Shield.3'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Blade.2, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.7970 sec |   0.0360 sec) Finished writing geometry of 'Blade.2'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Shield.2, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.8390 sec |   0.0290 sec) Finished writing geometry of 'Shield.2'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Bottle, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.8710 sec |   0.0260 sec) Finished writing geometry of 'Bottle'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Gauntlet.Forearm.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.9030 sec |   0.0220 sec) Finished writing geometry of 'Gauntlet.Forearm.R'.
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.9140 sec |   0.9130 sec) Finished exporting geometry, now exporting materials
TRACE:objex.export_objex_mtl.write_mtl: Writing name='orange' name_q='"orange"' material=bpy.data.materials['orange'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'texel0RGB': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0600B168.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0600B168.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0600B168.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} and texel0A {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0600B168.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} into texel0 {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0600B168.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 0.7215686440467834, 0.3176470696926117, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='glass.001' name_q='"glass.001"' material=bpy.data.materials['glass.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 0.75, 'texel0RGB': {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['06000508.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 0.022887999191880226, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.022887999191880226, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['06000508.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 0.022887999191880226, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.022887999191880226, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['06000508.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 0.022887999191880226, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.022887999191880226, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True} and texel0A {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['06000508.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 0.022887999191880226, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.022887999191880226, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True} into texel0 {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['06000508.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 0.022887999191880226, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.022887999191880226, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 0.75 into primitive (1.0, 1.0, 1.0, 0.75)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='glass' name_q='"glass"' material=bpy.data.materials['glass'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 0.699999988079071, 'texel0RGB': {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04001800.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 0.022888200357556343, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 0.022888200357556343, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04001800.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 0.022888200357556343, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 0.022888200357556343, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04001800.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 0.022888200357556343, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 0.022888200357556343, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True} and texel0A {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04001800.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 0.022888200357556343, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 0.022888200357556343, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True} into texel0 {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04001800.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 0.022888200357556343, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 0.022888200357556343, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 0.699999988079071 into primitive (1.0, 1.0, 1.0, 0.699999988079071)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria_headband' name_q='"saria_headband"' material=bpy.data.materials['saria_headband'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'texel0RGB': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['headband_ZZTUNIC.png'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['headband_ZZTUNIC.png'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['headband_ZZTUNIC.png'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} and texel0A {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['headband_ZZTUNIC.png'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} into texel0 {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['headband_ZZTUNIC.png'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mirror.surface' name_q='"mirror.surface"' material=bpy.data.materials['mirror.surface'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'texel0RGB': {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 0.05000000074505806, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.05000000074505806, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 0.05000000074505806, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.05000000074505806, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 0.05000000074505806, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.05000000074505806, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} and texel0A {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 0.05000000074505806, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.05000000074505806, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} into texel0 {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 0.05000000074505806, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.05000000074505806, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.009014400653541088, 0.0911124125123024, 0.39227452874183655, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ocarian.fairy' name_q='"ocarian.fairy"' material=bpy.data.materials['ocarian.fairy'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'texel0RGB': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['060091E0.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['060091E0.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['060091E0.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} and texel0A {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['060091E0.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} into texel0 {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['060091E0.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='string' name_q='"string"' material=bpy.data.materials['string'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'texel0RGB': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} and texel0A {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} into texel0 {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='metal.gauntlet' name_q='"metal.gauntlet"' material=bpy.data.materials['metal.gauntlet'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'texel0RGB': {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 0.019999999552965164, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.019999999552965164, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 0.019999999552965164, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.019999999552965164, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 0.019999999552965164, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.019999999552965164, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True} and texel0A {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 0.019999999552965164, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.019999999552965164, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True} into texel0 {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 0.019999999552965164, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.019999999552965164, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga <bpy_struct, Image("04000000.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_0601D340.003' name_q='"mtl_0601D340.003"' material=bpy.data.materials['mtl_0601D340.003'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'texel0RGB': {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 0.02500000037252903, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.02500000037252903, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 0.02500000037252903, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.02500000037252903, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 0.02500000037252903, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.02500000037252903, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} and texel0A {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 0.02500000037252903, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.02500000037252903, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} into texel0 {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 0.02500000037252903, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.02500000037252903, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.9058824181556702, 0.6941176652908325, 1.0, 1.0)
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga <bpy_struct, Image("04000000.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='yellow' name_q='"yellow"' material=bpy.data.materials['yellow'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_0': bpy.data...nodes["OBJEX_Color0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeA': {'type': 'normals'}, 'texel0RGB': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0600B168.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.6913820505142212, 0.4092666208744049, 0.0, 1.0)
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 0600B168.tga <bpy_struct, Image("0600B168.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='gauntlet.hand' name_q='"gauntlet.hand"' material=bpy.data.materials['gauntlet.hand'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_0': bpy.data...nodes["OBJEX_Color0"].outputs[0], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0RGB': {'texgen': False, 'uv_wrap_u': False, 'uv_scale_v': 0, 'image': bpy.data.images['0600BEE8.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_wrap_u': False, 'uv_scale_v': 0, 'image': bpy.data.images['0600BEE8.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_wrap_u': False, 'uv_scale_v': 0, 'image': bpy.data.images['0600BEE8.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False} and texel0A {'texgen': False, 'uv_wrap_u': False, 'uv_scale_v': 0, 'image': bpy.data.images['0600BEE8.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False} into texel0 {'texgen': False, 'uv_wrap_u': False, 'uv_scale_v': 0, 'image': bpy.data.images['0600BEE8.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='metal' name_q='"metal"' material=bpy.data.materials['metal'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'texel0RGB': {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 0.05000000074505806, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.05000000074505806, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 0.05000000074505806, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.05000000074505806, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 0.05000000074505806, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.05000000074505806, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True} and texel0A {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 0.05000000074505806, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.05000000074505806, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True} into texel0 {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 0.05000000074505806, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.05000000074505806, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga <bpy_struct, Image("04000000.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mouth.001' name_q='"mouth.001"' material=bpy.data.materials['mouth.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'texel0RGB': {'texgen': False, 'uv_wrap_u': False, 'uv_scale_v': 0, 'image': bpy.data.images['mouth.png'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_wrap_u': False, 'uv_scale_v': 0, 'image': bpy.data.images['mouth.png'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_wrap_u': False, 'uv_scale_v': 0, 'image': bpy.data.images['mouth.png'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False} and texel0A {'texgen': False, 'uv_wrap_u': False, 'uv_scale_v': 0, 'image': bpy.data.images['mouth.png'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False} into texel0 {'texgen': False, 'uv_wrap_u': False, 'uv_scale_v': 0, 'image': bpy.data.images['mouth.png'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='body' name_q='"body"' material=bpy.data.materials['body'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'texel0RGB': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0600B1A8.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0600B1A8.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0600B1A8.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} and texel0A {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0600B1A8.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} into texel0 {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0600B1A8.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='bow.string' name_q='"bow.string"' material=bpy.data.materials['bow.string'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'texel0RGB': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['skin.png'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['skin.png'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['skin.png'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} and texel0A {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['skin.png'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} into texel0 {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['skin.png'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ear' name_q='"ear"' material=bpy.data.materials['ear'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'texel0RGB': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['ear.png'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['ear.png'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['ear.png'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} and texel0A {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['ear.png'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} into texel0 {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['ear.png'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='geruto.insignia.003' name_q='"geruto.insignia.003"' material=bpy.data.materials['geruto.insignia.003'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'texel0RGB': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['06009968.tga.001'], 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['06009968.tga.001'], 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['06009968.tga.001'], 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False} and texel0A {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['06009968.tga.001'], 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False} into texel0 {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['06009968.tga.001'], 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='shield.back.002' name_q='"shield.back.002"' material=bpy.data.materials['shield.back.002'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'texel0RGB': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['06009768.tga.003'], 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['06009768.tga.003'], 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['06009768.tga.003'], 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True} and texel0A {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['06009768.tga.003'], 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True} into texel0 {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['06009768.tga.003'], 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_0602B338' name_q='"mtl_0602B338"' material=bpy.data.materials['mtl_0602B338'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'texel0RGB': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0602B338.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0602B338.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0602B338.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} and texel0A {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0602B338.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} into texel0 {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0602B338.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='sole' name_q='"sole"' material=bpy.data.materials['sole'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'texel0RGB': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0600C7E8.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0600C7E8.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0600C7E8.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} and texel0A {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0600C7E8.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} into texel0 {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0600C7E8.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='chain' name_q='"chain"' material=bpy.data.materials['chain'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'texel0RGB': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0600B2A8.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0600B2A8.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0600B2A8.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} and texel0A {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0600B2A8.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} into texel0 {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0600B2A8.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mirror' name_q='"mirror"' material=bpy.data.materials['mirror'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_0': bpy.data...nodes["OBJEX_Color0"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0RGB': {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['shieldtexture.png'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['shieldtexture.png'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['shieldtexture.png'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} and texel0A {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['shieldtexture.png'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} into texel0 {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['shieldtexture.png'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria_tunic_light' name_q='"saria_tunic_light"' material=bpy.data.materials['saria_tunic_light'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentA from bpy.data...nodes["OBJEX_EnvColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0RGB': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['I8_06005C40_ZZRGBA16.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['I8_06005C40_ZZRGBA16.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'environmentA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['I8_06005C40_ZZRGBA16.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} and texel0A {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['I8_06005C40_ZZRGBA16.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} into texel0 {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['I8_06005C40_ZZRGBA16.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged environmentRGB bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value and environmentA 1.0 into environment (0.011764707043766975, 0.1411764770746231, 0.011764707043766975, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='bolt' name_q='"bolt"' material=bpy.data.materials['bolt'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'texel0RGB': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0600C6E8.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0600C6E8.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0600C6E8.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} and texel0A {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0600C6E8.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} into texel0 {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0600C6E8.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Bow_String' name_q='"Bow_String"' material=bpy.data.materials['Bow_String'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_0': bpy.data...nodes["OBJEX_Color0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeA': {'type': 'normals'}, 'texel0RGB': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04001C40.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='fingers' name_q='"fingers"' material=bpy.data.materials['fingers'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'texel0RGB': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['06008280.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['06008280.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['06008280.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} and texel0A {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['06008280.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} into texel0 {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['06008280.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='handle' name_q='"handle"' material=bpy.data.materials['handle'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'texel0RGB': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0600B228.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0600B228.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0600B228.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} and texel0A {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0600B228.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} into texel0 {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0600B228.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='nose.001' name_q='"nose.001"' material=bpy.data.materials['nose.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'texel0RGB': {'texgen': False, 'uv_wrap_u': False, 'uv_scale_v': 0, 'image': bpy.data.images['nose.png'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_wrap_u': False, 'uv_scale_v': 0, 'image': bpy.data.images['nose.png'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_wrap_u': False, 'uv_scale_v': 0, 'image': bpy.data.images['nose.png'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False} and texel0A {'texgen': False, 'uv_wrap_u': False, 'uv_scale_v': 0, 'image': bpy.data.images['nose.png'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False} into texel0 {'texgen': False, 'uv_wrap_u': False, 'uv_scale_v': 0, 'image': bpy.data.images['nose.png'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='wing' name_q='"wing"' material=bpy.data.materials['wing'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'texel0RGB': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0600D0E8.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0600D0E8.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0600D0E8.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} and texel0A {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0600D0E8.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} into texel0 {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0600D0E8.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria_eyes' name_q='"saria_eyes"' material=bpy.data.materials['saria_eyes'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'texel0RGB': {'texgen': False, 'uv_wrap_u': False, 'uv_scale_v': 0, 'image': bpy.data.images['eyes.png'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_wrap_u': False, 'uv_scale_v': 0, 'image': bpy.data.images['eyes.png'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_wrap_u': False, 'uv_scale_v': 0, 'image': bpy.data.images['eyes.png'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False} and texel0A {'texgen': False, 'uv_wrap_u': False, 'uv_scale_v': 0, 'image': bpy.data.images['eyes.png'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False} into texel0 {'texgen': False, 'uv_wrap_u': False, 'uv_scale_v': 0, 'image': bpy.data.images['eyes.png'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='toes' name_q='"toes"' material=bpy.data.materials['toes'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'texel0RGB': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['06008280.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['06008280.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['06008280.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False} and texel0A {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['06008280.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False} into texel0 {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['06008280.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 06008280.tga <bpy_struct, Image("06008280.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='contents.001' name_q='"contents.001"' material=bpy.data.materials['contents.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 0.75, 'texel0RGB': {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['06000508.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 0.022888200357556343, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.022888200357556343, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['06000508.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 0.022888200357556343, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.022888200357556343, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['06000508.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 0.022888200357556343, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.022888200357556343, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True} and texel0A {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['06000508.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 0.022888200357556343, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.022888200357556343, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True} into texel0 {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['06000508.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 0.022888200357556343, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.022888200357556343, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 06000508.tga <bpy_struct, Image("06000508.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_0601D340.002' name_q='"mtl_0601D340.002"' material=bpy.data.materials['mtl_0601D340.002'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'texel0RGB': {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 0.02500000037252903, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.02500000037252903, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 0.02500000037252903, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.02500000037252903, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 0.02500000037252903, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.02500000037252903, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} and texel0A {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 0.02500000037252903, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.02500000037252903, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} into texel0 {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 0.02500000037252903, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.02500000037252903, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 0.0, 0.38287830352783203, 1.0)
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga <bpy_struct, Image("04000000.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='skin.belly' name_q='"skin.belly"' material=bpy.data.materials['skin.belly'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'texel0RGB': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['midriff.png'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['midriff.png'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['midriff.png'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False} and texel0A {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['midriff.png'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False} into texel0 {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['midriff.png'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='contents' name_q='"contents"' material=bpy.data.materials['contents'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 0.699999988079071, 'texel0RGB': {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04001800.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 0.022888200357556343, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 0.022888200357556343, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04001800.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 0.022888200357556343, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 0.022888200357556343, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04001800.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 0.022888200357556343, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 0.022888200357556343, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True} and texel0A {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04001800.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 0.022888200357556343, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 0.022888200357556343, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True} into texel0 {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04001800.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 0.022888200357556343, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 0.022888200357556343, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04001800.tga <bpy_struct, Image("04001800.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='string.002' name_q='"string.002"' material=bpy.data.materials['string.002'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'texel0RGB': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} and texel0A {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} into texel0 {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 06005600_ZZPAL1.tga <bpy_struct, Image("06005600_ZZPAL1.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='hylian.crest.002' name_q='"hylian.crest.002"' material=bpy.data.materials['hylian.crest.002'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'texel0RGB': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000400.tga.002'], 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000400.tga.002'], 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000400.tga.002'], 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True} and texel0A {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000400.tga.002'], 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True} into texel0 {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000400.tga.002'], 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='skin.color' name_q='"skin.color"' material=bpy.data.materials['skin.color'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'texel0RGB': {'texgen': True, 'uv_wrap_u': False, 'uv_scale_v': 0, 'image': bpy.data.images['skin_body'], 'uv_mirror_u': False, 'uv_scale_u_main': 0.05000000074505806, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.05000000074505806, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': True, 'uv_wrap_u': False, 'uv_scale_v': 0, 'image': bpy.data.images['skin_body'], 'uv_mirror_u': False, 'uv_scale_u_main': 0.05000000074505806, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.05000000074505806, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': True, 'uv_wrap_u': False, 'uv_scale_v': 0, 'image': bpy.data.images['skin_body'], 'uv_mirror_u': False, 'uv_scale_u_main': 0.05000000074505806, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.05000000074505806, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False} and texel0A {'texgen': True, 'uv_wrap_u': False, 'uv_scale_v': 0, 'image': bpy.data.images['skin_body'], 'uv_mirror_u': False, 'uv_scale_u_main': 0.05000000074505806, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.05000000074505806, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False} into texel0 {'texgen': True, 'uv_wrap_u': False, 'uv_scale_v': 0, 'image': bpy.data.images['skin_body'], 'uv_mirror_u': False, 'uv_scale_u_main': 0.05000000074505806, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.05000000074505806, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria_hair' name_q='"saria_hair"' material=bpy.data.materials['saria_hair'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'texel0RGB': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['hair.png'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['hair.png'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['hair.png'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} and texel0A {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['hair.png'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} into texel0 {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['hair.png'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ms.hilt' name_q='"ms.hilt"' material=bpy.data.materials['ms.hilt'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_0': bpy.data...nodes["OBJEX_Color0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeA': {'type': 'normals'}, 'texel0RGB': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['060090E8.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='jet' name_q='"jet"' material=bpy.data.materials['jet'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'texel0RGB': {'texgen': False, 'uv_wrap_u': False, 'uv_scale_v': 0, 'image': bpy.data.images['0600C8E8.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_wrap_u': False, 'uv_scale_v': 0, 'image': bpy.data.images['0600C8E8.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_wrap_u': False, 'uv_scale_v': 0, 'image': bpy.data.images['0600C8E8.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False} and texel0A {'texgen': False, 'uv_wrap_u': False, 'uv_scale_v': 0, 'image': bpy.data.images['0600C8E8.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False} into texel0 {'texgen': False, 'uv_wrap_u': False, 'uv_scale_v': 0, 'image': bpy.data.images['0600C8E8.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='hammer.grip' name_q='"hammer.grip"' material=bpy.data.materials['hammer.grip'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'texel0RGB': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04001A00.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04001A00.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04001A00.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} and texel0A {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04001A00.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} into texel0 {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04001A00.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.27000001072883606, 0.1346893459558487, 0.077030248939991, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='grip' name_q='"grip"' material=bpy.data.materials['grip'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'texel0RGB': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['060084E8.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['060084E8.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['060084E8.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} and texel0A {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['060084E8.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} into texel0 {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['060084E8.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ms.gem' name_q='"ms.gem"' material=bpy.data.materials['ms.gem'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'texel0RGB': {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 0.022887999191880226, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.03051760047674179, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 0.022887999191880226, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.03051760047674179, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 0.022887999191880226, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.03051760047674179, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True} and texel0A {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 0.022887999191880226, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.03051760047674179, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True} into texel0 {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 0.022887999191880226, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.03051760047674179, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 0.8187932968139648, 0.0, 1.0)
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga <bpy_struct, Image("04000000.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='empty.material' name_q='"empty.material"' material=bpy.data.materials['empty.material'] face_img=None
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_0601A380' name_q='"mtl_0601A380"' material=bpy.data.materials['mtl_0601A380'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'texel0RGB': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0601A380.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0601A380.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0601A380.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} and texel0A {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0601A380.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} into texel0 {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0601A380.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='red' name_q='"red"' material=bpy.data.materials['red'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_0': bpy.data...nodes["OBJEX_Color0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeA': {'type': 'normals'}, 'texel0RGB': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0600B168.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.6600000262260437, 0.0, 0.0, 1.0)
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 0600B168.tga <bpy_struct, Image("0600B168.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_0601D340.001' name_q='"mtl_0601D340.001"' material=bpy.data.materials['mtl_0601D340.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'texel0RGB': {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 0.02500000037252903, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.02500000037252903, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 0.02500000037252903, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.02500000037252903, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 0.02500000037252903, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.02500000037252903, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} and texel0A {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 0.02500000037252903, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.02500000037252903, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} into texel0 {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 0.02500000037252903, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.02500000037252903, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.9058824181556702, 0.6941176652908325, 1.0, 1.0)
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga <bpy_struct, Image("04000000.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='blue' name_q='"blue"' material=bpy.data.materials['blue'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeA': {'type': 'normals'}, 'texel0RGB': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['0600B168.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.05951124429702759, 0.05951124429702759, 1.0, 1.0)
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 0600B168.tga <bpy_struct, Image("0600B168.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='metal.red' name_q='"metal.red"' material=bpy.data.materials['metal.red'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'texel0RGB': {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 0.022887999191880226, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.03051760047674179, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 0.022887999191880226, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.03051760047674179, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 0.022887999191880226, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.03051760047674179, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True} and texel0A {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 0.022887999191880226, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.03051760047674179, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True} into texel0 {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 0.022887999191880226, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.03051760047674179, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.6784313917160034, 0.0, 0.0, 1.0)
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga <bpy_struct, Image("04000000.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='side' name_q='"side"' material=bpy.data.materials['side'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'texel0RGB': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['060085E8.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['060085E8.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['060085E8.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} and texel0A {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['060085E8.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} into texel0 {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['060085E8.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='geruto.insignia.001' name_q='"geruto.insignia.001"' material=bpy.data.materials['geruto.insignia.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'texel0RGB': {'texgen': False, 'uv_wrap_u': False, 'uv_scale_v': 0, 'image': bpy.data.images['0600A968.tga.001'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_wrap_u': False, 'uv_scale_v': 0, 'image': bpy.data.images['0600A968.tga.001'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_wrap_u': False, 'uv_scale_v': 0, 'image': bpy.data.images['0600A968.tga.001'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False} and texel0A {'texgen': False, 'uv_wrap_u': False, 'uv_scale_v': 0, 'image': bpy.data.images['0600A968.tga.001'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False} into texel0 {'texgen': False, 'uv_wrap_u': False, 'uv_scale_v': 0, 'image': bpy.data.images['0600A968.tga.001'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_mirror_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ms.metal' name_q='"ms.metal"' material=bpy.data.materials['ms.metal'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'texel0RGB': {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 0.05000000074505806, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.05000000074505806, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 0.05000000074505806, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.05000000074505806, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 0.05000000074505806, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.05000000074505806, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True} and texel0A {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 0.05000000074505806, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.05000000074505806, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True} into texel0 {'texgen': True, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 0.05000000074505806, 'texgen_linear': True, 'uv_map': False, 'uv_scale_v_main': 0.05000000074505806, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.7911859750747681, 0.9793669581413269, 1.0, 1.0)
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga <bpy_struct, Image("04000000.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ns.guard' name_q='"ns.guard"' material=bpy.data.materials['ns.guard'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'texel0RGB': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['06006CE0.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['06006CE0.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['06006CE0.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} and texel0A {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['06006CE0.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False} into texel0 {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['06006CE0.tga'], 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria_pants' name_q='"saria_pants"' material=bpy.data.materials['saria_pants'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentA from bpy.data...nodes["OBJEX_EnvColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0RGB': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['I8_06005D80_ZZRGBA16.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['I8_06005D80_ZZRGBA16.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'environmentA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['I8_06005D80_ZZRGBA16.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True} and texel0A {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['I8_06005D80_ZZRGBA16.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True} into texel0 {'texgen': False, 'uv_wrap_u': True, 'uv_scale_v': 0, 'image': bpy.data.images['I8_06005D80_ZZRGBA16.tga'], 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_map': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_mirror_v': True}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged environmentRGB bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value and environmentA 1.0 into environment (0.011764707043766975, 0.1411764770746231, 0.011764707043766975, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
INFO:objex.OBJEX_OT_export.progress_report_print:     (  1.1830 sec |   1.1820 sec) Finished exporting materials, now exporting skeletons/animations
INFO:objex.ObjexWriter.write: now exporting skeletons
INFO:objex.ObjexWriter.write:  ... and animations
INFO:objex.OBJEX_OT_export.progress_report_print:     (  1.1880 sec |   1.1870 sec) Objex Export Finished

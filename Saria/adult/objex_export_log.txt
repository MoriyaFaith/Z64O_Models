INFO:objex.OBJEX_OT_export.progress_report_print:   (  0.0000 sec |   0.0000 sec) Objex Export path: 'D:\\Games\\Modding\\ModLoader64\\Models\\Z64\\Saria\\adult\\object_link_boy.objex'
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Hookshot.Spike, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0090 sec |   0.0080 sec) Finished writing geometry of 'Hookshot.Spike'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating FPS.Hookshot, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0240 sec |   0.0130 sec) Finished writing geometry of 'FPS.Hookshot'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating FPS.Forearm.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0389 sec |   0.0130 sec) Finished writing geometry of 'FPS.Forearm.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Blade.3.Break, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0529 sec |   0.0120 sec) Finished writing geometry of 'Blade.3.Break'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Bow.String, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0629 sec |   0.0081 sec) Finished writing geometry of 'Bow.String'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating FPS.Forearm.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0799 sec |   0.0140 sec) Finished writing geometry of 'FPS.Forearm.R'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating FPS.Hand.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0969 sec |   0.0140 sec) Finished writing geometry of 'FPS.Hand.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating FPS.Hand.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1109 sec |   0.0130 sec) Finished writing geometry of 'FPS.Hand.R'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Hookshot.Chain, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1209 sec |   0.0080 sec) Finished writing geometry of 'Hookshot.Chain'.
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1239 sec |   0.0010 sec) Finished writing geometry of 'skeleton'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Blade.3, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1379 sec |   0.0130 sec) Finished writing geometry of 'Blade.3'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Broken.Blade.3, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1489 sec |   0.0100 sec) Finished writing geometry of 'Broken.Blade.3'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Fist.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1599 sec |   0.0090 sec) Finished writing geometry of 'Fist.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Fist.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1729 sec |   0.0110 sec) Finished writing geometry of 'Fist.R'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Bottle.Hand.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1843 sec |   0.0090 sec) Finished writing geometry of 'Bottle.Hand.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Hilt.2, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1994 sec |   0.0130 sec) Finished writing geometry of 'Hilt.2'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Hookshot, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2143 sec |   0.0130 sec) Finished writing geometry of 'Hookshot'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Hammer, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2298 sec |   0.0130 sec) Finished writing geometry of 'Hammer'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Bottle, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2418 sec |   0.0100 sec) Finished writing geometry of 'Bottle'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Gauntlet.Forearm.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2549 sec |   0.0120 sec) Finished writing geometry of 'Gauntlet.Forearm.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Gauntlet.Hand.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2684 sec |   0.0115 sec) Finished writing geometry of 'Gauntlet.Hand.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Gauntlet.Forearm.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2854 sec |   0.0160 sec) Finished writing geometry of 'Gauntlet.Forearm.R'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Gauntlet.Hand.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.3004 sec |   0.0130 sec) Finished writing geometry of 'Gauntlet.Hand.R'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Foot.2.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.3143 sec |   0.0119 sec) Finished writing geometry of 'Foot.2.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Foot.2.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.3252 sec |   0.0090 sec) Finished writing geometry of 'Foot.2.R'.
WARNING:objex.ObjexWriter.write_object: Mesh Gauntlet.Fist.L is not triangulated and will be triangulated automatically (for exporting only).
Preview accuracy (UVs, shading, vertex colors) is improved by using a triangulated mesh.
Note: mesh has no triangulate modifier
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.3389 sec |   0.0110 sec) Finished writing geometry of 'Gauntlet.Fist.L'.
WARNING:objex.ObjexWriter.write_object: Mesh Gauntlet.Fist.R is not triangulated and will be triangulated automatically (for exporting only).
Preview accuracy (UVs, shading, vertex colors) is improved by using a triangulated mesh.
Note: mesh has no triangulate modifier
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.3530 sec |   0.0131 sec) Finished writing geometry of 'Gauntlet.Fist.R'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Foot.3.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.3669 sec |   0.0121 sec) Finished writing geometry of 'Foot.3.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Foot.3.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.3800 sec |   0.0111 sec) Finished writing geometry of 'Foot.3.R'.
WARNING:objex.ObjexWriter.write_object: Mesh riggedmesh is not triangulated and will be triangulated automatically (for exporting only).
Preview accuracy (UVs, shading, vertex colors) is improved by using a triangulated mesh.
Note: mesh has no triangulate modifier
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.4239 sec |   0.0420 sec) Finished writing geometry of 'riggedmesh'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Sheath, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.4342 sec |   0.0090 sec) Finished writing geometry of 'Sheath'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Hilt.3, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.4452 sec |   0.0100 sec) Finished writing geometry of 'Hilt.3'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Ocarina.2, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.4552 sec |   0.0090 sec) Finished writing geometry of 'Ocarina.2'.
WARNING:objex.ObjexWriter.write_object: Object Bow was found to be rigged to skeleton but it also has an armature deform modifier using None
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Bow, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.4713 sec |   0.0141 sec) Finished writing geometry of 'Bow'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Shield.3, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.4825 sec |   0.0093 sec) Finished writing geometry of 'Shield.3'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Blade.2, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.4955 sec |   0.0110 sec) Finished writing geometry of 'Blade.2'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Shield.2, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.5144 sec |   0.0169 sec) Finished writing geometry of 'Shield.2'.
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.5163 sec |   0.5153 sec) Finished exporting geometry, now exporting materials
TRACE:objex.export_objex_mtl.write_mtl: Writing name='shoulder.strap2' name_q='"shoulder.strap2"' material=bpy.data.materials['shoulder.strap2'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06006B00.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06006B00.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06006B00.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06006B00.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06006B00.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}
WARNING:objex.export_objex_mtl.write_mtl: Image 06006B00.tga uses Color Space 'sRGB',
but the scene uses display_device='None'. This makes the preview less accurate.
The Color Space property can be found in the Image Editor.
Recommended value: Linear
TRACE:objex.export_objex_mtl.write_mtl: Writing name='blue' name_q='"blue"' material=bpy.data.materials['blue'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600B168.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.05951124429702759, 0.05951124429702759, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_0601A380' name_q='"mtl_0601A380"' material=bpy.data.materials['mtl_0601A380'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0601A380.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0601A380.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0601A380.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0601A380.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0601A380.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}
WARNING:objex.export_objex_mtl.write_mtl: Image 0601A380.tga uses Color Space 'sRGB',
but the scene uses display_device='None'. This makes the preview less accurate.
The Color Space property can be found in the Image Editor.
Recommended value: Linear
TRACE:objex.export_objex_mtl.write_mtl: Writing name='body' name_q='"body"' material=bpy.data.materials['body'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600B1A8.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600B1A8.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600B1A8.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600B1A8.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600B1A8.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='gauntlets' name_q='"gauntlets"' material=bpy.data.materials['gauntlets'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06007880.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06007880.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06007880.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06007880.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06007880.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mirror.surface' name_q='"mirror.surface"' material=bpy.data.materials['mirror.surface'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.07322438061237335, 0.2260245680809021, 0.6052478551864624, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ms.metal' name_q='"ms.metal"' material=bpy.data.materials['ms.metal'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': True, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': True, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.7911859750747681, 0.9793669581413269, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': True, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': True, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': True, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga <bpy_struct, Image("04000000.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ms.gem' name_q='"ms.gem"' material=bpy.data.materials['ms.gem'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 0.03051760047674179, 'uv_map': False, 'uv_scale_u_main': 0.022887999191880226, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': True, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 0.03051760047674179, 'uv_map': False, 'uv_scale_u_main': 0.022887999191880226, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': True, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 0.8187932968139648, 0.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 0.03051760047674179, 'uv_map': False, 'uv_scale_u_main': 0.022887999191880226, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': True, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 0.03051760047674179, 'uv_map': False, 'uv_scale_u_main': 0.022887999191880226, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': True, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 0.03051760047674179, 'uv_map': False, 'uv_scale_u_main': 0.022887999191880226, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': True, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga <bpy_struct, Image("04000000.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ear' name_q='"ear"' material=bpy.data.materials['ear'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['ear.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['ear.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['ear.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['ear.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['ear.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}
WARNING:objex.export_objex_mtl.write_mtl: Image ear.png uses Color Space 'sRGB',
but the scene uses display_device='None'. This makes the preview less accurate.
The Color Space property can be found in the Image Editor.
Recommended value: Linear
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria_headband' name_q='"saria_headband"' material=bpy.data.materials['saria_headband'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['headband_ZZTUNIC.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['headband_ZZTUNIC.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['headband_ZZTUNIC.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['headband_ZZTUNIC.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['headband_ZZTUNIC.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}
WARNING:objex.export_objex_mtl.write_mtl: Image headband_ZZTUNIC.png uses Color Space 'sRGB',
but the scene uses display_device='None'. This makes the preview less accurate.
The Color Space property can be found in the Image Editor.
Recommended value: Linear
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ns.guard' name_q='"ns.guard"' material=bpy.data.materials['ns.guard'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06006CE0.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06006CE0.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06006CE0.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06006CE0.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06006CE0.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='glove.back' name_q='"glove.back"' material=bpy.data.materials['glove.back'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06008080.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06008080.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06008080.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06008080.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06008080.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_0601D340.002' name_q='"mtl_0601D340.002"' material=bpy.data.materials['mtl_0601D340.002'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 0.02500000037252903, 'uv_map': False, 'uv_scale_u_main': 0.02500000037252903, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 0.02500000037252903, 'uv_map': False, 'uv_scale_u_main': 0.02500000037252903, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 0.0, 0.38287830352783203, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 0.02500000037252903, 'uv_map': False, 'uv_scale_u_main': 0.02500000037252903, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 0.02500000037252903, 'uv_map': False, 'uv_scale_u_main': 0.02500000037252903, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 0.02500000037252903, 'uv_map': False, 'uv_scale_u_main': 0.02500000037252903, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga <bpy_struct, Image("04000000.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mouth.001' name_q='"mouth.001"' material=bpy.data.materials['mouth.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['mouth.png'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['mouth.png'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['mouth.png'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['mouth.png'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['mouth.png'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='glove.palm' name_q='"glove.palm"' material=bpy.data.materials['glove.palm'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06007C80.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06007C80.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06007C80.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06007C80.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06007C80.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria_eyes' name_q='"saria_eyes"' material=bpy.data.materials['saria_eyes'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['eyes.png'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['eyes.png'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['eyes.png'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['eyes.png'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['eyes.png'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='gauntlet.arm' name_q='"gauntlet.arm"' material=bpy.data.materials['gauntlet.arm'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_0': bpy.data...nodes["OBJEX_Color0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600BAE8.tga'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600BAE8.tga'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600BAE8.tga'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600BAE8.tga'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600BAE8.tga'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='thighfront' name_q='"thighfront"' material=bpy.data.materials['thighfront'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['leg.png'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['leg.png'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['leg.png'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['leg.png'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['leg.png'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False}
WARNING:objex.export_objex_mtl.write_mtl: Image leg.png uses Color Space 'sRGB',
but the scene uses display_device='None'. This makes the preview less accurate.
The Color Space property can be found in the Image Editor.
Recommended value: Linear
TRACE:objex.export_objex_mtl.write_mtl: Writing name='string' name_q='"string"' material=bpy.data.materials['string'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='orange' name_q='"orange"' material=bpy.data.materials['orange'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600B168.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600B168.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 0.7216498851776123, 0.3172758221626282, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600B168.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600B168.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600B168.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 0600B168.tga <bpy_struct, Image("0600B168.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='metal.green' name_q='"metal.green"' material=bpy.data.materials['metal.green'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 0.03051760047674179, 'uv_map': False, 'uv_scale_u_main': 0.022887999191880226, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': True, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 0.03051760047674179, 'uv_map': False, 'uv_scale_u_main': 0.022887999191880226, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': True, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.0, 0.6795426607131958, 0.06581559777259827, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 0.03051760047674179, 'uv_map': False, 'uv_scale_u_main': 0.022887999191880226, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': True, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 0.03051760047674179, 'uv_map': False, 'uv_scale_u_main': 0.022887999191880226, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': True, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 0.03051760047674179, 'uv_map': False, 'uv_scale_u_main': 0.022887999191880226, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': True, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga <bpy_struct, Image("04000000.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='metal' name_q='"metal"' material=bpy.data.materials['metal'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': True, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': True, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': True, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': True, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': True, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga <bpy_struct, Image("04000000.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='geruto.insignia.003' name_q='"geruto.insignia.003"' material=bpy.data.materials['geruto.insignia.003'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06009968.tga.001'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06009968.tga.001'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06009968.tga.001'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06009968.tga.001'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06009968.tga.001'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Bow_String' name_q='"Bow_String"' material=bpy.data.materials['Bow_String'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_0': bpy.data...nodes["OBJEX_Color0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['04001C40.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='nose.001' name_q='"nose.001"' material=bpy.data.materials['nose.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['nose.png'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['nose.png'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['nose.png'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['nose.png'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['nose.png'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False}
WARNING:objex.export_objex_mtl.write_mtl: Image nose.png uses Color Space 'sRGB',
but the scene uses display_device='None'. This makes the preview less accurate.
The Color Space property can be found in the Image Editor.
Recommended value: Linear
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_0601D340.001' name_q='"mtl_0601D340.001"' material=bpy.data.materials['mtl_0601D340.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 0.02500000037252903, 'uv_map': False, 'uv_scale_u_main': 0.02500000037252903, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 0.02500000037252903, 'uv_map': False, 'uv_scale_u_main': 0.02500000037252903, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.9058824181556702, 0.6941176652908325, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 0.02500000037252903, 'uv_map': False, 'uv_scale_u_main': 0.02500000037252903, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 0.02500000037252903, 'uv_map': False, 'uv_scale_u_main': 0.02500000037252903, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 0.02500000037252903, 'uv_map': False, 'uv_scale_u_main': 0.02500000037252903, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga <bpy_struct, Image("04000000.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria_tunic_light' name_q='"saria_tunic_light"' material=bpy.data.materials['saria_tunic_light'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['tunic_ZZTUNIC.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['tunic_ZZTUNIC.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['tunic_ZZTUNIC.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['tunic_ZZTUNIC.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['tunic_ZZTUNIC.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ms.hilt' name_q='"ms.hilt"' material=bpy.data.materials['ms.hilt'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_0': bpy.data...nodes["OBJEX_Color0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['060090E8.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='cloak.back' name_q='"cloak.back"' material=bpy.data.materials['cloak.back'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['04001D40.tga.001'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['04001D40.tga.001'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['04001D40.tga.001'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['04001D40.tga.001'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['04001D40.tga.001'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='gauntlet.hand' name_q='"gauntlet.hand"' material=bpy.data.materials['gauntlet.hand'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_0': bpy.data...nodes["OBJEX_Color0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600BEE8.tga'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600BEE8.tga'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600BEE8.tga'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600BEE8.tga'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600BEE8.tga'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria_boot_bottom' name_q='"saria_boot_bottom"' material=bpy.data.materials['saria_boot_bottom'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['boot_ZZTUNIC.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['boot_ZZTUNIC.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['boot_ZZTUNIC.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['boot_ZZTUNIC.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['boot_ZZTUNIC.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='metal.gauntlet' name_q='"metal.gauntlet"' material=bpy.data.materials['metal.gauntlet'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 0.03051760047674179, 'uv_map': False, 'uv_scale_u_main': 0.022887999191880226, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': True, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 0.03051760047674179, 'uv_map': False, 'uv_scale_u_main': 0.022887999191880226, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': True, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 0.03051760047674179, 'uv_map': False, 'uv_scale_u_main': 0.022887999191880226, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': True, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 0.03051760047674179, 'uv_map': False, 'uv_scale_u_main': 0.022887999191880226, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': True, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 0.03051760047674179, 'uv_map': False, 'uv_scale_u_main': 0.022887999191880226, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': True, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga <bpy_struct, Image("04000000.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='jet' name_q='"jet"' material=bpy.data.materials['jet'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600C8E8.tga'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600C8E8.tga'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600C8E8.tga'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600C8E8.tga'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600C8E8.tga'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria_boot_top' name_q='"saria_boot_top"' material=bpy.data.materials['saria_boot_top'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['boot_ZZTUNIC.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['boot_ZZTUNIC.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['boot_ZZTUNIC.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['boot_ZZTUNIC.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['boot_ZZTUNIC.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture boot_ZZTUNIC.png <bpy_struct, Image("boot_ZZTUNIC.png")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='red' name_q='"red"' material=bpy.data.materials['red'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_0': bpy.data...nodes["OBJEX_Color0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600B168.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.6600000262260437, 0.0, 0.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 0600B168.tga <bpy_struct, Image("0600B168.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='shield.back' name_q='"shield.back"' material=bpy.data.materials['shield.back'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06009768.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': True, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06009768.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': True, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06009768.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': True, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06009768.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': True, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06009768.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': True, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_0602B338' name_q='"mtl_0602B338"' material=bpy.data.materials['mtl_0602B338'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0602B338.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0602B338.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0602B338.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0602B338.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0602B338.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='chain' name_q='"chain"' material=bpy.data.materials['chain'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600B2A8.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600B2A8.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600B2A8.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600B2A8.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600B2A8.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='cuffs' name_q='"cuffs"' material=bpy.data.materials['cuffs'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06007880.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06007880.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06007880.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06007880.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06007880.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 06007880.tga <bpy_struct, Image("06007880.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='sheath.tip' name_q='"sheath.tip"' material=bpy.data.materials['sheath.tip'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06008CE8.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06008CE8.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06008CE8.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06008CE8.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06008CE8.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria_hair' name_q='"saria_hair"' material=bpy.data.materials['saria_hair'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['hair.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['hair.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['hair.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['hair.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['hair.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}
WARNING:objex.export_objex_mtl.write_mtl: Image hair.png uses Color Space 'sRGB',
but the scene uses display_device='None'. This makes the preview less accurate.
The Color Space property can be found in the Image Editor.
Recommended value: Linear
TRACE:objex.export_objex_mtl.write_mtl: Writing name='blue.shine' name_q='"blue.shine"' material=bpy.data.materials['blue.shine'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.0, 0.009653568267822266, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga <bpy_struct, Image("04000000.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='grip' name_q='"grip"' material=bpy.data.materials['grip'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['060084E8.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['060084E8.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['060084E8.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['060084E8.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['060084E8.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='bolt' name_q='"bolt"' material=bpy.data.materials['bolt'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600C6E8.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600C6E8.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600C6E8.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600C6E8.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600C6E8.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='sheath' name_q='"sheath"' material=bpy.data.materials['sheath'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['060086E8.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['060086E8.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['060086E8.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['060086E8.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['060086E8.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ocarian.fairy' name_q='"ocarian.fairy"' material=bpy.data.materials['ocarian.fairy'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['060091E0.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['060091E0.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['060091E0.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['060091E0.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['060091E0.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_0601D340.003' name_q='"mtl_0601D340.003"' material=bpy.data.materials['mtl_0601D340.003'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 0.02500000037252903, 'uv_map': False, 'uv_scale_u_main': 0.02500000037252903, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 0.02500000037252903, 'uv_map': False, 'uv_scale_u_main': 0.02500000037252903, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.9058824181556702, 0.6941176652908325, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 0.02500000037252903, 'uv_map': False, 'uv_scale_u_main': 0.02500000037252903, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 0.02500000037252903, 'uv_map': False, 'uv_scale_u_main': 0.02500000037252903, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 0.02500000037252903, 'uv_map': False, 'uv_scale_u_main': 0.02500000037252903, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga <bpy_struct, Image("04000000.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='hammer.grip' name_q='"hammer.grip"' material=bpy.data.materials['hammer.grip'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['04001A00.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['04001A00.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.27000001072883606, 0.1346893459558487, 0.077030248939991, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['04001A00.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['04001A00.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['04001A00.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='contents' name_q='"contents"' material=bpy.data.materials['contents'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 0.699999988079071, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 0.022888200357556343, 'uv_map': False, 'uv_scale_u_main': 0.022888200357556343, 'uv_scale_v': 0, 'image': bpy.data.images['04001800.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': True, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 0.022888200357556343, 'uv_map': False, 'uv_scale_u_main': 0.022888200357556343, 'uv_scale_v': 0, 'image': bpy.data.images['04001800.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': True, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 0.022888200357556343, 'uv_map': False, 'uv_scale_u_main': 0.022888200357556343, 'uv_scale_v': 0, 'image': bpy.data.images['04001800.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': True, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 0.022888200357556343, 'uv_map': False, 'uv_scale_u_main': 0.022888200357556343, 'uv_scale_v': 0, 'image': bpy.data.images['04001800.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': True, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 0.022888200357556343, 'uv_map': False, 'uv_scale_u_main': 0.022888200357556343, 'uv_scale_v': 0, 'image': bpy.data.images['04001800.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': True, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='shiled.crest' name_q='"shiled.crest"' material=bpy.data.materials['shiled.crest'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['04000400.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['04000400.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['04000400.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['04000400.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['04000400.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='fingers' name_q='"fingers"' material=bpy.data.materials['fingers'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['hand.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['hand.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['hand.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['hand.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['hand.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}
WARNING:objex.export_objex_mtl.write_mtl: Image hand.png uses Color Space 'sRGB',
but the scene uses display_device='None'. This makes the preview less accurate.
The Color Space property can be found in the Image Editor.
Recommended value: Linear
TRACE:objex.export_objex_mtl.write_mtl: Writing name='side' name_q='"side"' material=bpy.data.materials['side'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['060085E8.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['060085E8.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['060085E8.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['060085E8.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['060085E8.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='geruto.insignia.001' name_q='"geruto.insignia.001"' material=bpy.data.materials['geruto.insignia.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600A968.tga.001'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600A968.tga.001'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600A968.tga.001'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600A968.tga.001'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600A968.tga.001'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='wing' name_q='"wing"' material=bpy.data.materials['wing'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600D0E8.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600D0E8.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600D0E8.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600D0E8.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600D0E8.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria_cloak' name_q='"saria_cloak"' material=bpy.data.materials['saria_cloak'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['04001C40.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['04001C40.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['04001C40.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['04001C40.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['04001C40.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04001C40.tga <bpy_struct, Image("04001C40.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='buckle.001' name_q='"buckle.001"' material=bpy.data.materials['buckle.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06005740.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06005740.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06005740.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06005740.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06005740.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False}
WARNING:objex.export_objex_mtl.write_mtl: Image 06005740.tga uses Color Space 'sRGB',
but the scene uses display_device='None'. This makes the preview less accurate.
The Color Space property can be found in the Image Editor.
Recommended value: Linear
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria_tunic_dark' name_q='"saria_tunic_dark"' material=bpy.data.materials['saria_tunic_dark'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['sleeves_headband_ZZTUNIC.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['sleeves_headband_ZZTUNIC.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['sleeves_headband_ZZTUNIC.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['sleeves_headband_ZZTUNIC.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['sleeves_headband_ZZTUNIC.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='thighback' name_q='"thighback"' material=bpy.data.materials['thighback'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['skin.png'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['skin.png'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['skin.png'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['skin.png'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['skin.png'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False}
WARNING:objex.export_objex_mtl.write_mtl: Image skin.png uses Color Space 'sRGB',
but the scene uses display_device='None'. This makes the preview less accurate.
The Color Space property can be found in the Image Editor.
Recommended value: Linear
TRACE:objex.export_objex_mtl.write_mtl: Writing name='metal.red' name_q='"metal.red"' material=bpy.data.materials['metal.red'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 0.03051760047674179, 'uv_map': False, 'uv_scale_u_main': 0.022887999191880226, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': True, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 0.03051760047674179, 'uv_map': False, 'uv_scale_u_main': 0.022887999191880226, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': True, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.6784313917160034, 0.0, 0.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 0.03051760047674179, 'uv_map': False, 'uv_scale_u_main': 0.022887999191880226, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': True, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 0.03051760047674179, 'uv_map': False, 'uv_scale_u_main': 0.022887999191880226, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': True, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 0.03051760047674179, 'uv_map': False, 'uv_scale_u_main': 0.022887999191880226, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': True, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga <bpy_struct, Image("04000000.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='shoulder.strap' name_q='"shoulder.strap"' material=bpy.data.materials['shoulder.strap'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06005B40.tga.001'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06005B40.tga.001'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06005B40.tga.001'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06005B40.tga.001'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['06005B40.tga.001'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}
WARNING:objex.export_objex_mtl.write_mtl: Image 06005B40.tga.001 uses Color Space 'sRGB',
but the scene uses display_device='None'. This makes the preview less accurate.
The Color Space property can be found in the Image Editor.
Recommended value: Linear
TRACE:objex.export_objex_mtl.write_mtl: Writing name='bow.string' name_q='"bow.string"' material=bpy.data.materials['bow.string'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['skin.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['skin.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['skin.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['skin.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['skin.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture skin.png <bpy_struct, Image("skin.png")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='metal.shine' name_q='"metal.shine"' material=bpy.data.materials['metal.shine'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 0.03099999949336052, 'uv_map': False, 'uv_scale_u_main': 0.023000000044703484, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 0.03099999949336052, 'uv_map': False, 'uv_scale_u_main': 0.023000000044703484, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 0.03099999949336052, 'uv_map': False, 'uv_scale_u_main': 0.023000000044703484, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 0.03099999949336052, 'uv_map': False, 'uv_scale_u_main': 0.023000000044703484, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 0.03099999949336052, 'uv_map': False, 'uv_scale_u_main': 0.023000000044703484, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga <bpy_struct, Image("04000000.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='glass' name_q='"glass"' material=bpy.data.materials['glass'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 0.699999988079071, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 0.022888200357556343, 'uv_map': False, 'uv_scale_u_main': 0.022888200357556343, 'uv_scale_v': 0, 'image': bpy.data.images['04001800.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': True, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 0.022888200357556343, 'uv_map': False, 'uv_scale_u_main': 0.022888200357556343, 'uv_scale_v': 0, 'image': bpy.data.images['04001800.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': True, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 0.699999988079071 into primitive (1.0, 1.0, 1.0, 0.699999988079071)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 0.022888200357556343, 'uv_map': False, 'uv_scale_u_main': 0.022888200357556343, 'uv_scale_v': 0, 'image': bpy.data.images['04001800.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': True, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 0.022888200357556343, 'uv_map': False, 'uv_scale_u_main': 0.022888200357556343, 'uv_scale_v': 0, 'image': bpy.data.images['04001800.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': True, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 0.022888200357556343, 'uv_map': False, 'uv_scale_u_main': 0.022888200357556343, 'uv_scale_v': 0, 'image': bpy.data.images['04001800.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': True, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': True}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04001800.tga <bpy_struct, Image("04001800.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria_hands' name_q='"saria_hands"' material=bpy.data.materials['saria_hands'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['hand.png'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['hand.png'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['hand.png'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['hand.png'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['hand.png'], 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture hand.png <bpy_struct, Image("hand.png")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='sole' name_q='"sole"' material=bpy.data.materials['sole'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600C7E8.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600C7E8.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600C7E8.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600C7E8.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600C7E8.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mirror' name_q='"mirror"' material=bpy.data.materials['mirror'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_0': bpy.data...nodes["OBJEX_Color0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['shieldtexture.png'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['shieldtexture.png'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['shieldtexture.png'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['shieldtexture.png'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['shieldtexture.png'], 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='handle' name_q='"handle"' material=bpy.data.materials['handle'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600B228.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600B228.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600B228.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600B228.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600B228.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='cloak.gem' name_q='"cloak.gem"' material=bpy.data.materials['cloak.gem'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': True, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga <bpy_struct, Image("04000000.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='yellow' name_q='"yellow"' material=bpy.data.materials['yellow'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_0': bpy.data...nodes["OBJEX_Color0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['0600B168.tga'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.6786091923713684, 0.5721607208251953, 0.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 0600B168.tga <bpy_struct, Image("0600B168.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='undershirt.limbs' name_q='"undershirt.limbs"' material=bpy.data.materials['undershirt.limbs'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['sleeves_headband_ZZTUNIC.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['sleeves_headband_ZZTUNIC.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['sleeves_headband_ZZTUNIC.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['sleeves_headband_ZZTUNIC.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['sleeves_headband_ZZTUNIC.png'], 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_v': False, 'texgen': False, 'uv_wrap_u': True, 'uv_layer': '', 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture sleeves_headband_ZZTUNIC.png <bpy_struct, Image("sleeves_headband_ZZTUNIC.png")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ms.insignia' name_q='"ms.insignia"' material=bpy.data.materials['ms.insignia'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': True, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False}, 'texel0A': {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': True, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': True, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False} and texel0A {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': True, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False} into texel0 {'uv_scale_u': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'texgen_linear': True, 'uv_wrap_v': False, 'uv_mirror_v': False, 'texgen': True, 'uv_wrap_u': False, 'uv_layer': '', 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga <bpy_struct, Image("04000000.tga")>
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.6374 sec |   0.6363 sec) Finished exporting materials, now exporting skeletons/animations
INFO:objex.ObjexWriter.write: now exporting skeletons
INFO:objex.ObjexWriter.write:  ... and animations
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.6423 sec |   0.6413 sec) Objex Export Finished

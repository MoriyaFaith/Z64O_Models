WARNING:objex.OBJEX_OT_export.execute: Scene uses display_device='sRGB' which changes how colors are displayed in the viewport, reducing the preview accuracy.
This can be changed under Color Management in Scene properties.
Note that this should also be kept consistent with the Color Space property of image texture nodes (display_device="None", Color Space="Linear").
In Blender 2.7x, "Color Space" can be found in the Image Editor.
Recommended value: None
INFO:objex.OBJEX_OT_export.progress_report_print:   (  0.0000 sec |   0.0000 sec) Objex Export path: 'D:\\Games\\Modding\\Zelda 64\\Models\\Z64O_Models\\Saria\\adult\\object_link_boy.objex'
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Hookshot.Spike, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0100 sec |   0.0090 sec) Finished writing geometry of 'Hookshot.Spike'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating FPS.Hookshot.OLD, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0274 sec |   0.0130 sec) Finished writing geometry of 'FPS.Hookshot.OLD'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating FPS.Forearm.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0431 sec |   0.0138 sec) Finished writing geometry of 'FPS.Forearm.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Blade.3.Break, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0542 sec |   0.0090 sec) Finished writing geometry of 'Blade.3.Break'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Bow.String, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0661 sec |   0.0100 sec) Finished writing geometry of 'Bow.String'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating FPS.Forearm.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0802 sec |   0.0121 sec) Finished writing geometry of 'FPS.Forearm.R'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating FPS.Hand.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0970 sec |   0.0140 sec) Finished writing geometry of 'FPS.Hand.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating FPS.Hand.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1128 sec |   0.0138 sec) Finished writing geometry of 'FPS.Hand.R'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Hookshot.Chain, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1228 sec |   0.0080 sec) Finished writing geometry of 'Hookshot.Chain'.
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1258 sec |   0.0010 sec) Finished writing geometry of 'skeleton'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Bottle, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1388 sec |   0.0120 sec) Finished writing geometry of 'Bottle'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Broken.Blade.3, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1488 sec |   0.0080 sec) Finished writing geometry of 'Broken.Blade.3'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Fist.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1618 sec |   0.0100 sec) Finished writing geometry of 'Fist.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Fist.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1738 sec |   0.0100 sec) Finished writing geometry of 'Fist.R'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Bottle.Hand.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1858 sec |   0.0100 sec) Finished writing geometry of 'Bottle.Hand.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Gauntlet.Forearm.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2008 sec |   0.0130 sec) Finished writing geometry of 'Gauntlet.Forearm.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Gauntlet.Hand.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2148 sec |   0.0110 sec) Finished writing geometry of 'Gauntlet.Hand.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Gauntlet.Forearm.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2308 sec |   0.0120 sec) Finished writing geometry of 'Gauntlet.Forearm.R'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Gauntlet.Hand.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2450 sec |   0.0110 sec) Finished writing geometry of 'Gauntlet.Hand.R'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Gauntlet.Fist.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2600 sec |   0.0120 sec) Finished writing geometry of 'Gauntlet.Fist.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Gauntlet.Fist.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2730 sec |   0.0110 sec) Finished writing geometry of 'Gauntlet.Fist.R'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating riggedmesh, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.3272 sec |   0.0510 sec) Finished writing geometry of 'riggedmesh'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Sheath, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.3388 sec |   0.0095 sec) Finished writing geometry of 'Sheath'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Ocarina.2, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.3508 sec |   0.0100 sec) Finished writing geometry of 'Ocarina.2'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Bow, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.3692 sec |   0.0160 sec) Finished writing geometry of 'Bow'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Shield.2, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.3832 sec |   0.0090 sec) Finished writing geometry of 'Shield.2'.
WARNING:objex.ObjexWriter.write_object: Mesh Bottle.ALT is not triangulated and will be triangulated automatically (for exporting only).
Preview accuracy (UVs, shading, vertex colors) is improved by using a triangulated mesh.
Note: mesh has no triangulate modifier
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.4006 sec |   0.0141 sec) Finished writing geometry of 'Bottle.ALT'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Blade.2, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.4166 sec |   0.0130 sec) Finished writing geometry of 'Blade.2'.
WARNING:objex.ObjexWriter.write_object: Object Blade.3 was found to be rigged to skeleton but it also has an armature deform modifier using None
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Blade.3, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.4305 sec |   0.0090 sec) Finished writing geometry of 'Blade.3'.
WARNING:objex.ObjexWriter.write_object: Object Hilt.3 was found to be rigged to skeleton but it also has an armature deform modifier using None
WARNING:objex.ObjexWriter.write_object: Mesh Hilt.3 is not triangulated and will be triangulated automatically (for exporting only).
Preview accuracy (UVs, shading, vertex colors) is improved by using a triangulated mesh.
Note: mesh has no triangulate modifier
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.4491 sec |   0.0160 sec) Finished writing geometry of 'Hilt.3'.
WARNING:objex.ObjexWriter.write_object: Mesh Longshot is not triangulated and will be triangulated automatically (for exporting only).
Preview accuracy (UVs, shading, vertex colors) is improved by using a triangulated mesh.
Note: mesh has no triangulate modifier
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.4739 sec |   0.0210 sec) Finished writing geometry of 'Longshot'.
WARNING:objex.ObjexWriter.write_object: Mesh Hookshot is not triangulated and will be triangulated automatically (for exporting only).
Preview accuracy (UVs, shading, vertex colors) is improved by using a triangulated mesh.
Note: mesh has no triangulate modifier
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.4991 sec |   0.0222 sec) Finished writing geometry of 'Hookshot'.
WARNING:objex.ObjexWriter.write_object: Mesh Hammer is not triangulated and will be triangulated automatically (for exporting only).
Preview accuracy (UVs, shading, vertex colors) is improved by using a triangulated mesh.
Note: mesh has no triangulate modifier
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.5171 sec |   0.0150 sec) Finished writing geometry of 'Hammer'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Shield.3, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.5313 sec |   0.0122 sec) Finished writing geometry of 'Shield.3'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Hilt.2, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.5473 sec |   0.0151 sec) Finished writing geometry of 'Hilt.2'.
WARNING:objex.ObjexWriter.write_object: Object Foot.3.L was found to be rigged to skeleton but it also has an armature deform modifier using None
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Foot.3.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.5623 sec |   0.0130 sec) Finished writing geometry of 'Foot.3.L'.
WARNING:objex.ObjexWriter.write_object: Object Foot.3.R was found to be rigged to skeleton but it also has an armature deform modifier using None
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Foot.3.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.5783 sec |   0.0140 sec) Finished writing geometry of 'Foot.3.R'.
WARNING:objex.ObjexWriter.write_object: Object Foot.2.L was found to be rigged to skeleton but it also has an armature deform modifier using None
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Foot.2.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.5933 sec |   0.0131 sec) Finished writing geometry of 'Foot.2.L'.
WARNING:objex.ObjexWriter.write_object: Object Foot.2.R was found to be rigged to skeleton but it also has an armature deform modifier using None
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Foot.2.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.6069 sec |   0.0116 sec) Finished writing geometry of 'Foot.2.R'.
WARNING:objex.ObjexWriter.write_object: Mesh FPS.Hookshot is not triangulated and will be triangulated automatically (for exporting only).
Preview accuracy (UVs, shading, vertex colors) is improved by using a triangulated mesh.
Note: mesh has no triangulate modifier
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.6339 sec |   0.0220 sec) Finished writing geometry of 'FPS.Hookshot'.
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.6369 sec |   0.6359 sec) Finished exporting geometry, now exporting materials
TRACE:objex.export_objex_mtl.write_mtl: Writing name='glass.001' name_q='"glass.001"' material=bpy.data.materials['glass.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': True, 'image': bpy.data.images['06000508.tga'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 0.02500000037252903, 'uv_layer': '', 'uv_scale_u_main': 0.02500000037252903}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': True, 'image': bpy.data.images['06000508.tga'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 0.02500000037252903, 'uv_layer': '', 'uv_scale_u_main': 0.02500000037252903}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 0.75, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 0.75 into primitive (1.0, 1.0, 1.0, 0.75)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': True, 'image': bpy.data.images['06000508.tga'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 0.02500000037252903, 'uv_layer': '', 'uv_scale_u_main': 0.02500000037252903} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': True, 'image': bpy.data.images['06000508.tga'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 0.02500000037252903, 'uv_layer': '', 'uv_scale_u_main': 0.02500000037252903} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': True, 'image': bpy.data.images['06000508.tga'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 0.02500000037252903, 'uv_layer': '', 'uv_scale_u_main': 0.02500000037252903}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='chain' name_q='"chain"' material=bpy.data.materials['chain'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['0600B2A8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['0600B2A8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['0600B2A8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['0600B2A8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['0600B2A8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='glass.000' name_q='"glass.000"' material=bpy.data.materials['glass.000'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': True, 'image': bpy.data.images['liquid.png'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 0.02500000037252903, 'uv_layer': '', 'uv_scale_u_main': 0.02500000037252903}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': True, 'image': bpy.data.images['liquid.png'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 0.02500000037252903, 'uv_layer': '', 'uv_scale_u_main': 0.02500000037252903}, 'primitiveA': 0.75, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': True, 'image': bpy.data.images['liquid.png'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 0.02500000037252903, 'uv_layer': '', 'uv_scale_u_main': 0.02500000037252903} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': True, 'image': bpy.data.images['liquid.png'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 0.02500000037252903, 'uv_layer': '', 'uv_scale_u_main': 0.02500000037252903} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': True, 'image': bpy.data.images['liquid.png'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 0.02500000037252903, 'uv_layer': '', 'uv_scale_u_main': 0.02500000037252903}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria_tunic_dark' name_q='"saria_tunic_dark"' material=bpy.data.materials['saria_tunic_dark'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['sleeves_headband_ZZTUNIC.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['sleeves_headband_ZZTUNIC.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['sleeves_headband_ZZTUNIC.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['sleeves_headband_ZZTUNIC.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['sleeves_headband_ZZTUNIC.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ms.hilt' name_q='"ms.hilt"' material=bpy.data.materials['ms.hilt'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_0': bpy.data...nodes["OBJEX_Color0"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['060090E8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='geruto.insignia.001' name_q='"geruto.insignia.001"' material=bpy.data.materials['geruto.insignia.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['0600A968.tga.001'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['0600A968.tga.001'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['0600A968.tga.001'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['0600A968.tga.001'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['0600A968.tga.001'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='glove_back' name_q='"glove_back"' material=bpy.data.materials['glove_back'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06008080.tga.001'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06008080.tga.001'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06008080.tga.001'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06008080.tga.001'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06008080.tga.001'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria_headband' name_q='"saria_headband"' material=bpy.data.materials['saria_headband'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'texel0A': {'uv_wrap_v': False, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['headband_ZZTUNIC.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': False, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['headband_ZZTUNIC.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': False, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['headband_ZZTUNIC.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': False, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['headband_ZZTUNIC.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': False, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['headband_ZZTUNIC.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='geruto.insignia.003' name_q='"geruto.insignia.003"' material=bpy.data.materials['geruto.insignia.003'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': False, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06009968.tga.001'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': False, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06009968.tga.001'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': False, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06009968.tga.001'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': False, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06009968.tga.001'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': False, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06009968.tga.001'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='metal.gauntlet' name_q='"metal.gauntlet"' material=bpy.data.materials['metal.gauntlet'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': True, 'image': bpy.data.images['04000000.tga'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': True, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 0.03051760047674179, 'uv_layer': '', 'uv_scale_u_main': 0.022887999191880226}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': True, 'image': bpy.data.images['04000000.tga'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': True, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 0.03051760047674179, 'uv_layer': '', 'uv_scale_u_main': 0.022887999191880226}, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': True, 'image': bpy.data.images['04000000.tga'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': True, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 0.03051760047674179, 'uv_layer': '', 'uv_scale_u_main': 0.022887999191880226} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': True, 'image': bpy.data.images['04000000.tga'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': True, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 0.03051760047674179, 'uv_layer': '', 'uv_scale_u_main': 0.022887999191880226} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': True, 'image': bpy.data.images['04000000.tga'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': True, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 0.03051760047674179, 'uv_layer': '', 'uv_scale_u_main': 0.022887999191880226}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='bow.string' name_q='"bow.string"' material=bpy.data.materials['bow.string'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['skin.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['skin.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['skin.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['skin.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['skin.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='hookshot.chain_v4' name_q='"hookshot.chain_v4"' material=bpy.data.materials['hookshot.chain_v4'] face_img=None
WARNING:objex.export_objex_mtl.write_mtl: Material bpy.data.materials['hookshot.chain_v4'] use_nodes but not is_objex_material
(did you copy-paste nodes from another material instead of clicking the "Init..." button?),
nodes will be ignored and the face image will be used
(for now, to use the current nodes you can make a temporary duplicate of the material,
click the "Init..." button on the original material, delete all the generated nodes
and paste the actual nodes from the duplicate)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='sheath' name_q='"sheath"' material=bpy.data.materials['sheath'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': False, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['060086E8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': False, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['060086E8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': False, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['060086E8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': False, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['060086E8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': False, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['060086E8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='bg.end.2_v4' name_q='"bg.end.2_v4"' material=bpy.data.materials['bg.end.2_v4'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['biggoron_handle.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['biggoron_handle.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.011612245813012123, 0.0802198275923729, 0.4969330132007599, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['biggoron_handle.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['biggoron_handle.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['biggoron_handle.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='hammer.grip' name_q='"hammer.grip"' material=bpy.data.materials['hammer.grip'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['04001A00.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['04001A00.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.27000001072883606, 0.1346893459558487, 0.077030248939991, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['04001A00.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['04001A00.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['04001A00.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='buckle.001' name_q='"buckle.001"' material=bpy.data.materials['buckle.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['06005740.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['06005740.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['06005740.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['06005740.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['06005740.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='metal' name_q='"metal"' material=bpy.data.materials['metal'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': True, 'image': bpy.data.images['04000000.tga'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': True, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_layer': '', 'uv_scale_u_main': 0.05000000074505806}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': True, 'image': bpy.data.images['04000000.tga'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': True, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_layer': '', 'uv_scale_u_main': 0.05000000074505806}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': True, 'image': bpy.data.images['04000000.tga'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': True, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_layer': '', 'uv_scale_u_main': 0.05000000074505806} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': True, 'image': bpy.data.images['04000000.tga'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': True, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_layer': '', 'uv_scale_u_main': 0.05000000074505806} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': True, 'image': bpy.data.images['04000000.tga'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': True, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_layer': '', 'uv_scale_u_main': 0.05000000074505806}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga <bpy_struct, Image("04000000.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='nose.001' name_q='"nose.001"' material=bpy.data.materials['nose.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['nose.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['nose.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['nose.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['nose.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['nose.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='side' name_q='"side"' material=bpy.data.materials['side'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['060085E8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['060085E8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['060085E8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['060085E8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['060085E8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='bg.handle_v4' name_q='"bg.handle_v4"' material=bpy.data.materials['bg.handle_v4'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['biggoron_handle.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['biggoron_handle.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.2622506618499756, 0.2622506618499756, 0.10702310502529144, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['biggoron_handle.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['biggoron_handle.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['biggoron_handle.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture biggoron_handle.png <bpy_struct, Image("biggoron_handle.png")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='orange' name_q='"orange"' material=bpy.data.materials['orange'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['0600B168.tga'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['0600B168.tga'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 0.7215686440467834, 0.3176470696926117, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['0600B168.tga'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['0600B168.tga'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['0600B168.tga'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria_eyes' name_q='"saria_eyes"' material=bpy.data.materials['saria_eyes'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['eyes.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['eyes.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['eyes.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['eyes.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['eyes.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Bow_String' name_q='"Bow_String"' material=bpy.data.materials['Bow_String'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_0': bpy.data...nodes["OBJEX_Color0"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['04001C40.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='blue' name_q='"blue"' material=bpy.data.materials['blue'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['0600B168.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.05951124429702759, 0.05951124429702759, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 0600B168.tga <bpy_struct, Image("0600B168.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='goron.symbol_v4' name_q='"goron.symbol_v4"' material=bpy.data.materials['goron.symbol_v4'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['06009E60_ZZFORCERGBA16.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['06009E60_ZZFORCERGBA16.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['06009E60_ZZFORCERGBA16.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['06009E60_ZZFORCERGBA16.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['06009E60_ZZFORCERGBA16.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ns.guard' name_q='"ns.guard"' material=bpy.data.materials['ns.guard'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06006CE0.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06006CE0.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06006CE0.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06006CE0.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06006CE0.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='grip' name_q='"grip"' material=bpy.data.materials['grip'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['060084E8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['060084E8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['060084E8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['060084E8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['060084E8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='metal.iron' name_q='"metal.iron"' material=bpy.data.materials['metal.iron'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': True, 'image': bpy.data.images['04000000.tga'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': True, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_layer': '', 'uv_scale_u_main': 0.05000000074505806}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': True, 'image': bpy.data.images['04000000.tga'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': True, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_layer': '', 'uv_scale_u_main': 0.05000000074505806}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.04678334295749664, 0.04678337275981903, 0.0889815241098404, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': True, 'image': bpy.data.images['04000000.tga'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': True, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_layer': '', 'uv_scale_u_main': 0.05000000074505806} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': True, 'image': bpy.data.images['04000000.tga'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': True, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_layer': '', 'uv_scale_u_main': 0.05000000074505806} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': True, 'image': bpy.data.images['04000000.tga'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': True, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_layer': '', 'uv_scale_u_main': 0.05000000074505806}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga <bpy_struct, Image("04000000.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='hylian.crest.002' name_q='"hylian.crest.002"' material=bpy.data.materials['hylian.crest.002'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['04000400.tga.002'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['04000400.tga.002'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['04000400.tga.002'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['04000400.tga.002'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['04000400.tga.002'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='yellow' name_q='"yellow"' material=bpy.data.materials['yellow'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_0': bpy.data...nodes["OBJEX_Color0"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['0600B168.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.6913820505142212, 0.4092666208744049, 0.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 0600B168.tga <bpy_struct, Image("0600B168.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='gauntlet.hand' name_q='"gauntlet.hand"' material=bpy.data.materials['gauntlet.hand'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_0': bpy.data...nodes["OBJEX_Color0"].outputs[0], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0RGB': {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['0600BEE8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'texel0A': {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['0600BEE8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['0600BEE8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['0600BEE8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['0600BEE8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='shoulder.strap' name_q='"shoulder.strap"' material=bpy.data.materials['shoulder.strap'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06005B40.tga.001'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06005B40.tga.001'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06005B40.tga.001'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06005B40.tga.001'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06005B40.tga.001'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='bg.end.1_v4' name_q='"bg.end.1_v4"' material=bpy.data.materials['bg.end.1_v4'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['biggoron_handle.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['biggoron_handle.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.33245155215263367, 0.33245155215263367, 0.33245155215263367, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['biggoron_handle.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['biggoron_handle.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['biggoron_handle.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture biggoron_handle.png <bpy_struct, Image("biggoron_handle.png")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria_hair' name_q='"saria_hair"' material=bpy.data.materials['saria_hair'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['hair.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['hair.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['hair.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['hair.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['hair.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='shoulder.strap2' name_q='"shoulder.strap2"' material=bpy.data.materials['shoulder.strap2'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06006B00.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06006B00.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06006B00.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06006B00.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06006B00.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='undershirt.limbs' name_q='"undershirt.limbs"' material=bpy.data.materials['undershirt.limbs'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['sleeves_headband_ZZTUNIC.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['sleeves_headband_ZZTUNIC.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['sleeves_headband_ZZTUNIC.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['sleeves_headband_ZZTUNIC.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['sleeves_headband_ZZTUNIC.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture sleeves_headband_ZZTUNIC.png <bpy_struct, Image("sleeves_headband_ZZTUNIC.png")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='material-01EBFB21.001' name_q='"material-01EBFB21.001"' material=bpy.data.materials['material-01EBFB21.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['3ds_hoverboots.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['3ds_hoverboots.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['3ds_hoverboots.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['3ds_hoverboots.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['3ds_hoverboots.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ms.gem' name_q='"ms.gem"' material=bpy.data.materials['ms.gem'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': True, 'image': bpy.data.images['04000000.tga'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': True, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 0.03051760047674179, 'uv_layer': '', 'uv_scale_u_main': 0.022887999191880226}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': True, 'image': bpy.data.images['04000000.tga'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': True, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 0.03051760047674179, 'uv_layer': '', 'uv_scale_u_main': 0.022887999191880226}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 0.8187932968139648, 0.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': True, 'image': bpy.data.images['04000000.tga'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': True, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 0.03051760047674179, 'uv_layer': '', 'uv_scale_u_main': 0.022887999191880226} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': True, 'image': bpy.data.images['04000000.tga'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': True, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 0.03051760047674179, 'uv_layer': '', 'uv_scale_u_main': 0.022887999191880226} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': True, 'image': bpy.data.images['04000000.tga'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': True, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 0.03051760047674179, 'uv_layer': '', 'uv_scale_u_main': 0.022887999191880226}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga <bpy_struct, Image("04000000.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='glove_palm' name_q='"glove_palm"' material=bpy.data.materials['glove_palm'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['0600D2B8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['0600D2B8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['0600D2B8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['0600D2B8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['0600D2B8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='body' name_q='"body"' material=bpy.data.materials['body'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['0600B1A8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['0600B1A8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['0600B1A8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['0600B1A8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['0600B1A8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='shield.back.002' name_q='"shield.back.002"' material=bpy.data.materials['shield.back.002'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06009768.tga.003'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06009768.tga.003'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06009768.tga.003'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06009768.tga.003'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06009768.tga.003'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria_tunic_light' name_q='"saria_tunic_light"' material=bpy.data.materials['saria_tunic_light'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentA from bpy.data...nodes["OBJEX_EnvColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['I8_06005C40_ZZRGBA16.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['I8_06005C40_ZZRGBA16.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'environmentA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged environmentRGB bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value and environmentA 1.0 into environment (0.011764707043766975, 0.1411764770746231, 0.011764707043766975, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['I8_06005C40_ZZRGBA16.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['I8_06005C40_ZZRGBA16.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['I8_06005C40_ZZRGBA16.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='thigh' name_q='"thigh"' material=bpy.data.materials['thigh'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['06005E80.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['06005E80.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['06005E80.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['06005E80.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['06005E80.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria_pants' name_q='"saria_pants"' material=bpy.data.materials['saria_pants'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentA from bpy.data...nodes["OBJEX_EnvColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['I8_06005D80_ZZRGBA16.tga'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['I8_06005D80_ZZRGBA16.tga'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'environmentA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged environmentRGB bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value and environmentA 1.0 into environment (0.011764707043766975, 0.1411764770746231, 0.011764707043766975, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['I8_06005D80_ZZRGBA16.tga'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['I8_06005D80_ZZRGBA16.tga'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['I8_06005D80_ZZRGBA16.tga'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='hookshot.handle_v4' name_q='"hookshot.handle_v4"' material=bpy.data.materials['hookshot.handle_v4'] face_img=None
WARNING:objex.export_objex_mtl.write_mtl: Material bpy.data.materials['hookshot.handle_v4'] use_nodes but not is_objex_material
(did you copy-paste nodes from another material instead of clicking the "Init..." button?),
nodes will be ignored and the face image will be used
(for now, to use the current nodes you can make a temporary duplicate of the material,
click the "Init..." button on the original material, delete all the generated nodes
and paste the actual nodes from the duplicate)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='longshot.body2_v4' name_q='"longshot.body2_v4"' material=bpy.data.materials['longshot.body2_v4'] face_img=None
WARNING:objex.export_objex_mtl.write_mtl: Material bpy.data.materials['longshot.body2_v4'] use_nodes but not is_objex_material
(did you copy-paste nodes from another material instead of clicking the "Init..." button?),
nodes will be ignored and the face image will be used
(for now, to use the current nodes you can make a temporary duplicate of the material,
click the "Init..." button on the original material, delete all the generated nodes
and paste the actual nodes from the duplicate)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='string' name_q='"string"' material=bpy.data.materials['string'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='red' name_q='"red"' material=bpy.data.materials['red'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_0': bpy.data...nodes["OBJEX_Color0"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['0600B168.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.6600000262260437, 0.0, 0.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 0600B168.tga <bpy_struct, Image("0600B168.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ms.symbol_v4' name_q='"ms.symbol_v4"' material=bpy.data.materials['ms.symbol_v4'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['ms_insignia.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['ms_insignia.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 0.75, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 0.75 into primitive (1.0, 1.0, 1.0, 0.75)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['ms_insignia.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['ms_insignia.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['ms_insignia.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='hookshot.body_v4' name_q='"hookshot.body_v4"' material=bpy.data.materials['hookshot.body_v4'] face_img=None
WARNING:objex.export_objex_mtl.write_mtl: Material bpy.data.materials['hookshot.body_v4'] use_nodes but not is_objex_material
(did you copy-paste nodes from another material instead of clicking the "Init..." button?),
nodes will be ignored and the face image will be used
(for now, to use the current nodes you can make a temporary duplicate of the material,
click the "Init..." button on the original material, delete all the generated nodes
and paste the actual nodes from the duplicate)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='gauntlets' name_q='"gauntlets"' material=bpy.data.materials['gauntlets'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06007880.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06007880.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06007880.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06007880.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06007880.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria_boot_bottom' name_q='"saria_boot_bottom"' material=bpy.data.materials['saria_boot_bottom'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['boot_ZZTUNIC.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['boot_ZZTUNIC.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['boot_ZZTUNIC.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['boot_ZZTUNIC.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['boot_ZZTUNIC.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='handle' name_q='"handle"' material=bpy.data.materials['handle'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['0600B228.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['0600B228.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['0600B228.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['0600B228.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['0600B228.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='sheath.tip' name_q='"sheath.tip"' material=bpy.data.materials['sheath.tip'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06008CE8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06008CE8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06008CE8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06008CE8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06008CE8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='bolt' name_q='"bolt"' material=bpy.data.materials['bolt'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['0600C6E8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['0600C6E8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['0600C6E8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['0600C6E8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['0600C6E8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='gauntlet.arm' name_q='"gauntlet.arm"' material=bpy.data.materials['gauntlet.arm'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_0': bpy.data...nodes["OBJEX_Color0"].outputs[0], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0RGB': {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['0600BAE8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'texel0A': {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['0600BAE8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['0600BAE8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['0600BAE8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['0600BAE8.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria_cloak' name_q='"saria_cloak"' material=bpy.data.materials['saria_cloak'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'texel0A': {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['04001C40.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['04001C40.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['04001C40.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['04001C40.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['04001C40.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04001C40.tga <bpy_struct, Image("04001C40.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='fingers' name_q='"fingers"' material=bpy.data.materials['fingers'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06008280.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06008280.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06008280.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06008280.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06008280.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mirror' name_q='"mirror"' material=bpy.data.materials['mirror'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_0': bpy.data...nodes["OBJEX_Color0"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': True, 'image': bpy.data.images['shieldtexture.png'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': True, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': True, 'image': bpy.data.images['shieldtexture.png'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': True, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveA': 0.75, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 0.75 into primitive (1.0, 1.0, 1.0, 0.75)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': True, 'image': bpy.data.images['shieldtexture.png'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': True, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': True, 'image': bpy.data.images['shieldtexture.png'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': True, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': True, 'image': bpy.data.images['shieldtexture.png'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': True, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mouth.001' name_q='"mouth.001"' material=bpy.data.materials['mouth.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['mouth.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['mouth.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['mouth.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['mouth.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': False, 'uv_wrap_u': False, 'texgen': False, 'image': bpy.data.images['mouth.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='cuffs' name_q='"cuffs"' material=bpy.data.materials['cuffs'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06007880.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06007880.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06007880.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06007880.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06007880.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 06007880.tga <bpy_struct, Image("06007880.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria_boot_top' name_q='"saria_boot_top"' material=bpy.data.materials['saria_boot_top'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['boot_ZZTUNIC.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['boot_ZZTUNIC.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['boot_ZZTUNIC.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['boot_ZZTUNIC.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['boot_ZZTUNIC.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture boot_ZZTUNIC.png <bpy_struct, Image("boot_ZZTUNIC.png")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ear' name_q='"ear"' material=bpy.data.materials['ear'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['ear.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['ear.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['ear.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['ear.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['ear.png'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ocarian.fairy' name_q='"ocarian.fairy"' material=bpy.data.materials['ocarian.fairy'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['060091E0.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['060091E0.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['060091E0.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['060091E0.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['060091E0.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='bg.handguard_v4' name_q='"bg.handguard_v4"' material=bpy.data.materials['bg.handguard_v4'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['biggoron_bolt'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['biggoron_bolt'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.011612245813012123, 0.10702310502529144, 0.4969330132007599, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['biggoron_bolt'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['biggoron_bolt'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['biggoron_bolt'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='string.002' name_q='"string.002"' material=bpy.data.materials['string.002'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 06005600_ZZPAL1.tga <bpy_struct, Image("06005600_ZZPAL1.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='metal.red' name_q='"metal.red"' material=bpy.data.materials['metal.red'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': True, 'image': bpy.data.images['04000000.tga'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': True, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_layer': '', 'uv_scale_u_main': 0.05000000074505806}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': True, 'image': bpy.data.images['04000000.tga'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': True, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_layer': '', 'uv_scale_u_main': 0.05000000074505806}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.6784313917160034, 0.0, 0.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': True, 'image': bpy.data.images['04000000.tga'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': True, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_layer': '', 'uv_scale_u_main': 0.05000000074505806} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': True, 'image': bpy.data.images['04000000.tga'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': True, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_layer': '', 'uv_scale_u_main': 0.05000000074505806} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': True, 'image': bpy.data.images['04000000.tga'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': True, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_layer': '', 'uv_scale_u_main': 0.05000000074505806}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga <bpy_struct, Image("04000000.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='cloak.back' name_q='"cloak.back"' material=bpy.data.materials['cloak.back'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['04001D40.tga.001'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['04001D40.tga.001'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['04001D40.tga.001'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['04001D40.tga.001'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['04001D40.tga.001'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mirror.surface' name_q='"mirror.surface"' material=bpy.data.materials['mirror.surface'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': True, 'image': bpy.data.images['04000000.tga'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_layer': '', 'uv_scale_u_main': 0.05000000074505806}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': True, 'image': bpy.data.images['04000000.tga'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_layer': '', 'uv_scale_u_main': 0.05000000074505806}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.009014400653541088, 0.0911124125123024, 0.39227452874183655, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': True, 'image': bpy.data.images['04000000.tga'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_layer': '', 'uv_scale_u_main': 0.05000000074505806} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': True, 'image': bpy.data.images['04000000.tga'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_layer': '', 'uv_scale_u_main': 0.05000000074505806} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': True, 'image': bpy.data.images['04000000.tga'], 'uv_map': False, 'uv_mirror_v': True, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_layer': '', 'uv_scale_u_main': 0.05000000074505806}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga <bpy_struct, Image("04000000.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_0602B338' name_q='"mtl_0602B338"' material=bpy.data.materials['mtl_0602B338'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['0602B338.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'texel0RGB': {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['0602B338.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['0602B338.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} and texel0A {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['0602B338.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0} into texel0 {'uv_wrap_v': True, 'uv_wrap_u': True, 'texgen': False, 'image': bpy.data.images['0602B338.tga'], 'uv_map': False, 'uv_mirror_v': False, 'uv_scale_v': 0, 'texgen_linear': False, 'uv_scale_u': 0, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'uv_layer': '', 'uv_scale_u_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.7441 sec |   0.7431 sec) Finished exporting materials, now exporting skeletons/animations
INFO:objex.ObjexWriter.write: now exporting skeletons
INFO:objex.ObjexWriter.write:  ... and animations
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.7480 sec |   0.7470 sec) Objex Export Finished

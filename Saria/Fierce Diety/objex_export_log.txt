WARNING:objex.OBJEX_OT_export.execute: Scene uses display_device='sRGB' which changes how colors are displayed in the viewport, reducing the preview accuracy.
This can be changed under Color Management in Scene properties.
Note that this should also be kept consistent with the Color Space property of image texture nodes (display_device="None", Color Space="Linear").
In Blender 2.7x, "Color Space" can be found in the Image Editor.
Recommended value: None
INFO:objex.OBJEX_OT_export.progress_report_print:   (  0.0000 sec |   0.0000 sec) Objex Export path: 'D:\\Games\\Modding\\ModLoader64\\Models\\Z64O_Models\\Saria\\Fierce Diety\\object_link_boy.objex'
WARNING:objex.ObjexWriter.write_object: Mesh Bottle.Hand.L is not triangulated and will be triangulated automatically (for exporting only).
Preview accuracy (UVs, shading, vertex colors) is improved by using a triangulated mesh.
Note: mesh has no triangulate modifier
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0090 sec |   0.0080 sec) Finished writing geometry of 'Bottle.Hand.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Sword, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0200 sec |   0.0090 sec) Finished writing geometry of 'Sword'.
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0222 sec |   0.0000 sec) Finished writing geometry of 'skeleton'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating riggedmesh, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0744 sec |   0.0504 sec) Finished writing geometry of 'riggedmesh'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Fist.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0824 sec |   0.0050 sec) Finished writing geometry of 'Fist.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Fist.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0904 sec |   0.0070 sec) Finished writing geometry of 'Fist.R'.
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.0944 sec |   0.0934 sec) Finished exporting geometry, now exporting materials
TRACE:objex.export_objex_mtl.write_mtl: Writing name='boot.bottom' name_q='"boot.bottom"' material=bpy.data.materials['boot.bottom'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'texel0RGB': {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['RGBA16_06008208.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['RGBA16_06008208.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['RGBA16_06008208.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False} and texel0A {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['RGBA16_06008208.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False} into texel0 {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['RGBA16_06008208.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='fingers' name_q='"fingers"' material=bpy.data.materials['fingers'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'texel0RGB': {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['CI4_0600B108.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['CI4_0600B108.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['CI4_0600B108.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False} and texel0A {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['CI4_0600B108.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False} into texel0 {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['CI4_0600B108.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='eyes' name_q='"eyes"' material=bpy.data.materials['eyes'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'texel0RGB': {'uv_wrap_v': False, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['eyes.png'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': False, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['eyes.png'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': False, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['eyes.png'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False} and texel0A {'uv_wrap_v': False, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['eyes.png'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False} into texel0 {'uv_wrap_v': False, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['eyes.png'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='empty.dummy' name_q='"empty.dummy"' material=bpy.data.materials['empty.dummy'] face_img=None
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_06000B00_NOCULL_TEXGEN' name_q='"mtl_06000B00_NOCULL_TEXGEN"' material=bpy.data.materials['mtl_06000B00_NOCULL_TEXGEN'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'texel0RGB': {'uv_wrap_v': True, 'texgen': True, 'uv_scale_v': 0, 'image': bpy.data.images['I8_06000B00_ZZRGBA16.tga.001'], 'uv_layer': '', 'uv_scale_v_main': 0.009999999776482582, 'uv_scale_u_main': 0.009999999776482582, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': True}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'texgen': True, 'uv_scale_v': 0, 'image': bpy.data.images['I8_06000B00_ZZRGBA16.tga.001'], 'uv_layer': '', 'uv_scale_v_main': 0.009999999776482582, 'uv_scale_u_main': 0.009999999776482582, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': True}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.7230553030967712, 0.799102783203125, 0.4910208284854889, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'texgen': True, 'uv_scale_v': 0, 'image': bpy.data.images['I8_06000B00_ZZRGBA16.tga.001'], 'uv_layer': '', 'uv_scale_v_main': 0.009999999776482582, 'uv_scale_u_main': 0.009999999776482582, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': True} and texel0A {'uv_wrap_v': True, 'texgen': True, 'uv_scale_v': 0, 'image': bpy.data.images['I8_06000B00_ZZRGBA16.tga.001'], 'uv_layer': '', 'uv_scale_v_main': 0.009999999776482582, 'uv_scale_u_main': 0.009999999776482582, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': True} into texel0 {'uv_wrap_v': True, 'texgen': True, 'uv_scale_v': 0, 'image': bpy.data.images['I8_06000B00_ZZRGBA16.tga.001'], 'uv_layer': '', 'uv_scale_v_main': 0.009999999776482582, 'uv_scale_u_main': 0.009999999776482582, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': True}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='black' name_q='"black"' material=bpy.data.materials['black'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'texel0RGB': {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['CI4_06008408.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['CI4_06008408.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['CI4_06008408.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False} and texel0A {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['CI4_06008408.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False} into texel0 {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['CI4_06008408.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Material_NOCULL_TEXGEN' name_q='"Material_NOCULL_TEXGEN"' material=bpy.data.materials['Material_NOCULL_TEXGEN'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'texel0RGB': {'uv_wrap_v': True, 'texgen': True, 'uv_scale_v': 0, 'image': bpy.data.images['I8_06000B00_ZZRGBA16.tga.001'], 'uv_layer': '', 'uv_scale_v_main': 0.009999999776482582, 'uv_scale_u_main': 0.009999999776482582, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': True}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'texgen': True, 'uv_scale_v': 0, 'image': bpy.data.images['I8_06000B00_ZZRGBA16.tga.001'], 'uv_layer': '', 'uv_scale_v_main': 0.009999999776482582, 'uv_scale_u_main': 0.009999999776482582, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': True}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.28314879536628723, 0.799102783203125, 0.5840784907341003, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'texgen': True, 'uv_scale_v': 0, 'image': bpy.data.images['I8_06000B00_ZZRGBA16.tga.001'], 'uv_layer': '', 'uv_scale_v_main': 0.009999999776482582, 'uv_scale_u_main': 0.009999999776482582, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': True} and texel0A {'uv_wrap_v': True, 'texgen': True, 'uv_scale_v': 0, 'image': bpy.data.images['I8_06000B00_ZZRGBA16.tga.001'], 'uv_layer': '', 'uv_scale_v_main': 0.009999999776482582, 'uv_scale_u_main': 0.009999999776482582, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': True} into texel0 {'uv_wrap_v': True, 'texgen': True, 'uv_scale_v': 0, 'image': bpy.data.images['I8_06000B00_ZZRGBA16.tga.001'], 'uv_layer': '', 'uv_scale_v_main': 0.009999999776482582, 'uv_scale_u_main': 0.009999999776482582, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': True}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture I8_06000B00_ZZRGBA16.tga.001 <bpy_struct, Image("I8_06000B00_ZZRGBA16.tga.001")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='chestplate' name_q='"chestplate"' material=bpy.data.materials['chestplate'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'texel0RGB': {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['CI4_0600B188.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['CI4_0600B188.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['CI4_0600B188.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False} and texel0A {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['CI4_0600B188.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False} into texel0 {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['CI4_0600B188.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='cloak.gem' name_q='"cloak.gem"' material=bpy.data.materials['cloak.gem'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'texel0RGB': {'uv_wrap_v': True, 'texgen': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_layer': '', 'uv_scale_v_main': 0.05000000074505806, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'texgen': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_layer': '', 'uv_scale_v_main': 0.05000000074505806, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 0.9715556502342224, 0.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'texgen': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_layer': '', 'uv_scale_v_main': 0.05000000074505806, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False} and texel0A {'uv_wrap_v': True, 'texgen': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_layer': '', 'uv_scale_v_main': 0.05000000074505806, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False} into texel0 {'uv_wrap_v': True, 'texgen': True, 'uv_scale_v': 0, 'image': bpy.data.images['04000000.tga'], 'uv_layer': '', 'uv_scale_v_main': 0.05000000074505806, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='cloth' name_q='"cloth"' material=bpy.data.materials['cloth'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'texel0RGB': {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['CI4_06008C88.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['CI4_06008C88.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['CI4_06008C88.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False} and texel0A {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['CI4_06008C88.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False} into texel0 {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['CI4_06008C88.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='boot.top' name_q='"boot.top"' material=bpy.data.materials['boot.top'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'texel0RGB': {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['RGBA16_06008888.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['RGBA16_06008888.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['RGBA16_06008888.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False} and texel0A {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['RGBA16_06008888.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False} into texel0 {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['RGBA16_06008888.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='hair' name_q='"hair"' material=bpy.data.materials['hair'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'texel0RGB': {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['CI4_0600A708.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['CI4_0600A708.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['CI4_0600A708.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False} and texel0A {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['CI4_0600A708.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False} into texel0 {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['CI4_0600A708.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ear' name_q='"ear"' material=bpy.data.materials['ear'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'texel0RGB': {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['RGBA16_0600AD08.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['RGBA16_0600AD08.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['RGBA16_0600AD08.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False} and texel0A {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['RGBA16_0600AD08.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False} into texel0 {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['RGBA16_0600AD08.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='grip' name_q='"grip"' material=bpy.data.materials['grip'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'texel0RGB': {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['060084E8.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['060084E8.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['060084E8.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False} and texel0A {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['060084E8.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False} into texel0 {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['060084E8.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='boot' name_q='"boot"' material=bpy.data.materials['boot'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'texel0RGB': {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['RGBA16_06008488.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['RGBA16_06008488.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['RGBA16_06008488.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False} and texel0A {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['RGBA16_06008488.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False} into texel0 {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['RGBA16_06008488.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='side' name_q='"side"' material=bpy.data.materials['side'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'texel0RGB': {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['060085E8.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['060085E8.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['060085E8.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False} and texel0A {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['060085E8.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False} into texel0 {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['060085E8.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mouth' name_q='"mouth"' material=bpy.data.materials['mouth'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'texel0RGB': {'uv_wrap_v': False, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['mouth.png'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': False, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['mouth.png'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': False, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['mouth.png'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False} and texel0A {'uv_wrap_v': False, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['mouth.png'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False} into texel0 {'uv_wrap_v': False, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['mouth.png'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='back' name_q='"back"' material=bpy.data.materials['back'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'texel0RGB': {'uv_wrap_v': False, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['CI4_06008F08.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': False, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['CI4_06008F08.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': False, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['CI4_06008F08.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False} and texel0A {'uv_wrap_v': False, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['CI4_06008F08.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False} into texel0 {'uv_wrap_v': False, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['CI4_06008F08.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='gauntlet' name_q='"gauntlet"' material=bpy.data.materials['gauntlet'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'texel0RGB': {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['CI4_0600AF08.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['CI4_0600AF08.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['CI4_0600AF08.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False} and texel0A {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['CI4_0600AF08.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False} into texel0 {'uv_wrap_v': True, 'texgen': False, 'uv_scale_v': 0, 'image': bpy.data.images['CI4_0600AF08.tga'], 'uv_layer': '', 'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'uv_scale_u': 0, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_map': False, 'uv_mirror_u': False, 'texgen_linear': False}
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.1244 sec |   0.1234 sec) Finished exporting materials, now exporting skeletons/animations
INFO:objex.ObjexWriter.write: now exporting skeletons
INFO:objex.ObjexWriter.write:  ... and animations
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.1314 sec |   0.1304 sec) Objex Export Finished

WARNING:objex.OBJEX_OT_export.execute: Scene uses display_device='sRGB' which changes how colors are displayed in the viewport, reducing the preview accuracy.
This can be changed under Color Management in Scene properties.
Note that this should also be kept consistent with the Color Space property of image texture nodes (display_device="None", Color Space="Linear").
In Blender 2.7x, "Color Space" can be found in the Image Editor.
Recommended value: None
INFO:objex.OBJEX_OT_export.progress_report_print:   (  0.0000 sec |   0.0000 sec) Objex Export path: 'D:\\Games\\Modding\\Zelda 64\\Models\\Z64O_Models\\Saria\\child\\object_link_child.objex'
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating FPS.Forearm.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0351 sec |   0.0335 sec) Finished writing geometry of 'FPS.Forearm.R'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Shield.2, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0512 sec |   0.0145 sec) Finished writing geometry of 'Shield.2'.
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0533 sec |   0.0010 sec) Finished writing geometry of 'skeleton'.
WARNING:objex.ObjexWriter.write_object: Mesh Slingshot is not triangulated and will be triangulated automatically (for exporting only).
Preview accuracy (UVs, shading, vertex colors) is improved by using a triangulated mesh.
Note: mesh has no triangulate modifier
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0802 sec |   0.0259 sec) Finished writing geometry of 'Slingshot'.
WARNING:objex.ObjexWriter.write_object: Mesh Shield.1 is not triangulated and will be triangulated automatically (for exporting only).
Preview accuracy (UVs, shading, vertex colors) is improved by using a triangulated mesh.
Note: mesh has no triangulate modifier
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0999 sec |   0.0175 sec) Finished writing geometry of 'Shield.1'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Blade.1, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1194 sec |   0.0169 sec) Finished writing geometry of 'Blade.1'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Sheath.Old, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1358 sec |   0.0137 sec) Finished writing geometry of 'Sheath.Old'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Fist.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1527 sec |   0.0153 sec) Finished writing geometry of 'Fist.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Fist.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1712 sec |   0.0159 sec) Finished writing geometry of 'Fist.R'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Bottle.Hand.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1918 sec |   0.0184 sec) Finished writing geometry of 'Bottle.Hand.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Ocarina.1, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2091 sec |   0.0137 sec) Finished writing geometry of 'Ocarina.1'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Ocarina.2, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2248 sec |   0.0120 sec) Finished writing geometry of 'Ocarina.2'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating riggedmesh, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2877 sec |   0.0608 sec) Finished writing geometry of 'riggedmesh'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Bottle, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.3076 sec |   0.0183 sec) Finished writing geometry of 'Bottle'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating GoronBracelet, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.3218 sec |   0.0116 sec) Finished writing geometry of 'GoronBracelet'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Hilt.1, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.3380 sec |   0.0152 sec) Finished writing geometry of 'Hilt.1'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Blade.2, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.3574 sec |   0.0184 sec) Finished writing geometry of 'Blade.2'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Sheath, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.3705 sec |   0.0120 sec) Finished writing geometry of 'Sheath'.
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.3721 sec |   0.3710 sec) Finished exporting geometry, now exporting materials
TRACE:objex.export_objex_mtl.write_mtl: Writing name='empty.dummy.001' name_q='"empty.dummy.001"' material=bpy.data.materials['empty.dummy.001'] face_img=None
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria_pants' name_q='"saria_pants"' material=bpy.data.materials['saria_pants'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentA from bpy.data...nodes["OBJEX_EnvColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0RGB': {'image': bpy.data.images['I8_06005D80_ZZRGBA16.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': True, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'texel0A': {'image': bpy.data.images['I8_06005D80_ZZRGBA16.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': True, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'environmentA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged environmentRGB bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value and environmentA 1.0 into environment (0.011612245813012123, 0.14126330614089966, 0.011612245813012123, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['I8_06005D80_ZZRGBA16.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': True, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} and texel0A {'image': bpy.data.images['I8_06005D80_ZZRGBA16.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': True, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} into texel0 {'image': bpy.data.images['I8_06005D80_ZZRGBA16.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': True, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria_boot' name_q='"saria_boot"' material=bpy.data.materials['saria_boot'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentA from bpy.data...nodes["OBJEX_EnvColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0RGB': {'image': bpy.data.images['boot_ZZTUNIC.png.001'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'texel0A': {'image': bpy.data.images['boot_ZZTUNIC.png.001'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'environmentA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged environmentRGB bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value and environmentA 1.0 into environment (0.011764707043766975, 0.1411764770746231, 0.011764707043766975, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['boot_ZZTUNIC.png.001'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} and texel0A {'image': bpy.data.images['boot_ZZTUNIC.png.001'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} into texel0 {'image': bpy.data.images['boot_ZZTUNIC.png.001'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='shield.back.002' name_q='"shield.back.002"' material=bpy.data.materials['shield.back.002'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'image': bpy.data.images['06009768.tga.003'], 'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': True, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeA': {'type': 'normals'}, 'texel0A': {'image': bpy.data.images['06009768.tga.003'], 'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': True, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['06009768.tga.003'], 'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': True, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} and texel0A {'image': bpy.data.images['06009768.tga.003'], 'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': True, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} into texel0 {'image': bpy.data.images['06009768.tga.003'], 'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': True, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ms.gem' name_q='"ms.gem"' material=bpy.data.materials['ms.gem'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'image': bpy.data.images['eff_unknown_10.i8.png'], 'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': True, 'texgen_linear': True, 'texgen': True, 'uv_layer': '', 'uv_scale_u_main': 0.022887999191880226, 'uv_scale_v_main': 0.03051760047674179, 'uv_map': False}, 'shadeA': {'type': 'normals'}, 'texel0A': {'image': bpy.data.images['eff_unknown_10.i8.png'], 'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': True, 'texgen_linear': True, 'texgen': True, 'uv_layer': '', 'uv_scale_u_main': 0.022887999191880226, 'uv_scale_v_main': 0.03051760047674179, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 0.8187932968139648, 0.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['eff_unknown_10.i8.png'], 'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': True, 'texgen_linear': True, 'texgen': True, 'uv_layer': '', 'uv_scale_u_main': 0.022887999191880226, 'uv_scale_v_main': 0.03051760047674179, 'uv_map': False} and texel0A {'image': bpy.data.images['eff_unknown_10.i8.png'], 'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': True, 'texgen_linear': True, 'texgen': True, 'uv_layer': '', 'uv_scale_u_main': 0.022887999191880226, 'uv_scale_v_main': 0.03051760047674179, 'uv_map': False} into texel0 {'image': bpy.data.images['eff_unknown_10.i8.png'], 'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': True, 'texgen_linear': True, 'texgen': True, 'uv_layer': '', 'uv_scale_u_main': 0.022887999191880226, 'uv_scale_v_main': 0.03051760047674179, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='boomerang.gem.001' name_q='"boomerang.gem.001"' material=bpy.data.materials['boomerang.gem.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'image': bpy.data.images['04000000.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': True, 'texgen': True, 'uv_layer': '', 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False}, 'shadeA': {'type': 'normals'}, 'texel0A': {'image': bpy.data.images['04000000.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': True, 'texgen': True, 'uv_layer': '', 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.8962693810462952, 0.0, 0.18366463482379913, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['04000000.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': True, 'texgen': True, 'uv_layer': '', 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False} and texel0A {'image': bpy.data.images['04000000.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': True, 'texgen': True, 'uv_layer': '', 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False} into texel0 {'image': bpy.data.images['04000000.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': True, 'texgen': True, 'uv_layer': '', 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='belt.hole' name_q='"belt.hole"' material=bpy.data.materials['belt.hole'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'image': bpy.data.images['RGBA16_06006B00.tga.002'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeA': {'type': 'normals'}, 'texel0A': {'image': bpy.data.images['RGBA16_06006B00.tga.002'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['RGBA16_06006B00.tga.002'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} and texel0A {'image': bpy.data.images['RGBA16_06006B00.tga.002'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} into texel0 {'image': bpy.data.images['RGBA16_06006B00.tga.002'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='metal' name_q='"metal"' material=bpy.data.materials['metal'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'image': bpy.data.images['eff_unknown_10.i8.png'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': True, 'texgen': True, 'uv_layer': '', 'uv_scale_u_main': 0.022887999191880226, 'uv_scale_v_main': 0.030517999082803726, 'uv_map': False}, 'shadeA': {'type': 'normals'}, 'texel0A': {'image': bpy.data.images['eff_unknown_10.i8.png'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': True, 'texgen': True, 'uv_layer': '', 'uv_scale_u_main': 0.022887999191880226, 'uv_scale_v_main': 0.030517999082803726, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['eff_unknown_10.i8.png'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': True, 'texgen': True, 'uv_layer': '', 'uv_scale_u_main': 0.022887999191880226, 'uv_scale_v_main': 0.030517999082803726, 'uv_map': False} and texel0A {'image': bpy.data.images['eff_unknown_10.i8.png'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': True, 'texgen': True, 'uv_layer': '', 'uv_scale_u_main': 0.022887999191880226, 'uv_scale_v_main': 0.030517999082803726, 'uv_map': False} into texel0 {'image': bpy.data.images['eff_unknown_10.i8.png'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': True, 'texgen': True, 'uv_layer': '', 'uv_scale_u_main': 0.022887999191880226, 'uv_scale_v_main': 0.030517999082803726, 'uv_map': False}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture eff_unknown_10.i8.png <bpy_struct, Image("eff_unknown_10.i8.png")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='hylian.crest.002' name_q='"hylian.crest.002"' material=bpy.data.materials['hylian.crest.002'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'image': bpy.data.images['04000400.tga.002'], 'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': True, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeA': {'type': 'normals'}, 'texel0A': {'image': bpy.data.images['04000400.tga.002'], 'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': True, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['04000400.tga.002'], 'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': True, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} and texel0A {'image': bpy.data.images['04000400.tga.002'], 'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': True, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} into texel0 {'image': bpy.data.images['04000400.tga.002'], 'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': True, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='skin.shadow' name_q='"skin.shadow"' material=bpy.data.materials['skin.shadow'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'image': bpy.data.images['06003548.tga.001'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeA': {'type': 'normals'}, 'texel0A': {'image': bpy.data.images['06003548.tga.001'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['06003548.tga.001'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} and texel0A {'image': bpy.data.images['06003548.tga.001'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} into texel0 {'image': bpy.data.images['06003548.tga.001'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='belt.buckle' name_q='"belt.buckle"' material=bpy.data.materials['belt.buckle'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'image': bpy.data.images['RGBA16_06005740.tga.002'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeA': {'type': 'normals'}, 'texel0A': {'image': bpy.data.images['RGBA16_06005740.tga.002'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['RGBA16_06005740.tga.002'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} and texel0A {'image': bpy.data.images['RGBA16_06005740.tga.002'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} into texel0 {'image': bpy.data.images['RGBA16_06005740.tga.002'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='glass.000' name_q='"glass.000"' material=bpy.data.materials['glass.000'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0RGB': {'image': bpy.data.images['liquid.png'], 'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': True, 'texgen_linear': False, 'texgen': True, 'uv_layer': '', 'uv_scale_u_main': 0.02500000037252903, 'uv_scale_v_main': 0.02500000037252903, 'uv_map': False}, 'texel0A': {'image': bpy.data.images['liquid.png'], 'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': True, 'texgen_linear': False, 'texgen': True, 'uv_layer': '', 'uv_scale_u_main': 0.02500000037252903, 'uv_scale_v_main': 0.02500000037252903, 'uv_map': False}, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'primitiveA': 0.75}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['liquid.png'], 'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': True, 'texgen_linear': False, 'texgen': True, 'uv_layer': '', 'uv_scale_u_main': 0.02500000037252903, 'uv_scale_v_main': 0.02500000037252903, 'uv_map': False} and texel0A {'image': bpy.data.images['liquid.png'], 'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': True, 'texgen_linear': False, 'texgen': True, 'uv_layer': '', 'uv_scale_u_main': 0.02500000037252903, 'uv_scale_v_main': 0.02500000037252903, 'uv_map': False} into texel0 {'image': bpy.data.images['liquid.png'], 'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': True, 'texgen_linear': False, 'texgen': True, 'uv_layer': '', 'uv_scale_u_main': 0.02500000037252903, 'uv_scale_v_main': 0.02500000037252903, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='red.cap' name_q='"red.cap"' material=bpy.data.materials['red.cap'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': True, 'texgen': True, 'uv_layer': '', 'uv_scale_u_main': 0.004999999888241291, 'uv_scale_v_main': 0.004999999888241291, 'uv_map': False}, 'shadeA': {'type': 'normals'}, 'texel0A': {'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': True, 'texgen': True, 'uv_layer': '', 'uv_scale_u_main': 0.004999999888241291, 'uv_scale_v_main': 0.004999999888241291, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 0.0, 0.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': True, 'texgen': True, 'uv_layer': '', 'uv_scale_u_main': 0.004999999888241291, 'uv_scale_v_main': 0.004999999888241291, 'uv_map': False} and texel0A {'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': True, 'texgen': True, 'uv_layer': '', 'uv_scale_u_main': 0.004999999888241291, 'uv_scale_v_main': 0.004999999888241291, 'uv_map': False} into texel0 {'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': True, 'texgen': True, 'uv_layer': '', 'uv_scale_u_main': 0.004999999888241291, 'uv_scale_v_main': 0.004999999888241291, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='hands' name_q='"hands"' material=bpy.data.materials['hands'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'image': bpy.data.images['texture_0600DB08_ZZPAL0.png.001'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeA': {'type': 'normals'}, 'texel0A': {'image': bpy.data.images['texture_0600DB08_ZZPAL0.png.001'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['texture_0600DB08_ZZPAL0.png.001'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} and texel0A {'image': bpy.data.images['texture_0600DB08_ZZPAL0.png.001'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} into texel0 {'image': bpy.data.images['texture_0600DB08_ZZPAL0.png.001'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='eyes' name_q='"eyes"' material=bpy.data.materials['eyes'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'image': bpy.data.images['eyes.png'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeA': {'type': 'normals'}, 'texel0A': {'image': bpy.data.images['eyes.png'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['eyes.png'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} and texel0A {'image': bpy.data.images['eyes.png'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} into texel0 {'image': bpy.data.images['eyes.png'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Material.001' name_q='"Material.001"' material=bpy.data.materials['Material.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'image': bpy.data.images['RGBA16_0601BF00.tga.000'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeA': {'type': 'normals'}, 'texel0A': {'image': bpy.data.images['RGBA16_0601BF00.tga.000'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['RGBA16_0601BF00.tga.000'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} and texel0A {'image': bpy.data.images['RGBA16_0601BF00.tga.000'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} into texel0 {'image': bpy.data.images['RGBA16_0601BF00.tga.000'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='new.shield_front' name_q='"new.shield_front"' material=bpy.data.materials['new.shield_front'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'image': bpy.data.images['kokiri_shield.tga.001'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeA': {'type': 'normals'}, 'texel0A': {'image': bpy.data.images['kokiri_shield.tga.001'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['kokiri_shield.tga.001'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} and texel0A {'image': bpy.data.images['kokiri_shield.tga.001'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} into texel0 {'image': bpy.data.images['kokiri_shield.tga.001'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Material.004' name_q='"Material.004"' material=bpy.data.materials['Material.004'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'image': bpy.data.images['RGBA16_0601BF00.tga.002'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeA': {'type': 'normals'}, 'texel0A': {'image': bpy.data.images['RGBA16_0601BF00.tga.002'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['RGBA16_0601BF00.tga.002'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} and texel0A {'image': bpy.data.images['RGBA16_0601BF00.tga.002'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} into texel0 {'image': bpy.data.images['RGBA16_0601BF00.tga.002'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='glass.001' name_q='"glass.001"' material=bpy.data.materials['glass.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'image': bpy.data.images['06000508.tga'], 'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': True, 'texgen_linear': False, 'texgen': True, 'uv_layer': '', 'uv_scale_u_main': 0.02500000037252903, 'uv_scale_v_main': 0.02500000037252903, 'uv_map': False}, 'shadeA': {'type': 'normals'}, 'texel0A': {'image': bpy.data.images['06000508.tga'], 'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': True, 'texgen_linear': False, 'texgen': True, 'uv_layer': '', 'uv_scale_u_main': 0.02500000037252903, 'uv_scale_v_main': 0.02500000037252903, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 0.75}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 0.75 into primitive (1.0, 1.0, 1.0, 0.75)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['06000508.tga'], 'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': True, 'texgen_linear': False, 'texgen': True, 'uv_layer': '', 'uv_scale_u_main': 0.02500000037252903, 'uv_scale_v_main': 0.02500000037252903, 'uv_map': False} and texel0A {'image': bpy.data.images['06000508.tga'], 'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': True, 'texgen_linear': False, 'texgen': True, 'uv_layer': '', 'uv_scale_u_main': 0.02500000037252903, 'uv_scale_v_main': 0.02500000037252903, 'uv_map': False} into texel0 {'image': bpy.data.images['06000508.tga'], 'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': True, 'texgen_linear': False, 'texgen': True, 'uv_layer': '', 'uv_scale_u_main': 0.02500000037252903, 'uv_scale_v_main': 0.02500000037252903, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='f3d_material.006' name_q='"f3d_material.006"' material=bpy.data.materials['f3d_material.006'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'image': bpy.data.images['tex_000A30.rgba16.png.001'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeA': {'type': 'normals'}, 'texel0A': {'image': bpy.data.images['tex_000A30.rgba16.png.001'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['tex_000A30.rgba16.png.001'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} and texel0A {'image': bpy.data.images['tex_000A30.rgba16.png.001'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} into texel0 {'image': bpy.data.images['tex_000A30.rgba16.png.001'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria.hair' name_q='"saria.hair"' material=bpy.data.materials['saria.hair'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'image': bpy.data.images['06002EC8.tga.001'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeA': {'type': 'normals'}, 'texel0A': {'image': bpy.data.images['06002EC8.tga.001'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['06002EC8.tga.001'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} and texel0A {'image': bpy.data.images['06002EC8.tga.001'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} into texel0 {'image': bpy.data.images['06002EC8.tga.001'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria_tunic_dark' name_q='"saria_tunic_dark"' material=bpy.data.materials['saria_tunic_dark'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0RGB': {'image': bpy.data.images['sleeves_headband_ZZTUNIC.png'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'texel0A': {'image': bpy.data.images['sleeves_headband_ZZTUNIC.png'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['sleeves_headband_ZZTUNIC.png'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} and texel0A {'image': bpy.data.images['sleeves_headband_ZZTUNIC.png'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} into texel0 {'image': bpy.data.images['sleeves_headband_ZZTUNIC.png'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='knee' name_q='"knee"' material=bpy.data.materials['knee'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'image': bpy.data.images['leg.png'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeA': {'type': 'normals'}, 'texel0A': {'image': bpy.data.images['leg.png'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['leg.png'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} and texel0A {'image': bpy.data.images['leg.png'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} into texel0 {'image': bpy.data.images['leg.png'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='handle.001' name_q='"handle.001"' material=bpy.data.materials['handle.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'image': bpy.data.images['I8_06002DC8.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeA': {'type': 'normals'}, 'texel0A': {'image': bpy.data.images['I8_06002DC8.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.6795426607131958, 0.6038274168968201, 0.29613831639289856, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['I8_06002DC8.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} and texel0A {'image': bpy.data.images['I8_06002DC8.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} into texel0 {'image': bpy.data.images['I8_06002DC8.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mouth' name_q='"mouth"' material=bpy.data.materials['mouth'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'image': bpy.data.images['mouth.png'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeA': {'type': 'normals'}, 'texel0A': {'image': bpy.data.images['mouth.png'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['mouth.png'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} and texel0A {'image': bpy.data.images['mouth.png'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} into texel0 {'image': bpy.data.images['mouth.png'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='wood.back' name_q='"wood.back"' material=bpy.data.materials['wood.back'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'image': bpy.data.images['060071E0.tga'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeA': {'type': 'normals'}, 'texel0A': {'image': bpy.data.images['060071E0.tga'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['060071E0.tga'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} and texel0A {'image': bpy.data.images['060071E0.tga'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} into texel0 {'image': bpy.data.images['060071E0.tga'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='slingshot' name_q='"slingshot"' material=bpy.data.materials['slingshot'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'image': bpy.data.images['06008DE0.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeA': {'type': 'normals'}, 'texel0A': {'image': bpy.data.images['06008DE0.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['06008DE0.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} and texel0A {'image': bpy.data.images['06008DE0.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} into texel0 {'image': bpy.data.images['06008DE0.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Material.005' name_q='"Material.005"' material=bpy.data.materials['Material.005'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'image': bpy.data.images['CI8_06005540_pal06005000.tga'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeA': {'type': 'normals'}, 'texel0A': {'image': bpy.data.images['CI8_06005540_pal06005000.tga'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['CI8_06005540_pal06005000.tga'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} and texel0A {'image': bpy.data.images['CI8_06005540_pal06005000.tga'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} into texel0 {'image': bpy.data.images['CI8_06005540_pal06005000.tga'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria.headband' name_q='"saria.headband"' material=bpy.data.materials['saria.headband'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0RGB': {'image': bpy.data.images['060037C8.tga.001'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'texel0A': {'image': bpy.data.images['060037C8.tga.001'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['060037C8.tga.001'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} and texel0A {'image': bpy.data.images['060037C8.tga.001'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} into texel0 {'image': bpy.data.images['060037C8.tga.001'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='string.002' name_q='"string.002"' material=bpy.data.materials['string.002'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeA': {'type': 'normals'}, 'texel0A': {'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} and texel0A {'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} into texel0 {'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ears' name_q='"ears"' material=bpy.data.materials['ears'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'image': bpy.data.images['CI8_06005640_pal06005000.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeA': {'type': 'normals'}, 'texel0A': {'image': bpy.data.images['CI8_06005640_pal06005000.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['CI8_06005640_pal06005000.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} and texel0A {'image': bpy.data.images['CI8_06005640_pal06005000.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} into texel0 {'image': bpy.data.images['CI8_06005640_pal06005000.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Material' name_q='"Material"' material=bpy.data.materials['Material'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'image': bpy.data.images['RGBA16_0601BF80.tga.002'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeA': {'type': 'normals'}, 'texel0A': {'image': bpy.data.images['RGBA16_0601BF80.tga.002'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['RGBA16_0601BF80.tga.002'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} and texel0A {'image': bpy.data.images['RGBA16_0601BF80.tga.002'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} into texel0 {'image': bpy.data.images['RGBA16_0601BF80.tga.002'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='skin' name_q='"skin"' material=bpy.data.materials['skin'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'image': bpy.data.images['skin.png'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeA': {'type': 'normals'}, 'texel0A': {'image': bpy.data.images['skin.png'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['skin.png'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} and texel0A {'image': bpy.data.images['skin.png'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} into texel0 {'image': bpy.data.images['skin.png'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='goran.insignia' name_q='"goran.insignia"' material=bpy.data.materials['goran.insignia'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'image': bpy.data.images['06009E60_ZZFORCERGBA16.tga.001'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeA': {'type': 'normals'}, 'texel0A': {'image': bpy.data.images['06009E60_ZZFORCERGBA16.tga.001'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['06009E60_ZZFORCERGBA16.tga.001'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} and texel0A {'image': bpy.data.images['06009E60_ZZFORCERGBA16.tga.001'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} into texel0 {'image': bpy.data.images['06009E60_ZZFORCERGBA16.tga.001'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_06006480.001' name_q='"mtl_06006480.001"' material=bpy.data.materials['mtl_06006480.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'image': bpy.data.images['texture_0600DB08_ZZPAL0.png.001'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeA': {'type': 'normals'}, 'texel0A': {'image': bpy.data.images['texture_0600DB08_ZZPAL0.png.001'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['texture_0600DB08_ZZPAL0.png.001'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} and texel0A {'image': bpy.data.images['texture_0600DB08_ZZPAL0.png.001'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} into texel0 {'image': bpy.data.images['texture_0600DB08_ZZPAL0.png.001'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture texture_0600DB08_ZZPAL0.png.001 <bpy_struct, Image("texture_0600DB08_ZZPAL0.png.001")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='shine' name_q='"shine"' material=bpy.data.materials['shine'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'image': bpy.data.images['04000000.tga.001'], 'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': True, 'texgen_linear': False, 'texgen': True, 'uv_layer': '', 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False}, 'shadeA': {'type': 'normals'}, 'texel0A': {'image': bpy.data.images['04000000.tga.001'], 'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': True, 'texgen_linear': False, 'texgen': True, 'uv_layer': '', 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['04000000.tga.001'], 'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': True, 'texgen_linear': False, 'texgen': True, 'uv_layer': '', 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False} and texel0A {'image': bpy.data.images['04000000.tga.001'], 'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': True, 'texgen_linear': False, 'texgen': True, 'uv_layer': '', 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False} into texel0 {'image': bpy.data.images['04000000.tga.001'], 'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': True, 'texgen_linear': False, 'texgen': True, 'uv_layer': '', 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='kokiri.hilt.001' name_q='"kokiri.hilt.001"' material=bpy.data.materials['kokiri.hilt.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'image': bpy.data.images['kokiri_sword.tga.001'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeA': {'type': 'normals'}, 'texel0A': {'image': bpy.data.images['kokiri_sword.tga.001'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['kokiri_sword.tga.001'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} and texel0A {'image': bpy.data.images['kokiri_sword.tga.001'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} into texel0 {'image': bpy.data.images['kokiri_sword.tga.001'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria_tunic_light' name_q='"saria_tunic_light"' material=bpy.data.materials['saria_tunic_light'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0RGB': {'image': bpy.data.images['I8_06005C40_ZZRGBA16.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'texel0A': {'image': bpy.data.images['I8_06005C40_ZZRGBA16.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['I8_06005C40_ZZRGBA16.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} and texel0A {'image': bpy.data.images['I8_06005C40_ZZRGBA16.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} into texel0 {'image': bpy.data.images['I8_06005C40_ZZRGBA16.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Material.006' name_q='"Material.006"' material=bpy.data.materials['Material.006'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'image': bpy.data.images['RGBA16_0601BF80.tga.001'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': True, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeA': {'type': 'normals'}, 'texel0A': {'image': bpy.data.images['RGBA16_0601BF80.tga.001'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': True, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['RGBA16_0601BF80.tga.001'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': True, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} and texel0A {'image': bpy.data.images['RGBA16_0601BF80.tga.001'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': True, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} into texel0 {'image': bpy.data.images['RGBA16_0601BF80.tga.001'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': True, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='gold' name_q='"gold"' material=bpy.data.materials['gold'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'image': bpy.data.images['06009DE0_ZZFORCERGBA16.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': True, 'texgen': True, 'uv_layer': '', 'uv_scale_u_main': 0.004999999888241291, 'uv_scale_v_main': 0.004999999888241291, 'uv_map': False}, 'shadeA': {'type': 'normals'}, 'texel0A': {'image': bpy.data.images['06009DE0_ZZFORCERGBA16.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': True, 'texgen': True, 'uv_layer': '', 'uv_scale_u_main': 0.004999999888241291, 'uv_scale_v_main': 0.004999999888241291, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['06009DE0_ZZFORCERGBA16.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': True, 'texgen': True, 'uv_layer': '', 'uv_scale_u_main': 0.004999999888241291, 'uv_scale_v_main': 0.004999999888241291, 'uv_map': False} and texel0A {'image': bpy.data.images['06009DE0_ZZFORCERGBA16.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': True, 'texgen': True, 'uv_layer': '', 'uv_scale_u_main': 0.004999999888241291, 'uv_scale_v_main': 0.004999999888241291, 'uv_map': False} into texel0 {'image': bpy.data.images['06009DE0_ZZFORCERGBA16.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': True, 'texgen': True, 'uv_layer': '', 'uv_scale_u_main': 0.004999999888241291, 'uv_scale_v_main': 0.004999999888241291, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='string' name_q='"string"' material=bpy.data.materials['string'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 1, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeA': {'type': 'normals'}, 'texel0A': {'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 1, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 1, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} and texel0A {'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 1, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} into texel0 {'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 1, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000_ZZFORCERGBA16.tga <bpy_struct, Image("04000000_ZZFORCERGBA16.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='skin.001' name_q='"skin.001"' material=bpy.data.materials['skin.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'image': bpy.data.images['060095E0_ZZPAL0.tga'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeA': {'type': 'normals'}, 'texel0A': {'image': bpy.data.images['060095E0_ZZPAL0.tga'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['060095E0_ZZPAL0.tga'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} and texel0A {'image': bpy.data.images['060095E0_ZZPAL0.tga'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} into texel0 {'image': bpy.data.images['060095E0_ZZPAL0.tga'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='belt.strap' name_q='"belt.strap"' material=bpy.data.materials['belt.strap'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'image': bpy.data.images['RGBA16_06005B40.tga.002'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeA': {'type': 'normals'}, 'texel0A': {'image': bpy.data.images['RGBA16_06005B40.tga.002'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['RGBA16_06005B40.tga.002'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} and texel0A {'image': bpy.data.images['RGBA16_06005B40.tga.002'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} into texel0 {'image': bpy.data.images['RGBA16_06005B40.tga.002'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria.sleeve' name_q='"saria.sleeve"' material=bpy.data.materials['saria.sleeve'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0RGB': {'image': bpy.data.images['060029F0.tga.001'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'texel0A': {'image': bpy.data.images['060029F0.tga.001'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['060029F0.tga.001'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} and texel0A {'image': bpy.data.images['060029F0.tga.001'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} into texel0 {'image': bpy.data.images['060029F0.tga.001'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='f3d_material.005' name_q='"f3d_material.005"' material=bpy.data.materials['f3d_material.005'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'image': bpy.data.images['tex_000C30.rgba16.png.001'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeA': {'type': 'normals'}, 'texel0A': {'image': bpy.data.images['tex_000C30.rgba16.png.001'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['tex_000C30.rgba16.png.001'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} and texel0A {'image': bpy.data.images['tex_000C30.rgba16.png.001'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} into texel0 {'image': bpy.data.images['tex_000C30.rgba16.png.001'], 'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_scale_u': 0, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ocarian.fairy.001' name_q='"ocarian.fairy.001"' material=bpy.data.materials['ocarian.fairy.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'image': bpy.data.images['060091E0.tga.001'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeA': {'type': 'normals'}, 'texel0A': {'image': bpy.data.images['060091E0.tga.001'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['060091E0.tga.001'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} and texel0A {'image': bpy.data.images['060091E0.tga.001'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False} into texel0 {'image': bpy.data.images['060091E0.tga.001'], 'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_scale_u': 0, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_mirror_u': False, 'texgen_linear': False, 'texgen': False, 'uv_layer': '', 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_map': False}
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.4808 sec |   0.4797 sec) Finished exporting materials, now exporting skeletons/animations
INFO:objex.ObjexWriter.write: now exporting skeletons
INFO:objex.ObjexWriter.write:  ... and animations
WARNING:objex.anim.write_armatures: animations are being viewed at 24.0 fps (change this in render settings), but will be used at 20 fps
WARNING:objex.anim.write_armatures: Skipped exporting actions <bpy_collection[1], BlendDataActions> with armature skeleton,
because the armature did not have animation_data
(consider unchecking "Export all actions" under Objex armature properties;
if you do want actions to be exported with this armature,
animation_data can be initialized by creating a dummy action by adding a keyframe in pose mode)
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.4850 sec |   0.4840 sec) Objex Export Finished

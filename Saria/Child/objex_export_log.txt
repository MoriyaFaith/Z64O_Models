WARNING:objex.OBJEX_OT_export.execute: Scene uses display_device='sRGB' which changes how colors are displayed in the viewport, reducing the preview accuracy.
This can be changed under Color Management in Scene properties.
Note that this should also be kept consistent with the Color Space property of image texture nodes (display_device="None", Color Space="Linear").
In Blender 2.7x, "Color Space" can be found in the Image Editor.
Recommended value: None
INFO:objex.OBJEX_OT_export.progress_report_print:   (  0.0000 sec |   0.0000 sec) Objex Export path: 'D:\\Games\\Modding\\ModLoader64\\Models\\Z64O_Models\\Saria\\child\\object_link_child.objex'
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating FPS.Forearm.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0150 sec |   0.0140 sec) Finished writing geometry of 'FPS.Forearm.R'.
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0170 sec |   0.0000 sec) Finished writing geometry of 'skeleton'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Fist.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0239 sec |   0.0049 sec) Finished writing geometry of 'Fist.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Fist.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0319 sec |   0.0070 sec) Finished writing geometry of 'Fist.R'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating riggedmesh, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0618 sec |   0.0279 sec) Finished writing geometry of 'riggedmesh'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Bottle, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0708 sec |   0.0070 sec) Finished writing geometry of 'Bottle'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Blade.1, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0778 sec |   0.0049 sec) Finished writing geometry of 'Blade.1'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Hilt.1, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0858 sec |   0.0060 sec) Finished writing geometry of 'Hilt.1'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Ocarina.1, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0928 sec |   0.0059 sec) Finished writing geometry of 'Ocarina.1'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Ocarina.2, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1007 sec |   0.0070 sec) Finished writing geometry of 'Ocarina.2'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Bottle.Hand.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1077 sec |   0.0060 sec) Finished writing geometry of 'Bottle.Hand.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Blade.2, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1207 sec |   0.0120 sec) Finished writing geometry of 'Blade.2'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating DekuStick, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1307 sec |   0.0070 sec) Finished writing geometry of 'DekuStick'.
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.1326 sec |   0.1316 sec) Finished exporting geometry, now exporting materials
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_060029F0.001' name_q='"mtl_060029F0.001"' material=bpy.data.materials['mtl_060029F0.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['060029F0.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': False}, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['060029F0.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': False}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['060029F0.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': False} and texel0A {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['060029F0.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': False} into texel0 {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['060029F0.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_060037C8.001' name_q='"mtl_060037C8.001"' material=bpy.data.materials['mtl_060037C8.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['060037C8.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False}, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['060037C8.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['060037C8.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False} and texel0A {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['060037C8.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False} into texel0 {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['060037C8.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_06002530.001' name_q='"mtl_06002530.001"' material=bpy.data.materials['mtl_06002530.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['skin.png'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['skin.png'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': False}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['skin.png'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': False} and texel0A {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['skin.png'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': False} into texel0 {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['skin.png'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ms.hilt.001' name_q='"ms.hilt.001"' material=bpy.data.materials['ms.hilt.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['060090E8.tga'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['060090E8.tga'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['060090E8.tga'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False} and texel0A {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['060090E8.tga'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False} into texel0 {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['060090E8.tga'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_09000000.001' name_q='"mtl_09000000.001"' material=bpy.data.materials['mtl_09000000.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['eyes.png'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['eyes.png'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': False}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['eyes.png'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': False} and texel0A {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['eyes.png'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': False} into texel0 {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['eyes.png'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_060024F0.001' name_q='"mtl_060024F0.001"' material=bpy.data.materials['mtl_060024F0.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['060024F0.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False}, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['060024F0.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['060024F0.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False} and texel0A {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['060024F0.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False} into texel0 {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['060024F0.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_06002EC8.001' name_q='"mtl_06002EC8.001"' material=bpy.data.materials['mtl_06002EC8.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['06002EC8.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['06002EC8.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['06002EC8.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False} and texel0A {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['06002EC8.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False} into texel0 {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['06002EC8.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='empty.dummy' name_q='"empty.dummy"' material=bpy.data.materials['empty.dummy'] face_img=None
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_06003808.001' name_q='"mtl_06003808.001"' material=bpy.data.materials['mtl_06003808.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['06003808.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['06003808.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': False}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['06003808.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': False} and texel0A {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['06003808.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': False} into texel0 {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['06003808.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria_boot' name_q='"saria_boot"' material=bpy.data.materials['saria_boot'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['boot_ZZTUNIC.png'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False}, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['boot_ZZTUNIC.png'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['boot_ZZTUNIC.png'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False} and texel0A {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['boot_ZZTUNIC.png'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False} into texel0 {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['boot_ZZTUNIC.png'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_06003788.001' name_q='"mtl_06003788.001"' material=bpy.data.materials['mtl_06003788.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['06003788.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['06003788.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['06003788.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False} and texel0A {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['06003788.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False} into texel0 {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['06003788.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria_belt' name_q='"saria_belt"' material=bpy.data.materials['saria_belt'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['06002770.tga'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': True}, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['06002770.tga'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': True}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['06002770.tga'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': True} and texel0A {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['06002770.tga'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': True} into texel0 {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['06002770.tga'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': True}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='contents' name_q='"contents"' material=bpy.data.materials['contents'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_scale_v_main': 0.022888200357556343, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 0.022888200357556343, 'texgen': True, 'image': bpy.data.images['06000508.tga'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_u': True}, 'texel0RGB': {'uv_scale_v_main': 0.022888200357556343, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 0.022888200357556343, 'texgen': True, 'image': bpy.data.images['06000508.tga'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_u': True}, 'primitiveA': 0.75}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 0.022888200357556343, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 0.022888200357556343, 'texgen': True, 'image': bpy.data.images['06000508.tga'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_u': True} and texel0A {'uv_scale_v_main': 0.022888200357556343, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 0.022888200357556343, 'texgen': True, 'image': bpy.data.images['06000508.tga'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_u': True} into texel0 {'uv_scale_v_main': 0.022888200357556343, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 0.022888200357556343, 'texgen': True, 'image': bpy.data.images['06000508.tga'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_u': True}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='glass' name_q='"glass"' material=bpy.data.materials['glass'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_scale_v_main': 0.022887999191880226, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 0.022887999191880226, 'texgen': True, 'image': bpy.data.images['06000508.tga'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_u': True}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 0.022887999191880226, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 0.022887999191880226, 'texgen': True, 'image': bpy.data.images['06000508.tga'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_u': True}, 'primitiveA': 0.75}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 0.75 into primitive (1.0, 1.0, 1.0, 0.75)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 0.022887999191880226, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 0.022887999191880226, 'texgen': True, 'image': bpy.data.images['06000508.tga'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_u': True} and texel0A {'uv_scale_v_main': 0.022887999191880226, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 0.022887999191880226, 'texgen': True, 'image': bpy.data.images['06000508.tga'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_u': True} into texel0 {'uv_scale_v_main': 0.022887999191880226, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 0.022887999191880226, 'texgen': True, 'image': bpy.data.images['06000508.tga'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_u': True}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 06000508.tga <bpy_struct, Image("06000508.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='dekustick' name_q='"dekustick"' material=bpy.data.materials['dekustick'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['0600CC30.tga'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['0600CC30.tga'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.44520121812820435, 0.18447501957416534, 0.07818741351366043, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['0600CC30.tga'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False} and texel0A {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['0600CC30.tga'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False} into texel0 {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['0600CC30.tga'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria_tunic_light' name_q='"saria_tunic_light"' material=bpy.data.materials['saria_tunic_light'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['tunic_ZZTUNIC.png'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False}, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['tunic_ZZTUNIC.png'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['tunic_ZZTUNIC.png'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False} and texel0A {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['tunic_ZZTUNIC.png'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False} into texel0 {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['tunic_ZZTUNIC.png'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Ocarina' name_q='"Ocarina"' material=bpy.data.materials['Ocarina'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['060091E0.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['060091E0.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['060091E0.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False} and texel0A {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['060091E0.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False} into texel0 {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['060091E0.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ms.gem' name_q='"ms.gem"' material=bpy.data.materials['ms.gem'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_scale_v_main': 0.02500000037252903, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 0.02500000037252903, 'texgen': True, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga.002'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_u': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 0.02500000037252903, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 0.02500000037252903, 'texgen': True, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga.002'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_u': False}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 0.818792998790741, 0.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 0.02500000037252903, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 0.02500000037252903, 'texgen': True, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga.002'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_u': False} and texel0A {'uv_scale_v_main': 0.02500000037252903, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 0.02500000037252903, 'texgen': True, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga.002'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_u': False} into texel0 {'uv_scale_v_main': 0.02500000037252903, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 0.02500000037252903, 'texgen': True, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga.002'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ms.metal' name_q='"ms.metal"' material=bpy.data.materials['ms.metal'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 0.05000000074505806, 'texgen': True, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga.002'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_u': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 0.05000000074505806, 'texgen': True, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga.002'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_u': False}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.7911859750747681, 0.9793670177459717, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 0.05000000074505806, 'texgen': True, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga.002'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_u': False} and texel0A {'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 0.05000000074505806, 'texgen': True, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga.002'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_u': False} into texel0 {'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 0.05000000074505806, 'texgen': True, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga.002'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000_ZZFORCERGBA16.tga.002 <bpy_struct, Image("04000000_ZZFORCERGBA16.tga.002")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_06006908.001' name_q='"mtl_06006908.001"' material=bpy.data.materials['mtl_06006908.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['06006908.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['06006908.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': False}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['06006908.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': False} and texel0A {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['06006908.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': False} into texel0 {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['06006908.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ns.guard' name_q='"ns.guard"' material=bpy.data.materials['ns.guard'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['06006CE0.tga'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['06006CE0.tga'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['06006CE0.tga'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False} and texel0A {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['06006CE0.tga'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False} into texel0 {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['06006CE0.tga'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria_tunic_dark' name_q='"saria_tunic_dark"' material=bpy.data.materials['saria_tunic_dark'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['sleeves_headband_ZZTUNIC.png'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False}, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['sleeves_headband_ZZTUNIC.png'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['sleeves_headband_ZZTUNIC.png'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False} and texel0A {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['sleeves_headband_ZZTUNIC.png'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False} into texel0 {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['sleeves_headband_ZZTUNIC.png'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_06003548.001' name_q='"mtl_06003548.001"' material=bpy.data.materials['mtl_06003548.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['06003548.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['06003548.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': False}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['06003548.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': False} and texel0A {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['06003548.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': False} into texel0 {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['06003548.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_04000000_TEXGEN.001' name_q='"mtl_04000000_TEXGEN.001"' material=bpy.data.materials['mtl_04000000_TEXGEN.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_scale_v_main': 0.23000000417232513, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 0.23000000417232513, 'texgen': True, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 0.23000000417232513, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 0.23000000417232513, 'texgen': True, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 0.23000000417232513, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 0.23000000417232513, 'texgen': True, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False} and texel0A {'uv_scale_v_main': 0.23000000417232513, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 0.23000000417232513, 'texgen': True, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False} into texel0 {'uv_scale_v_main': 0.23000000417232513, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': True, 'uv_scale_u_main': 0.23000000417232513, 'texgen': True, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga.001'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_06002570.001' name_q='"mtl_06002570.001"' material=bpy.data.materials['mtl_06002570.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['leg.png'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['leg.png'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': False}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['leg.png'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': False} and texel0A {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['leg.png'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': False} into texel0 {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['leg.png'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_0A000000.001' name_q='"mtl_0A000000.001"' material=bpy.data.materials['mtl_0A000000.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['mouth.png'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['mouth.png'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': False}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['mouth.png'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': False} and texel0A {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['mouth.png'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': False} into texel0 {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['mouth.png'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': False}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='skin' name_q='"skin"' material=bpy.data.materials['skin'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['060095E0_ZZPAL0.tga'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': False}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['060095E0_ZZPAL0.tga'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': False}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['060095E0_ZZPAL0.tga'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': False} and texel0A {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['060095E0_ZZPAL0.tga'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': False} into texel0 {'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_layer': '', 'uv_wrap_u': False, 'uv_scale_u_main': 1.0, 'texgen': False, 'image': bpy.data.images['060095E0_ZZPAL0.tga'], 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_mirror_u': False}
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.1716 sec |   0.1706 sec) Finished exporting materials, now exporting skeletons/animations
INFO:objex.ObjexWriter.write: now exporting skeletons
INFO:objex.ObjexWriter.write:  ... and animations
WARNING:objex.anim.write_armatures: animations are being viewed at 24.0 fps (change this in render settings), but will be used at 20 fps
WARNING:objex.anim.write_armatures: Skipped exporting actions <bpy_collection[1], BlendDataActions> with armature skeleton,
because the armature did not have animation_data
(consider unchecking "Export all actions" under Objex armature properties;
if you do want actions to be exported with this armature,
animation_data can be initialized by creating a dummy action by adding a keyframe in pose mode)
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.1755 sec |   0.1745 sec) Objex Export Finished

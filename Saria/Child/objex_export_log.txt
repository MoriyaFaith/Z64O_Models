INFO:objex.OBJEX_OT_export.progress_report_print:   (  0.0000 sec |   0.0000 sec) Objex Export path: 'D:\\Games\\Modding\\ModLoader64\\Models\\Z64\\Saria\\Child\\object_link_child.objex'
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Slingshot.String, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0093 sec |   0.0073 sec) Finished writing geometry of 'Slingshot.String'.
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0122 sec |   0.0010 sec) Finished writing geometry of 'skeleton'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Sheath, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0203 sec |   0.0069 sec) Finished writing geometry of 'Sheath'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Ocarina.2, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0292 sec |   0.0080 sec) Finished writing geometry of 'Ocarina.2'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Blade.1, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0382 sec |   0.0080 sec) Finished writing geometry of 'Blade.1'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Boomerang, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0561 sec |   0.0160 sec) Finished writing geometry of 'Boomerang'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Fist.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0660 sec |   0.0089 sec) Finished writing geometry of 'Fist.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Fist.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0751 sec |   0.0071 sec) Finished writing geometry of 'Fist.R'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Hilt.1, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0840 sec |   0.0070 sec) Finished writing geometry of 'Hilt.1'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Shield.1.Old, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0935 sec |   0.0075 sec) Finished writing geometry of 'Shield.1.Old'.
WARNING:objex.ObjexWriter.write_object: Mesh Slingshot is not triangulated and will be triangulated automatically (for exporting only).
Preview accuracy (UVs, shading, vertex colors) is improved by using a triangulated mesh.
Note: mesh has no triangulate modifier
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1059 sec |   0.0100 sec) Finished writing geometry of 'Slingshot'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Ocarina.1, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1149 sec |   0.0080 sec) Finished writing geometry of 'Ocarina.1'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Bottle, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1234 sec |   0.0065 sec) Finished writing geometry of 'Bottle'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Bottle.Hand.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1324 sec |   0.0070 sec) Finished writing geometry of 'Bottle.Hand.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating GoronBracelet, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1427 sec |   0.0083 sec) Finished writing geometry of 'GoronBracelet'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Mask.Zora, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1537 sec |   0.0090 sec) Finished writing geometry of 'Mask.Zora'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Mask.Gerudo, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1662 sec |   0.0100 sec) Finished writing geometry of 'Mask.Gerudo'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Mask.Goron, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1775 sec |   0.0094 sec) Finished writing geometry of 'Mask.Goron'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Mask.Keaton, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1869 sec |   0.0080 sec) Finished writing geometry of 'Mask.Keaton'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Mask.Skull, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1981 sec |   0.0082 sec) Finished writing geometry of 'Mask.Skull'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Mask.Spooky, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2064 sec |   0.0060 sec) Finished writing geometry of 'Mask.Spooky'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Mask.Truth, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2154 sec |   0.0070 sec) Finished writing geometry of 'Mask.Truth'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating riggedmesh, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2477 sec |   0.0293 sec) Finished writing geometry of 'riggedmesh'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Blade.2, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2637 sec |   0.0139 sec) Finished writing geometry of 'Blade.2'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating FPS.Forearm.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2797 sec |   0.0141 sec) Finished writing geometry of 'FPS.Forearm.R'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Shield.2, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2907 sec |   0.0079 sec) Finished writing geometry of 'Shield.2'.
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.2930 sec |   0.2920 sec) Finished exporting geometry, now exporting materials
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria_boot' name_q='"saria_boot"' material=bpy.data.materials['saria_boot'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['boot_ZZTUNIC.png'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['boot_ZZTUNIC.png'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['boot_ZZTUNIC.png'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['boot_ZZTUNIC.png'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['boot_ZZTUNIC.png'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='gerudo.eyes' name_q='"gerudo.eyes"' material=bpy.data.materials['gerudo.eyes'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06010160.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06010160.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06010160.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06010160.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06010160.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='keton.edge' name_q='"keton.edge"' material=bpy.data.materials['keton.edge'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600B960.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600B960.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600B960.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600B960.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600B960.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='slingshot' name_q='"slingshot"' material=bpy.data.materials['slingshot'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06008DE0.tga'], 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06008DE0.tga'], 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06008DE0.tga'], 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06008DE0.tga'], 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06008DE0.tga'], 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_06002570.001' name_q='"mtl_06002570.001"' material=bpy.data.materials['mtl_06002570.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['leg.png'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['leg.png'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['leg.png'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['leg.png'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['leg.png'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
WARNING:objex.export_objex_mtl.write_mtl: Image leg.png uses Color Space 'sRGB',
but the scene uses display_device='None'. This makes the preview less accurate.
The Color Space property can be found in the Image Editor.
Recommended value: Linear
TRACE:objex.export_objex_mtl.write_mtl: Writing name='zora.eyes' name_q='"zora.eyes"' material=bpy.data.materials['zora.eyes'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600F960.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600F960.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600F960.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600F960.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600F960.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ms.metal' name_q='"ms.metal"' material=bpy.data.materials['ms.metal'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 0.05000000074505806, 'texgen_linear': True, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 0.05000000074505806, 'texgen_linear': True, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.7911859750747681, 0.9793670177459717, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 0.05000000074505806, 'texgen_linear': True, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 0.05000000074505806, 'texgen_linear': True, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 0.05000000074505806, 'texgen_linear': True, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='red.cap' name_q='"red.cap"' material=bpy.data.materials['red.cap'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': True, 'uv_scale_v_main': 0.004999999888241291, 'uv_map': False, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 0.004999999888241291, 'texgen_linear': True, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': True, 'uv_scale_v_main': 0.004999999888241291, 'uv_map': False, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 0.004999999888241291, 'texgen_linear': True, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.6203922033309937, 0.09568627923727036, 0.09568627923727036, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': True, 'uv_scale_v_main': 0.004999999888241291, 'uv_map': False, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 0.004999999888241291, 'texgen_linear': True, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': True, 'uv_scale_v_main': 0.004999999888241291, 'uv_map': False, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 0.004999999888241291, 'texgen_linear': True, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': True, 'uv_scale_v_main': 0.004999999888241291, 'uv_map': False, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 0.004999999888241291, 'texgen_linear': True, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000_ZZFORCERGBA16.tga <bpy_struct, Image("04000000_ZZFORCERGBA16.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='sheath_saria' name_q='"sheath_saria"' material=bpy.data.materials['sheath_saria'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['sheath.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['sheath.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['sheath.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['sheath.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['sheath.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
WARNING:objex.export_objex_mtl.write_mtl: Image sheath.tga uses Color Space 'sRGB',
but the scene uses display_device='None'. This makes the preview less accurate.
The Color Space property can be found in the Image Editor.
Recommended value: Linear
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Boomerang.green' name_q='"Boomerang.green"' material=bpy.data.materials['Boomerang.green'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_0': bpy.data...nodes["OBJEX_Color0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.024203777313232422, 0.5, 0.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='zora.mouth' name_q='"zora.mouth"' material=bpy.data.materials['zora.mouth'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600F160.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600F160.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600F160.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600F160.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600F160.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_09000000.001' name_q='"mtl_09000000.001"' material=bpy.data.materials['mtl_09000000.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['eyes.png'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['eyes.png'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['eyes.png'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['eyes.png'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['eyes.png'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='skel.nose' name_q='"skel.nose"' material=bpy.data.materials['skel.nose'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600A2E0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600A2E0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600A2E0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600A2E0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600A2E0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='goron.nose' name_q='"goron.nose"' material=bpy.data.materials['goron.nose'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600E5E0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600E5E0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600E5E0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600E5E0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600E5E0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='goron.lips' name_q='"goron.lips"' material=bpy.data.materials['goron.lips'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600CDE0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600CDE0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600CDE0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600CDE0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600CDE0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='gerudo.hair' name_q='"gerudo.hair"' material=bpy.data.materials['gerudo.hair'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06010B60.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06010B60.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06010B60.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06010B60.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06010B60.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='goron.eyes' name_q='"goron.eyes"' material=bpy.data.materials['goron.eyes'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600DDE0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600DDE0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600DDE0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600DDE0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600DDE0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='gerudo.skin' name_q='"gerudo.skin"' material=bpy.data.materials['gerudo.skin'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06010D60.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06010D60.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06010D60.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06010D60.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06010D60.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_06002530.001' name_q='"mtl_06002530.001"' material=bpy.data.materials['mtl_06002530.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['skin.png'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['skin.png'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['skin.png'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['skin.png'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['skin.png'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
WARNING:objex.export_objex_mtl.write_mtl: Image skin.png uses Color Space 'sRGB',
but the scene uses display_device='None'. This makes the preview less accurate.
The Color Space property can be found in the Image Editor.
Recommended value: Linear
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ms.gem' name_q='"ms.gem"' material=bpy.data.materials['ms.gem'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': True, 'uv_scale_v_main': 0.02500000037252903, 'uv_map': False, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 0.02500000037252903, 'texgen_linear': True, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': True, 'uv_scale_v_main': 0.02500000037252903, 'uv_map': False, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 0.02500000037252903, 'texgen_linear': True, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 0.818792998790741, 0.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': True, 'uv_scale_v_main': 0.02500000037252903, 'uv_map': False, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 0.02500000037252903, 'texgen_linear': True, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': True, 'uv_scale_v_main': 0.02500000037252903, 'uv_map': False, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 0.02500000037252903, 'texgen_linear': True, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': True, 'uv_scale_v_main': 0.02500000037252903, 'uv_map': False, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 0.02500000037252903, 'texgen_linear': True, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000_ZZFORCERGBA16.tga <bpy_struct, Image("04000000_ZZFORCERGBA16.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='string.001' name_q='"string.001"' material=bpy.data.materials['string.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['060096E8.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['060096E8.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['060096E8.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['060096E8.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['060096E8.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_06003548.001' name_q='"mtl_06003548.001"' material=bpy.data.materials['mtl_06003548.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06003548.tga.001'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06003548.tga.001'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06003548.tga.001'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06003548.tga.001'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06003548.tga.001'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
WARNING:objex.export_objex_mtl.write_mtl: Image 06003548.tga.001 uses Color Space 'sRGB',
but the scene uses display_device='None'. This makes the preview less accurate.
The Color Space property can be found in the Image Editor.
Recommended value: Linear
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_06002EC8.001' name_q='"mtl_06002EC8.001"' material=bpy.data.materials['mtl_06002EC8.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06002EC8.tga.001'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06002EC8.tga.001'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06002EC8.tga.001'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06002EC8.tga.001'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06002EC8.tga.001'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
WARNING:objex.export_objex_mtl.write_mtl: Image 06002EC8.tga.001 uses Color Space 'sRGB',
but the scene uses display_device='None'. This makes the preview less accurate.
The Color Space property can be found in the Image Editor.
Recommended value: Linear
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_060029F0.001' name_q='"mtl_060029F0.001"' material=bpy.data.materials['mtl_060029F0.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['060029F0.tga.001'], 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['060029F0.tga.001'], 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['060029F0.tga.001'], 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['060029F0.tga.001'], 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['060029F0.tga.001'], 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
WARNING:objex.export_objex_mtl.write_mtl: Image 060029F0.tga.001 uses Color Space 'sRGB',
but the scene uses display_device='None'. This makes the preview less accurate.
The Color Space property can be found in the Image Editor.
Recommended value: Linear
TRACE:objex.export_objex_mtl.write_mtl: Writing name='glass.contents' name_q='"glass.contents"' material=bpy.data.materials['glass.contents'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': True, 'texgen': True, 'uv_scale_v_main': 0.022888200357556343, 'uv_map': False, 'image': bpy.data.images['04001800_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_scale_u_main': 0.022888200357556343, 'texgen_linear': True, 'uv_layer': ''}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': True, 'texgen': True, 'uv_scale_v_main': 0.022888200357556343, 'uv_map': False, 'image': bpy.data.images['04001800_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_scale_u_main': 0.022888200357556343, 'texgen_linear': True, 'uv_layer': ''}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'primitiveA': 0.75, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': True, 'texgen': True, 'uv_scale_v_main': 0.022888200357556343, 'uv_map': False, 'image': bpy.data.images['04001800_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_scale_u_main': 0.022888200357556343, 'texgen_linear': True, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': True, 'texgen': True, 'uv_scale_v_main': 0.022888200357556343, 'uv_map': False, 'image': bpy.data.images['04001800_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_scale_u_main': 0.022888200357556343, 'texgen_linear': True, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': True, 'texgen': True, 'uv_scale_v_main': 0.022888200357556343, 'uv_map': False, 'image': bpy.data.images['04001800_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_scale_u_main': 0.022888200357556343, 'texgen_linear': True, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='goron.hair' name_q='"goron.hair"' material=bpy.data.materials['goron.hair'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600E660.tga'], 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600E660.tga'], 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600E660.tga'], 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600E660.tga'], 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600E660.tga'], 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='sheika.insignia' name_q='"sheika.insignia"' material=bpy.data.materials['sheika.insignia'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600BDE0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600BDE0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600BDE0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600BDE0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600BDE0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria_belt' name_q='"saria_belt"' material=bpy.data.materials['saria_belt'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06002770.tga'], 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06002770.tga'], 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06002770.tga'], 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06002770.tga'], 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06002770.tga'], 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
WARNING:objex.export_objex_mtl.write_mtl: Image 06002770.tga uses Color Space 'sRGB',
but the scene uses display_device='None'. This makes the preview less accurate.
The Color Space property can be found in the Image Editor.
Recommended value: Linear
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Boomerang,Main' name_q='"Boomerang,Main"' material=bpy.data.materials['Boomerang,Main'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_0': bpy.data...nodes["OBJEX_Color0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 0.6797637939453125, 0.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='gerudo.lips' name_q='"gerudo.lips"' material=bpy.data.materials['gerudo.lips'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06010960.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06010960.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06010960.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06010960.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06010960.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_0A000000.001' name_q='"mtl_0A000000.001"' material=bpy.data.materials['mtl_0A000000.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['mouth.png'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['mouth.png'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['mouth.png'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['mouth.png'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['mouth.png'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='redead.brown' name_q='"redead.brown"' material=bpy.data.materials['redead.brown'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600A560.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600A560.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.21176472306251526, 0.05098039656877518, 0.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600A560.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600A560.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600A560.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='slingshot.string' name_q='"slingshot.string"' material=bpy.data.materials['slingshot.string'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='goron.skin' name_q='"goron.skin"' material=bpy.data.materials['goron.skin'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600E860.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600E860.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600E860.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600E860.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600E860.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria_tunic_dark' name_q='"saria_tunic_dark"' material=bpy.data.materials['saria_tunic_dark'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['sleeves_headband_ZZTUNIC.png'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['sleeves_headband_ZZTUNIC.png'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['sleeves_headband_ZZTUNIC.png'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['sleeves_headband_ZZTUNIC.png'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['sleeves_headband_ZZTUNIC.png'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ocarian.fairy' name_q='"ocarian.fairy"' material=bpy.data.materials['ocarian.fairy'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['060091E0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['060091E0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['060091E0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['060091E0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['060091E0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='keton.face' name_q='"keton.face"' material=bpy.data.materials['keton.face'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600B560.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600B560.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600B560.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600B560.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600B560.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='goran.insignia' name_q='"goran.insignia"' material=bpy.data.materials['goran.insignia'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06009E60_ZZFORCERGBA16.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06009E60_ZZFORCERGBA16.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06009E60_ZZFORCERGBA16.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06009E60_ZZFORCERGBA16.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06009E60_ZZFORCERGBA16.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria_hands' name_q='"saria_hands"' material=bpy.data.materials['saria_hands'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['hand.png'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['hand.png'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['hand.png'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['hand.png'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['hand.png'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
WARNING:objex.export_objex_mtl.write_mtl: Image hand.png uses Color Space 'sRGB',
but the scene uses display_device='None'. This makes the preview less accurate.
The Color Space property can be found in the Image Editor.
Recommended value: Linear
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Boomerang.yellow' name_q='"Boomerang.yellow"' material=bpy.data.materials['Boomerang.yellow'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_0': bpy.data...nodes["OBJEX_Color0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 0.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='skel.tooth' name_q='"skel.tooth"' material=bpy.data.materials['skel.tooth'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600A260.tga'], 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600A260.tga'], 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600A260.tga'], 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600A260.tga'], 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600A260.tga'], 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='hylian.crest' name_q='"hylian.crest"' material=bpy.data.materials['hylian.crest'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['04000400_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['04000400_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['04000400_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['04000400_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['04000400_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ns.guard' name_q='"ns.guard"' material=bpy.data.materials['ns.guard'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06006CE0.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06006CE0.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06006CE0.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06006CE0.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06006CE0.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='new.shield_front' name_q='"new.shield_front"' material=bpy.data.materials['new.shield_front'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['kokiri_shield.tga'], 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['kokiri_shield.tga'], 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['kokiri_shield.tga'], 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['kokiri_shield.tga'], 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['kokiri_shield.tga'], 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
WARNING:objex.export_objex_mtl.write_mtl: Image kokiri_shield.tga uses Color Space 'sRGB',
but the scene uses display_device='None'. This makes the preview less accurate.
The Color Space property can be found in the Image Editor.
Recommended value: Linear
TRACE:objex.export_objex_mtl.write_mtl: Writing name='glass' name_q='"glass"' material=bpy.data.materials['glass'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': True, 'texgen': True, 'uv_scale_v_main': 0.022887999191880226, 'uv_map': False, 'image': bpy.data.images['04001800_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_scale_u_main': 0.022887999191880226, 'texgen_linear': True, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 0.75, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': True, 'texgen': True, 'uv_scale_v_main': 0.022887999191880226, 'uv_map': False, 'image': bpy.data.images['04001800_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_scale_u_main': 0.022887999191880226, 'texgen_linear': True, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 0.75 into primitive (1.0, 1.0, 1.0, 0.75)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': True, 'texgen': True, 'uv_scale_v_main': 0.022887999191880226, 'uv_map': False, 'image': bpy.data.images['04001800_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_scale_u_main': 0.022887999191880226, 'texgen_linear': True, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': True, 'texgen': True, 'uv_scale_v_main': 0.022887999191880226, 'uv_map': False, 'image': bpy.data.images['04001800_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_scale_u_main': 0.022887999191880226, 'texgen_linear': True, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': True, 'texgen': True, 'uv_scale_v_main': 0.022887999191880226, 'uv_map': False, 'image': bpy.data.images['04001800_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_scale_u_main': 0.022887999191880226, 'texgen_linear': True, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04001800_ZZFORCERGBA16.tga <bpy_struct, Image("04001800_ZZFORCERGBA16.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='skel.eyes' name_q='"skel.eyes"' material=bpy.data.materials['skel.eyes'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600A360.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600A360.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600A360.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600A360.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600A360.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='gold' name_q='"gold"' material=bpy.data.materials['gold'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'image': bpy.data.images['06009DE0_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 0.05000000074505806, 'texgen_linear': True, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'image': bpy.data.images['06009DE0_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 0.05000000074505806, 'texgen_linear': True, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'image': bpy.data.images['06009DE0_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 0.05000000074505806, 'texgen_linear': True, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'image': bpy.data.images['06009DE0_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 0.05000000074505806, 'texgen_linear': True, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'image': bpy.data.images['06009DE0_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 0.05000000074505806, 'texgen_linear': True, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_06003788.001' name_q='"mtl_06003788.001"' material=bpy.data.materials['mtl_06003788.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06003788.tga.001'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06003788.tga.001'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06003788.tga.001'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06003788.tga.001'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06003788.tga.001'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria_sheath_black' name_q='"saria_sheath_black"' material=bpy.data.materials['saria_sheath_black'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['sheath.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['sheath.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.0, 0.0, 0.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['sheath.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['sheath.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['sheath.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture sheath.tga <bpy_struct, Image("sheath.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='truth.side' name_q='"truth.side"' material=bpy.data.materials['truth.side'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600B9E0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600B9E0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600B9E0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600B9E0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600B9E0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='sora.skin' name_q='"sora.skin"' material=bpy.data.materials['sora.skin'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600E8E0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600E8E0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600E8E0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600E8E0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600E8E0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ms.hilt.001' name_q='"ms.hilt.001"' material=bpy.data.materials['ms.hilt.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['060090E8.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['060090E8.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['060090E8.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['060090E8.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['060090E8.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='shine' name_q='"shine"' material=bpy.data.materials['shine'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': True, 'texgen': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_scale_u_main': 0.05000000074505806, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': True, 'texgen': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_scale_u_main': 0.05000000074505806, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': True, 'texgen': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_scale_u_main': 0.05000000074505806, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': True, 'texgen': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_scale_u_main': 0.05000000074505806, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': True, 'texgen': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_scale_u_main': 0.05000000074505806, 'texgen_linear': False, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000_ZZFORCERGBA16.tga <bpy_struct, Image("04000000_ZZFORCERGBA16.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria_tunic_light' name_q='"saria_tunic_light"' material=bpy.data.materials['saria_tunic_light'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['tunic_ZZTUNIC.png'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['tunic_ZZTUNIC.png'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['tunic_ZZTUNIC.png'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['tunic_ZZTUNIC.png'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['tunic_ZZTUNIC.png'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_06003808.001' name_q='"mtl_06003808.001"' material=bpy.data.materials['mtl_06003808.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06003808.tga.001'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06003808.tga.001'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06003808.tga.001'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06003808.tga.001'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['06003808.tga.001'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
WARNING:objex.export_objex_mtl.write_mtl: Image 06003808.tga.001 uses Color Space 'sRGB',
but the scene uses display_device='None'. This makes the preview less accurate.
The Color Space property can be found in the Image Editor.
Recommended value: Linear
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_060037C8.001' name_q='"mtl_060037C8.001"' material=bpy.data.materials['mtl_060037C8.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['060037C8.tga.001'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['060037C8.tga.001'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['060037C8.tga.001'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['060037C8.tga.001'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['060037C8.tga.001'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
WARNING:objex.export_objex_mtl.write_mtl: Image 060037C8.tga.001 uses Color Space 'sRGB',
but the scene uses display_device='None'. This makes the preview less accurate.
The Color Space property can be found in the Image Editor.
Recommended value: Linear
TRACE:objex.export_objex_mtl.write_mtl: Writing name='string' name_q='"string"' material=bpy.data.materials['string'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 1, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 1, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 1, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 1, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 1, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000_ZZFORCERGBA16.tga <bpy_struct, Image("04000000_ZZFORCERGBA16.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='boomerang.gem' name_q='"boomerang.gem"' material=bpy.data.materials['boomerang.gem'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 0.05000000074505806, 'texgen_linear': True, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 0.05000000074505806, 'texgen_linear': True, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.8962693810462952, 0.0, 0.18366463482379913, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 0.05000000074505806, 'texgen_linear': True, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 0.05000000074505806, 'texgen_linear': True, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': True, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 0.05000000074505806, 'texgen_linear': True, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000_ZZFORCERGBA16.tga <bpy_struct, Image("04000000_ZZFORCERGBA16.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='hylian.back' name_q='"hylian.back"' material=bpy.data.materials['hylian.back'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': True, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['060089E0.tga'], 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': True, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['060089E0.tga'], 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': True, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['060089E0.tga'], 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': True, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['060089E0.tga'], 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': True, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['060089E0.tga'], 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': True, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='kokiri.hilt' name_q='"kokiri.hilt"' material=bpy.data.materials['kokiri.hilt'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['kokiri_sword.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['kokiri_sword.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['kokiri_sword.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['kokiri_sword.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['kokiri_sword.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
WARNING:objex.export_objex_mtl.write_mtl: Image kokiri_sword.tga uses Color Space 'sRGB',
but the scene uses display_device='None'. This makes the preview less accurate.
The Color Space property can be found in the Image Editor.
Recommended value: Linear
TRACE:objex.export_objex_mtl.write_mtl: Writing name='zora.fin' name_q='"zora.fin"' material=bpy.data.materials['zora.fin'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600E960.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600E960.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600E960.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600E960.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600E960.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='redead.yellow' name_q='"redead.yellow"' material=bpy.data.materials['redead.yellow'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600A560.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600A560.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.21176472306251526, 0.21176472306251526, 0.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600A560.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600A560.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['0600A560.tga'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 0600A560.tga <bpy_struct, Image("0600A560.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='skin' name_q='"skin"' material=bpy.data.materials['skin'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['060095E0_ZZPAL0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['060095E0_ZZPAL0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['060095E0_ZZPAL0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['060095E0_ZZPAL0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['060095E0_ZZPAL0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='wood.back' name_q='"wood.back"' material=bpy.data.materials['wood.back'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['060071E0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['060071E0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['060071E0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['060071E0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['060071E0.tga'], 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_060024F0.001' name_q='"mtl_060024F0.001"' material=bpy.data.materials['mtl_060024F0.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0A': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['060024F0.tga.001'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'texel0RGB': {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['060024F0.tga.001'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['060024F0.tga.001'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} and texel0A {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['060024F0.tga.001'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''} into texel0 {'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_mirror_v': False, 'texgen': False, 'uv_scale_v_main': 1.0, 'uv_map': False, 'image': bpy.data.images['060024F0.tga.001'], 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_scale_u_main': 1.0, 'texgen_linear': False, 'uv_layer': ''}
WARNING:objex.export_objex_mtl.write_mtl: Image 060024F0.tga.001 uses Color Space 'sRGB',
but the scene uses display_device='None'. This makes the preview less accurate.
The Color Space property can be found in the Image Editor.
Recommended value: Linear
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.3916 sec |   0.3906 sec) Finished exporting materials, now exporting skeletons/animations
INFO:objex.ObjexWriter.write: now exporting skeletons
INFO:objex.ObjexWriter.write:  ... and animations
WARNING:objex.anim.write_armatures: animations are being viewed at 24.0 fps (change this in render settings), but will be used at 20 fps
WARNING:objex.anim.write_armatures: Skipped exporting actions <bpy_collection[1], BlendDataActions> with armature skeleton,
because the armature did not have animation_data
(consider unchecking "Export all actions" under Objex armature properties;
if you do want actions to be exported with this armature,
animation_data can be initialized by creating a dummy action by adding a keyframe in pose mode)
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.3959 sec |   0.3949 sec) Objex Export Finished

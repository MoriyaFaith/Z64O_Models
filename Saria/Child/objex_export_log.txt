WARNING:objex.OBJEX_OT_export.execute: Scene uses display_device='sRGB' which changes how colors are displayed in the viewport, reducing the preview accuracy.
This can be changed under Color Management in Scene properties.
Note that this should also be kept consistent with the Color Space property of image texture nodes (display_device="None", Color Space="Linear").
In Blender 2.7x, "Color Space" can be found in the Image Editor.
Recommended value: None
INFO:objex.OBJEX_OT_export.progress_report_print:   (  0.0000 sec |   0.0000 sec) Objex Export path: 'D:\\Games\\Modding\\ModLoader64\\Models\\Z64O_Models\\Saria\\child\\object_link_child.objex'
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating FPS.Forearm.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0200 sec |   0.0190 sec) Finished writing geometry of 'FPS.Forearm.R'.
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0219 sec |   0.0000 sec) Finished writing geometry of 'skeleton'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating riggedmesh, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0718 sec |   0.0478 sec) Finished writing geometry of 'riggedmesh'.
WARNING:objex.ObjexWriter.write_object: Mesh Slingshot is not triangulated and will be triangulated automatically (for exporting only).
Preview accuracy (UVs, shading, vertex colors) is improved by using a triangulated mesh.
Note: mesh has no triangulate modifier
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0818 sec |   0.0080 sec) Finished writing geometry of 'Slingshot'.
WARNING:objex.ObjexWriter.write_object: Mesh Shield.1 is not triangulated and will be triangulated automatically (for exporting only).
Preview accuracy (UVs, shading, vertex colors) is improved by using a triangulated mesh.
Note: mesh has no triangulate modifier
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0947 sec |   0.0110 sec) Finished writing geometry of 'Shield.1'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Blade.1, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1057 sec |   0.0100 sec) Finished writing geometry of 'Blade.1'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Hilt.1, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1167 sec |   0.0090 sec) Finished writing geometry of 'Hilt.1'.
WARNING:objex.ObjexWriter.write_object: Object Bottle was found to be rigged to skeleton but it also has an armature deform modifier using None
WARNING:objex.ObjexWriter.write_object: Object Bottle was found to be rigged to skeleton but it also has an armature deform modifier using None
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Bottle, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1287 sec |   0.0090 sec) Finished writing geometry of 'Bottle'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Sheath, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1366 sec |   0.0070 sec) Finished writing geometry of 'Sheath'.
WARNING:objex.ObjexWriter.write_object: Object Fist.L was found to be rigged to skeleton but it also has an armature deform modifier using None
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Fist.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1466 sec |   0.0080 sec) Finished writing geometry of 'Fist.L'.
WARNING:objex.ObjexWriter.write_object: Object Fist.R was found to be rigged to skeleton but it also has an armature deform modifier using None
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Fist.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1566 sec |   0.0080 sec) Finished writing geometry of 'Fist.R'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Blade.2, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1705 sec |   0.0130 sec) Finished writing geometry of 'Blade.2'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Bottle.Hand.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1795 sec |   0.0080 sec) Finished writing geometry of 'Bottle.Hand.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Ocarina.1, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1895 sec |   0.0090 sec) Finished writing geometry of 'Ocarina.1'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Ocarina.2, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1985 sec |   0.0069 sec) Finished writing geometry of 'Ocarina.2'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Shield.2, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2075 sec |   0.0070 sec) Finished writing geometry of 'Shield.2'.
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.2094 sec |   0.2084 sec) Finished exporting geometry, now exporting materials
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_060029F0.001' name_q='"mtl_060029F0.001"' material=bpy.data.materials['mtl_060029F0.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0, 'texel0A': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['060029F0.tga.001'], 'uv_scale_v': 0}, 'texel0RGB': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['060029F0.tga.001'], 'uv_scale_v': 0}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['060029F0.tga.001'], 'uv_scale_v': 0} and texel0A {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['060029F0.tga.001'], 'uv_scale_v': 0} into texel0 {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['060029F0.tga.001'], 'uv_scale_v': 0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='skin' name_q='"skin"' material=bpy.data.materials['skin'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['060095E0_ZZPAL0.tga'], 'uv_scale_v': 0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'texel0RGB': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['060095E0_ZZPAL0.tga'], 'uv_scale_v': 0}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['060095E0_ZZPAL0.tga'], 'uv_scale_v': 0} and texel0A {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['060095E0_ZZPAL0.tga'], 'uv_scale_v': 0} into texel0 {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['060095E0_ZZPAL0.tga'], 'uv_scale_v': 0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_06005B40' name_q='"mtl_06005B40"' material=bpy.data.materials['mtl_06005B40'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['RGBA16_06005B40.tga.002'], 'uv_scale_v': 0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'texel0RGB': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['RGBA16_06005B40.tga.002'], 'uv_scale_v': 0}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['RGBA16_06005B40.tga.002'], 'uv_scale_v': 0} and texel0A {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['RGBA16_06005B40.tga.002'], 'uv_scale_v': 0} into texel0 {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['RGBA16_06005B40.tga.002'], 'uv_scale_v': 0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='red.cap' name_q='"red.cap"' material=bpy.data.materials['red.cap'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_layer': '', 'uv_map': False, 'texgen_linear': True, 'uv_wrap_u': True, 'texgen': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 0.004999999888241291, 'uv_scale_v_main': 0.004999999888241291, 'uv_scale_u': 0, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_scale_v': 0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'texel0RGB': {'uv_layer': '', 'uv_map': False, 'texgen_linear': True, 'uv_wrap_u': True, 'texgen': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 0.004999999888241291, 'uv_scale_v_main': 0.004999999888241291, 'uv_scale_u': 0, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_scale_v': 0}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_layer': '', 'uv_map': False, 'texgen_linear': True, 'uv_wrap_u': True, 'texgen': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 0.004999999888241291, 'uv_scale_v_main': 0.004999999888241291, 'uv_scale_u': 0, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_scale_v': 0} and texel0A {'uv_layer': '', 'uv_map': False, 'texgen_linear': True, 'uv_wrap_u': True, 'texgen': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 0.004999999888241291, 'uv_scale_v_main': 0.004999999888241291, 'uv_scale_u': 0, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_scale_v': 0} into texel0 {'uv_layer': '', 'uv_map': False, 'texgen_linear': True, 'uv_wrap_u': True, 'texgen': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 0.004999999888241291, 'uv_scale_v_main': 0.004999999888241291, 'uv_scale_u': 0, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_scale_v': 0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.6203922033309937, 0.09568627923727036, 0.09568627923727036, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='string' name_q='"string"' material=bpy.data.materials['string'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_scale_v': 1}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'texel0RGB': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_scale_v': 1}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_scale_v': 1} and texel0A {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_scale_v': 1} into texel0 {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_scale_v': 1}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000_ZZFORCERGBA16.tga <bpy_struct, Image("04000000_ZZFORCERGBA16.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_06006480.001' name_q='"mtl_06006480.001"' material=bpy.data.materials['mtl_06006480.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['texture_0600DB08_ZZPAL0.png.001'], 'uv_scale_v': 0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'texel0RGB': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['texture_0600DB08_ZZPAL0.png.001'], 'uv_scale_v': 0}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['texture_0600DB08_ZZPAL0.png.001'], 'uv_scale_v': 0} and texel0A {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['texture_0600DB08_ZZPAL0.png.001'], 'uv_scale_v': 0} into texel0 {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['texture_0600DB08_ZZPAL0.png.001'], 'uv_scale_v': 0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_06003788.001' name_q='"mtl_06003788.001"' material=bpy.data.materials['mtl_06003788.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['06003788.tga.001'], 'uv_scale_v': 0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'texel0RGB': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['06003788.tga.001'], 'uv_scale_v': 0}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['06003788.tga.001'], 'uv_scale_v': 0} and texel0A {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['06003788.tga.001'], 'uv_scale_v': 0} into texel0 {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['06003788.tga.001'], 'uv_scale_v': 0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='slingshot' name_q='"slingshot"' material=bpy.data.materials['slingshot'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['06008DE0.tga'], 'uv_scale_v': 0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'texel0RGB': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['06008DE0.tga'], 'uv_scale_v': 0}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['06008DE0.tga'], 'uv_scale_v': 0} and texel0A {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['06008DE0.tga'], 'uv_scale_v': 0} into texel0 {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['06008DE0.tga'], 'uv_scale_v': 0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ns.guard.001' name_q='"ns.guard.001"' material=bpy.data.materials['ns.guard.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['06006CE0.tga.001'], 'uv_scale_v': 0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'texel0RGB': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['06006CE0.tga.001'], 'uv_scale_v': 0}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['06006CE0.tga.001'], 'uv_scale_v': 0} and texel0A {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['06006CE0.tga.001'], 'uv_scale_v': 0} into texel0 {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['06006CE0.tga.001'], 'uv_scale_v': 0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ocarian.fairy.001' name_q='"ocarian.fairy.001"' material=bpy.data.materials['ocarian.fairy.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['060091E0.tga.001'], 'uv_scale_v': 0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'texel0RGB': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['060091E0.tga.001'], 'uv_scale_v': 0}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['060091E0.tga.001'], 'uv_scale_v': 0} and texel0A {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['060091E0.tga.001'], 'uv_scale_v': 0} into texel0 {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['060091E0.tga.001'], 'uv_scale_v': 0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='contents.001' name_q='"contents.001"' material=bpy.data.materials['contents.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 0.75, 'texel0A': {'uv_layer': '', 'uv_map': False, 'texgen_linear': True, 'uv_wrap_u': True, 'texgen': True, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_u_main': 0.022888200357556343, 'uv_scale_v_main': 0.022888200357556343, 'uv_scale_u': 0, 'image': bpy.data.images['06000508.tga'], 'uv_scale_v': 0}, 'texel0RGB': {'uv_layer': '', 'uv_map': False, 'texgen_linear': True, 'uv_wrap_u': True, 'texgen': True, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_u_main': 0.022888200357556343, 'uv_scale_v_main': 0.022888200357556343, 'uv_scale_u': 0, 'image': bpy.data.images['06000508.tga'], 'uv_scale_v': 0}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_layer': '', 'uv_map': False, 'texgen_linear': True, 'uv_wrap_u': True, 'texgen': True, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_u_main': 0.022888200357556343, 'uv_scale_v_main': 0.022888200357556343, 'uv_scale_u': 0, 'image': bpy.data.images['06000508.tga'], 'uv_scale_v': 0} and texel0A {'uv_layer': '', 'uv_map': False, 'texgen_linear': True, 'uv_wrap_u': True, 'texgen': True, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_u_main': 0.022888200357556343, 'uv_scale_v_main': 0.022888200357556343, 'uv_scale_u': 0, 'image': bpy.data.images['06000508.tga'], 'uv_scale_v': 0} into texel0 {'uv_layer': '', 'uv_map': False, 'texgen_linear': True, 'uv_wrap_u': True, 'texgen': True, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_u_main': 0.022888200357556343, 'uv_scale_v_main': 0.022888200357556343, 'uv_scale_u': 0, 'image': bpy.data.images['06000508.tga'], 'uv_scale_v': 0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='hands' name_q='"hands"' material=bpy.data.materials['hands'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['texture_0600DB08_ZZPAL0.png.001'], 'uv_scale_v': 0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'texel0RGB': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['texture_0600DB08_ZZPAL0.png.001'], 'uv_scale_v': 0}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['texture_0600DB08_ZZPAL0.png.001'], 'uv_scale_v': 0} and texel0A {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['texture_0600DB08_ZZPAL0.png.001'], 'uv_scale_v': 0} into texel0 {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['texture_0600DB08_ZZPAL0.png.001'], 'uv_scale_v': 0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture texture_0600DB08_ZZPAL0.png.001 <bpy_struct, Image("texture_0600DB08_ZZPAL0.png.001")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='handle' name_q='"handle"' material=bpy.data.materials['handle'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_layer': '', 'uv_map': False, 'texgen_linear': True, 'uv_wrap_u': True, 'texgen': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 0.004999999888241291, 'uv_scale_v_main': 0.004999999888241291, 'uv_scale_u': 0, 'image': bpy.data.images['04000000.tga.001'], 'uv_scale_v': 0}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.6770480275154114, 0.6070375442504883, 0.29453980922698975, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='empty.dummy' name_q='"empty.dummy"' material=bpy.data.materials['empty.dummy'] face_img=None
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_0A000000.001' name_q='"mtl_0A000000.001"' material=bpy.data.materials['mtl_0A000000.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['mouth.png'], 'uv_scale_v': 0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'texel0RGB': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['mouth.png'], 'uv_scale_v': 0}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['mouth.png'], 'uv_scale_v': 0} and texel0A {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['mouth.png'], 'uv_scale_v': 0} into texel0 {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['mouth.png'], 'uv_scale_v': 0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria_tunic_dark' name_q='"saria_tunic_dark"' material=bpy.data.materials['saria_tunic_dark'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0, 'texel0A': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['sleeves_headband_ZZTUNIC.png'], 'uv_scale_v': 0}, 'texel0RGB': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['sleeves_headband_ZZTUNIC.png'], 'uv_scale_v': 0}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['sleeves_headband_ZZTUNIC.png'], 'uv_scale_v': 0} and texel0A {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['sleeves_headband_ZZTUNIC.png'], 'uv_scale_v': 0} into texel0 {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['sleeves_headband_ZZTUNIC.png'], 'uv_scale_v': 0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='kokiri.hilt' name_q='"kokiri.hilt"' material=bpy.data.materials['kokiri.hilt'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['kokiri_sword.tga'], 'uv_scale_v': 0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'texel0RGB': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['kokiri_sword.tga'], 'uv_scale_v': 0}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['kokiri_sword.tga'], 'uv_scale_v': 0} and texel0A {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['kokiri_sword.tga'], 'uv_scale_v': 0} into texel0 {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['kokiri_sword.tga'], 'uv_scale_v': 0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='wood.back' name_q='"wood.back"' material=bpy.data.materials['wood.back'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['060071E0.tga'], 'uv_scale_v': 0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'texel0RGB': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['060071E0.tga'], 'uv_scale_v': 0}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['060071E0.tga'], 'uv_scale_v': 0} and texel0A {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['060071E0.tga'], 'uv_scale_v': 0} into texel0 {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['060071E0.tga'], 'uv_scale_v': 0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria_belt' name_q='"saria_belt"' material=bpy.data.materials['saria_belt'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': True, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['RGBA16_06005740.tga.002'], 'uv_scale_v': 0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'texel0RGB': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': True, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['RGBA16_06005740.tga.002'], 'uv_scale_v': 0}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': True, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['RGBA16_06005740.tga.002'], 'uv_scale_v': 0} and texel0A {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': True, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['RGBA16_06005740.tga.002'], 'uv_scale_v': 0} into texel0 {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': True, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['RGBA16_06005740.tga.002'], 'uv_scale_v': 0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='shine' name_q='"shine"' material=bpy.data.materials['shine'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': True, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806, 'uv_scale_u': 0, 'image': bpy.data.images['04000000.tga.001'], 'uv_scale_v': 0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'texel0RGB': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': True, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806, 'uv_scale_u': 0, 'image': bpy.data.images['04000000.tga.001'], 'uv_scale_v': 0}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': True, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806, 'uv_scale_u': 0, 'image': bpy.data.images['04000000.tga.001'], 'uv_scale_v': 0} and texel0A {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': True, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806, 'uv_scale_u': 0, 'image': bpy.data.images['04000000.tga.001'], 'uv_scale_v': 0} into texel0 {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': True, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806, 'uv_scale_u': 0, 'image': bpy.data.images['04000000.tga.001'], 'uv_scale_v': 0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga.001 <bpy_struct, Image("04000000.tga.001")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='glass.001' name_q='"glass.001"' material=bpy.data.materials['glass.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_layer': '', 'uv_map': False, 'texgen_linear': True, 'uv_wrap_u': True, 'texgen': True, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_u_main': 0.022887999191880226, 'uv_scale_v_main': 0.022887999191880226, 'uv_scale_u': 0, 'image': bpy.data.images['06000508.tga'], 'uv_scale_v': 0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 0.75, 'texel0RGB': {'uv_layer': '', 'uv_map': False, 'texgen_linear': True, 'uv_wrap_u': True, 'texgen': True, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_u_main': 0.022887999191880226, 'uv_scale_v_main': 0.022887999191880226, 'uv_scale_u': 0, 'image': bpy.data.images['06000508.tga'], 'uv_scale_v': 0}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_layer': '', 'uv_map': False, 'texgen_linear': True, 'uv_wrap_u': True, 'texgen': True, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_u_main': 0.022887999191880226, 'uv_scale_v_main': 0.022887999191880226, 'uv_scale_u': 0, 'image': bpy.data.images['06000508.tga'], 'uv_scale_v': 0} and texel0A {'uv_layer': '', 'uv_map': False, 'texgen_linear': True, 'uv_wrap_u': True, 'texgen': True, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_u_main': 0.022887999191880226, 'uv_scale_v_main': 0.022887999191880226, 'uv_scale_u': 0, 'image': bpy.data.images['06000508.tga'], 'uv_scale_v': 0} into texel0 {'uv_layer': '', 'uv_map': False, 'texgen_linear': True, 'uv_wrap_u': True, 'texgen': True, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_u_main': 0.022887999191880226, 'uv_scale_v_main': 0.022887999191880226, 'uv_scale_u': 0, 'image': bpy.data.images['06000508.tga'], 'uv_scale_v': 0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 0.75 into primitive (1.0, 1.0, 1.0, 0.75)
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 06000508.tga <bpy_struct, Image("06000508.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='string.002' name_q='"string.002"' material=bpy.data.materials['string.002'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_scale_v': 0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'texel0RGB': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_scale_v': 0}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_scale_v': 0} and texel0A {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_scale_v': 0} into texel0 {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_scale_v': 0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='boomerang.gem' name_q='"boomerang.gem"' material=bpy.data.materials['boomerang.gem'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_layer': '', 'uv_map': False, 'texgen_linear': True, 'uv_wrap_u': True, 'texgen': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806, 'uv_scale_u': 0, 'image': bpy.data.images['04000000.tga.001'], 'uv_scale_v': 0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'texel0RGB': {'uv_layer': '', 'uv_map': False, 'texgen_linear': True, 'uv_wrap_u': True, 'texgen': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806, 'uv_scale_u': 0, 'image': bpy.data.images['04000000.tga.001'], 'uv_scale_v': 0}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_layer': '', 'uv_map': False, 'texgen_linear': True, 'uv_wrap_u': True, 'texgen': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806, 'uv_scale_u': 0, 'image': bpy.data.images['04000000.tga.001'], 'uv_scale_v': 0} and texel0A {'uv_layer': '', 'uv_map': False, 'texgen_linear': True, 'uv_wrap_u': True, 'texgen': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806, 'uv_scale_u': 0, 'image': bpy.data.images['04000000.tga.001'], 'uv_scale_v': 0} into texel0 {'uv_layer': '', 'uv_map': False, 'texgen_linear': True, 'uv_wrap_u': True, 'texgen': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806, 'uv_scale_u': 0, 'image': bpy.data.images['04000000.tga.001'], 'uv_scale_v': 0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.8962693810462952, 0.0, 0.18366463482379913, 1.0)
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga.001 <bpy_struct, Image("04000000.tga.001")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='hylian.crest.002' name_q='"hylian.crest.002"' material=bpy.data.materials['hylian.crest.002'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['04000400.tga.002'], 'uv_scale_v': 0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'texel0RGB': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['04000400.tga.002'], 'uv_scale_v': 0}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['04000400.tga.002'], 'uv_scale_v': 0} and texel0A {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['04000400.tga.002'], 'uv_scale_v': 0} into texel0 {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['04000400.tga.002'], 'uv_scale_v': 0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_06002530.001' name_q='"mtl_06002530.001"' material=bpy.data.materials['mtl_06002530.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['skin.png'], 'uv_scale_v': 0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'texel0RGB': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['skin.png'], 'uv_scale_v': 0}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['skin.png'], 'uv_scale_v': 0} and texel0A {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['skin.png'], 'uv_scale_v': 0} into texel0 {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['skin.png'], 'uv_scale_v': 0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_060024F0.001' name_q='"mtl_060024F0.001"' material=bpy.data.materials['mtl_060024F0.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0, 'texel0A': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['060024F0.tga.001'], 'uv_scale_v': 0}, 'texel0RGB': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['060024F0.tga.001'], 'uv_scale_v': 0}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['060024F0.tga.001'], 'uv_scale_v': 0} and texel0A {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['060024F0.tga.001'], 'uv_scale_v': 0} into texel0 {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['060024F0.tga.001'], 'uv_scale_v': 0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria_tunic_light' name_q='"saria_tunic_light"' material=bpy.data.materials['saria_tunic_light'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0, 'texel0A': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['tunic_ZZTUNIC.png'], 'uv_scale_v': 0}, 'texel0RGB': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['tunic_ZZTUNIC.png'], 'uv_scale_v': 0}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['tunic_ZZTUNIC.png'], 'uv_scale_v': 0} and texel0A {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['tunic_ZZTUNIC.png'], 'uv_scale_v': 0} into texel0 {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['tunic_ZZTUNIC.png'], 'uv_scale_v': 0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_06005740' name_q='"mtl_06005740"' material=bpy.data.materials['mtl_06005740'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['RGBA16_06005740.tga.002'], 'uv_scale_v': 0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'texel0RGB': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['RGBA16_06005740.tga.002'], 'uv_scale_v': 0}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['RGBA16_06005740.tga.002'], 'uv_scale_v': 0} and texel0A {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['RGBA16_06005740.tga.002'], 'uv_scale_v': 0} into texel0 {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['RGBA16_06005740.tga.002'], 'uv_scale_v': 0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture RGBA16_06005740.tga.002 <bpy_struct, Image("RGBA16_06005740.tga.002")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Material' name_q='"Material"' material=bpy.data.materials['Material'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['RGBA16_0601BF80.tga.002'], 'uv_scale_v': 0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'texel0RGB': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['RGBA16_0601BF80.tga.002'], 'uv_scale_v': 0}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['RGBA16_0601BF80.tga.002'], 'uv_scale_v': 0} and texel0A {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['RGBA16_0601BF80.tga.002'], 'uv_scale_v': 0} into texel0 {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['RGBA16_0601BF80.tga.002'], 'uv_scale_v': 0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_06005C40' name_q='"mtl_06005C40"' material=bpy.data.materials['mtl_06005C40'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['RGBA16_06006B00.tga.002'], 'uv_scale_v': 0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'texel0RGB': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['RGBA16_06006B00.tga.002'], 'uv_scale_v': 0}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['RGBA16_06006B00.tga.002'], 'uv_scale_v': 0} and texel0A {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['RGBA16_06006B00.tga.002'], 'uv_scale_v': 0} into texel0 {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['RGBA16_06006B00.tga.002'], 'uv_scale_v': 0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='new.shield_front' name_q='"new.shield_front"' material=bpy.data.materials['new.shield_front'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['kokiri_shield.tga.001'], 'uv_scale_v': 0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'texel0RGB': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['kokiri_shield.tga.001'], 'uv_scale_v': 0}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['kokiri_shield.tga.001'], 'uv_scale_v': 0} and texel0A {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['kokiri_shield.tga.001'], 'uv_scale_v': 0} into texel0 {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['kokiri_shield.tga.001'], 'uv_scale_v': 0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ms.gem.001' name_q='"ms.gem.001"' material=bpy.data.materials['ms.gem.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_layer': '', 'uv_map': False, 'texgen_linear': True, 'uv_wrap_u': True, 'texgen': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 0.02500000037252903, 'uv_scale_v_main': 0.02500000037252903, 'uv_scale_u': 0, 'image': bpy.data.images['04000000.tga.001'], 'uv_scale_v': 0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'texel0RGB': {'uv_layer': '', 'uv_map': False, 'texgen_linear': True, 'uv_wrap_u': True, 'texgen': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 0.02500000037252903, 'uv_scale_v_main': 0.02500000037252903, 'uv_scale_u': 0, 'image': bpy.data.images['04000000.tga.001'], 'uv_scale_v': 0}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_layer': '', 'uv_map': False, 'texgen_linear': True, 'uv_wrap_u': True, 'texgen': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 0.02500000037252903, 'uv_scale_v_main': 0.02500000037252903, 'uv_scale_u': 0, 'image': bpy.data.images['04000000.tga.001'], 'uv_scale_v': 0} and texel0A {'uv_layer': '', 'uv_map': False, 'texgen_linear': True, 'uv_wrap_u': True, 'texgen': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 0.02500000037252903, 'uv_scale_v_main': 0.02500000037252903, 'uv_scale_u': 0, 'image': bpy.data.images['04000000.tga.001'], 'uv_scale_v': 0} into texel0 {'uv_layer': '', 'uv_map': False, 'texgen_linear': True, 'uv_wrap_u': True, 'texgen': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 0.02500000037252903, 'uv_scale_v_main': 0.02500000037252903, 'uv_scale_u': 0, 'image': bpy.data.images['04000000.tga.001'], 'uv_scale_v': 0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 0.818792998790741, 0.0, 1.0)
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga.001 <bpy_struct, Image("04000000.tga.001")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_06002EC8.001' name_q='"mtl_06002EC8.001"' material=bpy.data.materials['mtl_06002EC8.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['06002EC8.tga.001'], 'uv_scale_v': 0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'texel0RGB': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['06002EC8.tga.001'], 'uv_scale_v': 0}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['06002EC8.tga.001'], 'uv_scale_v': 0} and texel0A {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['06002EC8.tga.001'], 'uv_scale_v': 0} into texel0 {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['06002EC8.tga.001'], 'uv_scale_v': 0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_060037C8.001' name_q='"mtl_060037C8.001"' material=bpy.data.materials['mtl_060037C8.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0, 'texel0A': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['060037C8.tga.001'], 'uv_scale_v': 0}, 'texel0RGB': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['060037C8.tga.001'], 'uv_scale_v': 0}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['060037C8.tga.001'], 'uv_scale_v': 0} and texel0A {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['060037C8.tga.001'], 'uv_scale_v': 0} into texel0 {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['060037C8.tga.001'], 'uv_scale_v': 0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_06002570.001' name_q='"mtl_06002570.001"' material=bpy.data.materials['mtl_06002570.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['leg.png'], 'uv_scale_v': 0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'texel0RGB': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['leg.png'], 'uv_scale_v': 0}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['leg.png'], 'uv_scale_v': 0} and texel0A {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['leg.png'], 'uv_scale_v': 0} into texel0 {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['leg.png'], 'uv_scale_v': 0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ms.metal.001' name_q='"ms.metal.001"' material=bpy.data.materials['ms.metal.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_layer': '', 'uv_map': False, 'texgen_linear': True, 'uv_wrap_u': True, 'texgen': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806, 'uv_scale_u': 0, 'image': bpy.data.images['04000000.tga.001'], 'uv_scale_v': 0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'texel0RGB': {'uv_layer': '', 'uv_map': False, 'texgen_linear': True, 'uv_wrap_u': True, 'texgen': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806, 'uv_scale_u': 0, 'image': bpy.data.images['04000000.tga.001'], 'uv_scale_v': 0}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_layer': '', 'uv_map': False, 'texgen_linear': True, 'uv_wrap_u': True, 'texgen': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806, 'uv_scale_u': 0, 'image': bpy.data.images['04000000.tga.001'], 'uv_scale_v': 0} and texel0A {'uv_layer': '', 'uv_map': False, 'texgen_linear': True, 'uv_wrap_u': True, 'texgen': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806, 'uv_scale_u': 0, 'image': bpy.data.images['04000000.tga.001'], 'uv_scale_v': 0} into texel0 {'uv_layer': '', 'uv_map': False, 'texgen_linear': True, 'uv_wrap_u': True, 'texgen': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806, 'uv_scale_u': 0, 'image': bpy.data.images['04000000.tga.001'], 'uv_scale_v': 0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.7911859750747681, 0.9793670177459717, 1.0, 1.0)
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga.001 <bpy_struct, Image("04000000.tga.001")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ms.hilt.000' name_q='"ms.hilt.000"' material=bpy.data.materials['ms.hilt.000'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['060090E8.tga.001'], 'uv_scale_v': 0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'texel0RGB': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['060090E8.tga.001'], 'uv_scale_v': 0}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['060090E8.tga.001'], 'uv_scale_v': 0} and texel0A {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['060090E8.tga.001'], 'uv_scale_v': 0} into texel0 {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['060090E8.tga.001'], 'uv_scale_v': 0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='shield.back.002' name_q='"shield.back.002"' material=bpy.data.materials['shield.back.002'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['06009768.tga.003'], 'uv_scale_v': 0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'texel0RGB': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['06009768.tga.003'], 'uv_scale_v': 0}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['06009768.tga.003'], 'uv_scale_v': 0} and texel0A {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['06009768.tga.003'], 'uv_scale_v': 0} into texel0 {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['06009768.tga.003'], 'uv_scale_v': 0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_09000000.001' name_q='"mtl_09000000.001"' material=bpy.data.materials['mtl_09000000.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['eyes.png'], 'uv_scale_v': 0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'texel0RGB': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['eyes.png'], 'uv_scale_v': 0}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['eyes.png'], 'uv_scale_v': 0} and texel0A {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['eyes.png'], 'uv_scale_v': 0} into texel0 {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['eyes.png'], 'uv_scale_v': 0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='saria_boot' name_q='"saria_boot"' material=bpy.data.materials['saria_boot'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeA': {'type': 'normals'}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0, 'texel0A': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['boot_ZZTUNIC.png'], 'uv_scale_v': 0}, 'texel0RGB': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['boot_ZZTUNIC.png'], 'uv_scale_v': 0}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['boot_ZZTUNIC.png'], 'uv_scale_v': 0} and texel0A {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['boot_ZZTUNIC.png'], 'uv_scale_v': 0} into texel0 {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': True, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['boot_ZZTUNIC.png'], 'uv_scale_v': 0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Material.001' name_q='"Material.001"' material=bpy.data.materials['Material.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['RGBA16_0601BF00.tga.000'], 'uv_scale_v': 0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'texel0RGB': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['RGBA16_0601BF00.tga.000'], 'uv_scale_v': 0}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['RGBA16_0601BF00.tga.000'], 'uv_scale_v': 0} and texel0A {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['RGBA16_0601BF00.tga.000'], 'uv_scale_v': 0} into texel0 {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['RGBA16_0601BF00.tga.000'], 'uv_scale_v': 0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_06003548.001' name_q='"mtl_06003548.001"' material=bpy.data.materials['mtl_06003548.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'texel0A': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['06003548.tga.001'], 'uv_scale_v': 0}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'texel0RGB': {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['06003548.tga.001'], 'uv_scale_v': 0}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['06003548.tga.001'], 'uv_scale_v': 0} and texel0A {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['06003548.tga.001'], 'uv_scale_v': 0} into texel0 {'uv_layer': '', 'uv_map': False, 'texgen_linear': False, 'uv_wrap_u': False, 'texgen': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0, 'uv_scale_u': 0, 'image': bpy.data.images['06003548.tga.001'], 'uv_scale_v': 0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.2783 sec |   0.2773 sec) Finished exporting materials, now exporting skeletons/animations
INFO:objex.ObjexWriter.write: now exporting skeletons
INFO:objex.ObjexWriter.write:  ... and animations
WARNING:objex.anim.write_armatures: animations are being viewed at 24.0 fps (change this in render settings), but will be used at 20 fps
WARNING:objex.anim.write_armatures: Skipped exporting actions <bpy_collection[1], BlendDataActions> with armature skeleton,
because the armature did not have animation_data
(consider unchecking "Export all actions" under Objex armature properties;
if you do want actions to be exported with this armature,
animation_data can be initialized by creating a dummy action by adding a keyframe in pose mode)
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.2822 sec |   0.2812 sec) Objex Export Finished

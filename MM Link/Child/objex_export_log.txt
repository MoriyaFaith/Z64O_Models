WARNING:objex.OBJEX_OT_export.execute: Scene uses display_device='sRGB' which changes how colors are displayed in the viewport, reducing the preview accuracy.
This can be changed under Color Management in Scene properties.
Note that this should also be kept consistent with the Color Space property of image texture nodes (display_device="None", Color Space="Linear").
In Blender 2.7x, "Color Space" can be found in the Image Editor.
Recommended value: None
INFO:objex.OBJEX_OT_export.progress_report_print:   (  0.0000 sec |   0.0000 sec) Objex Export path: 'D:\\Games\\Modding\\Zelda 64\\Models\\Z64O_Models\\MM Link\\Child\\object_link_child.objex'
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0020 sec |   0.0010 sec) Finished writing geometry of 'sk_0600E6F4'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Shield.2, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0111 sec |   0.0071 sec) Finished writing geometry of 'Shield.2'.
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0140 sec |   0.0010 sec) Finished writing geometry of 'skeleton'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating riggedmesh, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0610 sec |   0.0460 sec) Finished writing geometry of 'riggedmesh'.
WARNING:objex.ObjexWriter.write_object: Mesh Slingshot is not triangulated and will be triangulated automatically (for exporting only).
Preview accuracy (UVs, shading, vertex colors) is improved by using a triangulated mesh.
Note: mesh has no triangulate modifier
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0710 sec |   0.0090 sec) Finished writing geometry of 'Slingshot'.
WARNING:objex.ObjexWriter.write_object: Mesh Shield.1 is not triangulated and will be triangulated automatically (for exporting only).
Preview accuracy (UVs, shading, vertex colors) is improved by using a triangulated mesh.
Note: mesh has no triangulate modifier
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0820 sec |   0.0080 sec) Finished writing geometry of 'Shield.1'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Blade.1, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0910 sec |   0.0070 sec) Finished writing geometry of 'Blade.1'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Hilt.1, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1010 sec |   0.0090 sec) Finished writing geometry of 'Hilt.1'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Sheath, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1100 sec |   0.0080 sec) Finished writing geometry of 'Sheath'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Fist.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1190 sec |   0.0070 sec) Finished writing geometry of 'Fist.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Fist.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1300 sec |   0.0060 sec) Finished writing geometry of 'Fist.R'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Bottle.Hand.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1400 sec |   0.0080 sec) Finished writing geometry of 'Bottle.Hand.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Ocarina.1, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1480 sec |   0.0060 sec) Finished writing geometry of 'Ocarina.1'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Ocarina.2, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1570 sec |   0.0070 sec) Finished writing geometry of 'Ocarina.2'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Bottle, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1680 sec |   0.0090 sec) Finished writing geometry of 'Bottle'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating GoronBracelet, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1770 sec |   0.0070 sec) Finished writing geometry of 'GoronBracelet'.
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.1790 sec |   0.1780 sec) Finished exporting geometry, now exporting materials
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Material' name_q='"Material"' material=bpy.data.materials['Material'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0A': {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['RGBA16_0601BF80.tga.002'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False}, 'texel0RGB': {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['RGBA16_0601BF80.tga.002'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False}, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['RGBA16_0601BF80.tga.002'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False} and texel0A {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['RGBA16_0601BF80.tga.002'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False} into texel0 {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['RGBA16_0601BF80.tga.002'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='gold' name_q='"gold"' material=bpy.data.materials['gold'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0A': {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': True, 'uv_scale_v': 0, 'uv_scale_v_main': 0.004999999888241291, 'uv_map': False, 'uv_scale_u_main': 0.004999999888241291, 'image': bpy.data.images['06009DE0_ZZFORCERGBA16.tga'], 'uv_scale_u': 0, 'texgen_linear': True, 'uv_mirror_u': False, 'uv_wrap_v': True}, 'texel0RGB': {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': True, 'uv_scale_v': 0, 'uv_scale_v_main': 0.004999999888241291, 'uv_map': False, 'uv_scale_u_main': 0.004999999888241291, 'image': bpy.data.images['06009DE0_ZZFORCERGBA16.tga'], 'uv_scale_u': 0, 'texgen_linear': True, 'uv_mirror_u': False, 'uv_wrap_v': True}, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': True, 'uv_scale_v': 0, 'uv_scale_v_main': 0.004999999888241291, 'uv_map': False, 'uv_scale_u_main': 0.004999999888241291, 'image': bpy.data.images['06009DE0_ZZFORCERGBA16.tga'], 'uv_scale_u': 0, 'texgen_linear': True, 'uv_mirror_u': False, 'uv_wrap_v': True} and texel0A {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': True, 'uv_scale_v': 0, 'uv_scale_v_main': 0.004999999888241291, 'uv_map': False, 'uv_scale_u_main': 0.004999999888241291, 'image': bpy.data.images['06009DE0_ZZFORCERGBA16.tga'], 'uv_scale_u': 0, 'texgen_linear': True, 'uv_mirror_u': False, 'uv_wrap_v': True} into texel0 {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': True, 'uv_scale_v': 0, 'uv_scale_v_main': 0.004999999888241291, 'uv_map': False, 'uv_scale_u_main': 0.004999999888241291, 'image': bpy.data.images['06009DE0_ZZFORCERGBA16.tga'], 'uv_scale_u': 0, 'texgen_linear': True, 'uv_mirror_u': False, 'uv_wrap_v': True}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_06006A90' name_q='"mtl_06006A90"' material=bpy.data.materials['mtl_06006A90'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0A': {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['RGBA16_06006A90.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True}, 'texel0RGB': {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['RGBA16_06006A90.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True}, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['RGBA16_06006A90.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True} and texel0A {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['RGBA16_06006A90.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True} into texel0 {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['RGBA16_06006A90.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='tunic_top' name_q='"tunic_top"' material=bpy.data.materials['tunic_top'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0A': {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['I8_06005C40_ZZRGBA16.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False}, 'texel0RGB': {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['I8_06005C40_ZZRGBA16.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['I8_06005C40_ZZRGBA16.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False} and texel0A {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['I8_06005C40_ZZRGBA16.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False} into texel0 {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['I8_06005C40_ZZRGBA16.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_06006480.001' name_q='"mtl_06006480.001"' material=bpy.data.materials['mtl_06006480.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0A': {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['texture_0600DB08_ZZPAL0.png.001'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False}, 'texel0RGB': {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['texture_0600DB08_ZZPAL0.png.001'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False}, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['texture_0600DB08_ZZPAL0.png.001'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False} and texel0A {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['texture_0600DB08_ZZPAL0.png.001'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False} into texel0 {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['texture_0600DB08_ZZPAL0.png.001'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='tunic_bottom' name_q='"tunic_bottom"' material=bpy.data.materials['tunic_bottom'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[1], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentA from bpy.data...nodes["OBJEX_EnvColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0A': {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['I8_06005D80_ZZRGBA16.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': True, 'uv_wrap_v': False}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['I8_06005D80_ZZRGBA16.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': True, 'uv_wrap_v': False}, 'environmentA': 1.0, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged environmentRGB bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value and environmentA 1.0 into environment (0.011612245813012123, 0.14126330614089966, 0.011612245813012123, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['I8_06005D80_ZZRGBA16.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': True, 'uv_wrap_v': False} and texel0A {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['I8_06005D80_ZZRGBA16.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': True, 'uv_wrap_v': False} into texel0 {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['I8_06005D80_ZZRGBA16.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': True, 'uv_wrap_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_06009C38' name_q='"mtl_06009C38"' material=bpy.data.materials['mtl_06009C38'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0A': {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['RGBA16_06009C38.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True}, 'texel0RGB': {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['RGBA16_06009C38.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True}, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['RGBA16_06009C38.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True} and texel0A {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['RGBA16_06009C38.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True} into texel0 {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['RGBA16_06009C38.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='goran.insignia' name_q='"goran.insignia"' material=bpy.data.materials['goran.insignia'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0A': {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['06009E60_ZZFORCERGBA16.tga.001'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False}, 'texel0RGB': {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['06009E60_ZZFORCERGBA16.tga.001'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False}, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['06009E60_ZZFORCERGBA16.tga.001'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False} and texel0A {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['06009E60_ZZFORCERGBA16.tga.001'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False} into texel0 {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['06009E60_ZZFORCERGBA16.tga.001'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='new.shield_front' name_q='"new.shield_front"' material=bpy.data.materials['new.shield_front'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0A': {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['kokiri_shield.tga.001'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False}, 'texel0RGB': {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['kokiri_shield.tga.001'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False}, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['kokiri_shield.tga.001'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False} and texel0A {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['kokiri_shield.tga.001'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False} into texel0 {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['kokiri_shield.tga.001'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='handle' name_q='"handle"' material=bpy.data.materials['handle'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0A': {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': True, 'uv_scale_v': 0, 'uv_scale_v_main': 0.004999999888241291, 'uv_map': False, 'uv_scale_u_main': 0.004999999888241291, 'image': bpy.data.images['04000000.tga.001'], 'uv_scale_u': 0, 'texgen_linear': True, 'uv_mirror_u': False, 'uv_wrap_v': True}, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.6770480275154114, 0.6070375442504883, 0.29453980922698975, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='boomerang.gem' name_q='"boomerang.gem"' material=bpy.data.materials['boomerang.gem'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0A': {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': True, 'uv_scale_v': 0, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'uv_scale_u_main': 0.05000000074505806, 'image': bpy.data.images['04000000.tga.001'], 'uv_scale_u': 0, 'texgen_linear': True, 'uv_mirror_u': False, 'uv_wrap_v': True}, 'texel0RGB': {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': True, 'uv_scale_v': 0, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'uv_scale_u_main': 0.05000000074505806, 'image': bpy.data.images['04000000.tga.001'], 'uv_scale_u': 0, 'texgen_linear': True, 'uv_mirror_u': False, 'uv_wrap_v': True}, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.8962693810462952, 0.0, 0.18366463482379913, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': True, 'uv_scale_v': 0, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'uv_scale_u_main': 0.05000000074505806, 'image': bpy.data.images['04000000.tga.001'], 'uv_scale_u': 0, 'texgen_linear': True, 'uv_mirror_u': False, 'uv_wrap_v': True} and texel0A {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': True, 'uv_scale_v': 0, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'uv_scale_u_main': 0.05000000074505806, 'image': bpy.data.images['04000000.tga.001'], 'uv_scale_u': 0, 'texgen_linear': True, 'uv_mirror_u': False, 'uv_wrap_v': True} into texel0 {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': True, 'uv_scale_v': 0, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'uv_scale_u_main': 0.05000000074505806, 'image': bpy.data.images['04000000.tga.001'], 'uv_scale_u': 0, 'texgen_linear': True, 'uv_mirror_u': False, 'uv_wrap_v': True}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga.001 <bpy_struct, Image("04000000.tga.001")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='glass.001' name_q='"glass.001"' material=bpy.data.materials['glass.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0A': {'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': True, 'uv_scale_v': 0, 'uv_scale_v_main': 0.02500000037252903, 'uv_map': False, 'uv_scale_u_main': 0.02500000037252903, 'image': bpy.data.images['06000508.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': True, 'uv_wrap_v': True}, 'texel0RGB': {'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': True, 'uv_scale_v': 0, 'uv_scale_v_main': 0.02500000037252903, 'uv_map': False, 'uv_scale_u_main': 0.02500000037252903, 'image': bpy.data.images['06000508.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': True, 'uv_wrap_v': True}, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 0.75, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 0.75 into primitive (1.0, 1.0, 1.0, 0.75)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': True, 'uv_scale_v': 0, 'uv_scale_v_main': 0.02500000037252903, 'uv_map': False, 'uv_scale_u_main': 0.02500000037252903, 'image': bpy.data.images['06000508.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': True, 'uv_wrap_v': True} and texel0A {'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': True, 'uv_scale_v': 0, 'uv_scale_v_main': 0.02500000037252903, 'uv_map': False, 'uv_scale_u_main': 0.02500000037252903, 'image': bpy.data.images['06000508.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': True, 'uv_wrap_v': True} into texel0 {'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': True, 'uv_scale_v': 0, 'uv_scale_v_main': 0.02500000037252903, 'uv_map': False, 'uv_scale_u_main': 0.02500000037252903, 'image': bpy.data.images['06000508.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': True, 'uv_wrap_v': True}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='boot.bottom' name_q='"boot.bottom"' material=bpy.data.materials['boot.bottom'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0A': {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['RGBA16_06006E10.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True}, 'texel0RGB': {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['RGBA16_06006E10.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True}, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['RGBA16_06006E10.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True} and texel0A {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['RGBA16_06006E10.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True} into texel0 {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['RGBA16_06006E10.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mouth' name_q='"mouth"' material=bpy.data.materials['mouth'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0A': {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['mouth.png'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False}, 'texel0RGB': {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['mouth.png'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False}, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['mouth.png'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False} and texel0A {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['mouth.png'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False} into texel0 {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['mouth.png'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='wood.back' name_q='"wood.back"' material=bpy.data.materials['wood.back'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0A': {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['060071E0.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False}, 'texel0RGB': {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['060071E0.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False}, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['060071E0.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False} and texel0A {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['060071E0.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False} into texel0 {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['060071E0.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_060062A0' name_q='"mtl_060062A0"' material=bpy.data.materials['mtl_060062A0'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0A': {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['CI8_060062A0_pal060060A0.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False}, 'texel0RGB': {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['CI8_060062A0_pal060060A0.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False}, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['CI8_060062A0_pal060060A0.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False} and texel0A {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['CI8_060062A0_pal060060A0.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False} into texel0 {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['CI8_060062A0_pal060060A0.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ocarian.fairy.001' name_q='"ocarian.fairy.001"' material=bpy.data.materials['ocarian.fairy.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0A': {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['060091E0.tga.001'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False}, 'texel0RGB': {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['060091E0.tga.001'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False}, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['060091E0.tga.001'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False} and texel0A {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['060091E0.tga.001'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False} into texel0 {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['060091E0.tga.001'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='boot.top' name_q='"boot.top"' material=bpy.data.materials['boot.top'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0A': {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['RGBA16_0600A9C8.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True}, 'texel0RGB': {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['RGBA16_0600A9C8.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True}, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['RGBA16_0600A9C8.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True} and texel0A {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['RGBA16_0600A9C8.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True} into texel0 {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['RGBA16_0600A9C8.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='shine' name_q='"shine"' material=bpy.data.materials['shine'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0A': {'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': True, 'uv_scale_v': 0, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'uv_scale_u_main': 0.05000000074505806, 'image': bpy.data.images['04000000.tga.001'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': True, 'uv_wrap_v': True}, 'texel0RGB': {'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': True, 'uv_scale_v': 0, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'uv_scale_u_main': 0.05000000074505806, 'image': bpy.data.images['04000000.tga.001'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': True, 'uv_wrap_v': True}, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': True, 'uv_scale_v': 0, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'uv_scale_u_main': 0.05000000074505806, 'image': bpy.data.images['04000000.tga.001'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': True, 'uv_wrap_v': True} and texel0A {'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': True, 'uv_scale_v': 0, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'uv_scale_u_main': 0.05000000074505806, 'image': bpy.data.images['04000000.tga.001'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': True, 'uv_wrap_v': True} into texel0 {'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': True, 'uv_scale_v': 0, 'uv_scale_v_main': 0.05000000074505806, 'uv_map': False, 'uv_scale_u_main': 0.05000000074505806, 'image': bpy.data.images['04000000.tga.001'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': True, 'uv_wrap_v': True}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga.001 <bpy_struct, Image("04000000.tga.001")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='shield.back.002' name_q='"shield.back.002"' material=bpy.data.materials['shield.back.002'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0A': {'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['06009768.tga.003'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': True, 'uv_wrap_v': True}, 'texel0RGB': {'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['06009768.tga.003'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': True, 'uv_wrap_v': True}, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['06009768.tga.003'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': True, 'uv_wrap_v': True} and texel0A {'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['06009768.tga.003'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': True, 'uv_wrap_v': True} into texel0 {'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['06009768.tga.003'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': True, 'uv_wrap_v': True}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='red.cap' name_q='"red.cap"' material=bpy.data.materials['red.cap'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0A': {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': True, 'uv_scale_v': 0, 'uv_scale_v_main': 0.004999999888241291, 'uv_map': False, 'uv_scale_u_main': 0.004999999888241291, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_scale_u': 0, 'texgen_linear': True, 'uv_mirror_u': False, 'uv_wrap_v': True}, 'texel0RGB': {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': True, 'uv_scale_v': 0, 'uv_scale_v_main': 0.004999999888241291, 'uv_map': False, 'uv_scale_u_main': 0.004999999888241291, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_scale_u': 0, 'texgen_linear': True, 'uv_mirror_u': False, 'uv_wrap_v': True}, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.6203922033309937, 0.09568627923727036, 0.09568627923727036, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': True, 'uv_scale_v': 0, 'uv_scale_v_main': 0.004999999888241291, 'uv_map': False, 'uv_scale_u_main': 0.004999999888241291, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_scale_u': 0, 'texgen_linear': True, 'uv_mirror_u': False, 'uv_wrap_v': True} and texel0A {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': True, 'uv_scale_v': 0, 'uv_scale_v_main': 0.004999999888241291, 'uv_map': False, 'uv_scale_u_main': 0.004999999888241291, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_scale_u': 0, 'texgen_linear': True, 'uv_mirror_u': False, 'uv_wrap_v': True} into texel0 {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': True, 'uv_scale_v': 0, 'uv_scale_v_main': 0.004999999888241291, 'uv_map': False, 'uv_scale_u_main': 0.004999999888241291, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_scale_u': 0, 'texgen_linear': True, 'uv_mirror_u': False, 'uv_wrap_v': True}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_060063C0' name_q='"mtl_060063C0"' material=bpy.data.materials['mtl_060063C0'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0A': {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['RGBA16_060063C0.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False}, 'texel0RGB': {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['RGBA16_060063C0.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False}, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['RGBA16_060063C0.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False} and texel0A {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['RGBA16_060063C0.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False} into texel0 {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['RGBA16_060063C0.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='kokiri.hilt' name_q='"kokiri.hilt"' material=bpy.data.materials['kokiri.hilt'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0A': {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['kokiri_sword.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False}, 'texel0RGB': {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['kokiri_sword.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False}, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['kokiri_sword.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False} and texel0A {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['kokiri_sword.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False} into texel0 {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['kokiri_sword.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Material.001' name_q='"Material.001"' material=bpy.data.materials['Material.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0A': {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['RGBA16_0601BF00.tga.000'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False}, 'texel0RGB': {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['RGBA16_0601BF00.tga.000'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False}, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['RGBA16_0601BF00.tga.000'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False} and texel0A {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['RGBA16_0601BF00.tga.000'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False} into texel0 {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['RGBA16_0601BF00.tga.000'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='string.002' name_q='"string.002"' material=bpy.data.materials['string.002'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0A': {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True}, 'texel0RGB': {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True}, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True} and texel0A {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True} into texel0 {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='eyes' name_q='"eyes"' material=bpy.data.materials['eyes'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0A': {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['eyes.png'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False}, 'texel0RGB': {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['eyes.png'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False}, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['eyes.png'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False} and texel0A {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['eyes.png'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False} into texel0 {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['eyes.png'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='hands' name_q='"hands"' material=bpy.data.materials['hands'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0A': {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['texture_0600DB08_ZZPAL0.png.001'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False}, 'texel0RGB': {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['texture_0600DB08_ZZPAL0.png.001'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False}, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['texture_0600DB08_ZZPAL0.png.001'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False} and texel0A {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['texture_0600DB08_ZZPAL0.png.001'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False} into texel0 {'uv_mirror_v': False, 'uv_wrap_u': False, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['texture_0600DB08_ZZPAL0.png.001'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture texture_0600DB08_ZZPAL0.png.001 <bpy_struct, Image("texture_0600DB08_ZZPAL0.png.001")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_0600A2E8' name_q='"mtl_0600A2E8"' material=bpy.data.materials['mtl_0600A2E8'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0A': {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['CI8_0600A2E8_pal060060A0.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True}, 'texel0RGB': {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['CI8_0600A2E8_pal060060A0.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True}, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['CI8_0600A2E8_pal060060A0.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True} and texel0A {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['CI8_0600A2E8_pal060060A0.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True} into texel0 {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['CI8_0600A2E8_pal060060A0.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_06006810' name_q='"mtl_06006810"' material=bpy.data.materials['mtl_06006810'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0A': {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['RGBA16_06006810.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True}, 'texel0RGB': {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['RGBA16_06006810.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True}, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['RGBA16_06006810.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True} and texel0A {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['RGBA16_06006810.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True} into texel0 {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['RGBA16_06006810.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_0600A418' name_q='"mtl_0600A418"' material=bpy.data.materials['mtl_0600A418'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0A': {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['CI8_0600A418_pal060060A0.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True}, 'texel0RGB': {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['CI8_0600A418_pal060060A0.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True}, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['CI8_0600A418_pal060060A0.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True} and texel0A {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['CI8_0600A418_pal060060A0.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True} into texel0 {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['CI8_0600A418_pal060060A0.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='collar' name_q='"collar"' material=bpy.data.materials['collar'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[1], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentA from bpy.data...nodes["OBJEX_EnvColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0A': {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['I8_06008418.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['I8_06008418.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True}, 'environmentA': 1.0, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged environmentRGB bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value and environmentA 1.0 into environment (0.011612245813012123, 0.14126330614089966, 0.011612245813012123, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['I8_06008418.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True} and texel0A {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['I8_06008418.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True} into texel0 {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['I8_06008418.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='hylian.crest.002' name_q='"hylian.crest.002"' material=bpy.data.materials['hylian.crest.002'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0A': {'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['04000400.tga.002'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': True, 'uv_wrap_v': True}, 'texel0RGB': {'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['04000400.tga.002'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': True, 'uv_wrap_v': True}, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['04000400.tga.002'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': True, 'uv_wrap_v': True} and texel0A {'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['04000400.tga.002'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': True, 'uv_wrap_v': True} into texel0 {'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['04000400.tga.002'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': True, 'uv_wrap_v': True}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='string' name_q='"string"' material=bpy.data.materials['string'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0A': {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 1, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True}, 'texel0RGB': {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 1, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True}, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 1, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True} and texel0A {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 1, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True} into texel0 {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 1, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': True}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000_ZZFORCERGBA16.tga <bpy_struct, Image("04000000_ZZFORCERGBA16.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='slingshot' name_q='"slingshot"' material=bpy.data.materials['slingshot'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0A': {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['06008DE0.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False}, 'texel0RGB': {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['06008DE0.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False}, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 1.0, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['06008DE0.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False} and texel0A {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['06008DE0.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False} into texel0 {'uv_mirror_v': False, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': False, 'uv_scale_v': 0, 'uv_scale_v_main': 1.0, 'uv_map': False, 'uv_scale_u_main': 1.0, 'image': bpy.data.images['06008DE0.tga'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': False, 'uv_wrap_v': False}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='glass.000' name_q='"glass.000"' material=bpy.data.materials['glass.000'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0A': {'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': True, 'uv_scale_v': 0, 'uv_scale_v_main': 0.02500000037252903, 'uv_map': False, 'uv_scale_u_main': 0.02500000037252903, 'image': bpy.data.images['liquid.png'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': True, 'uv_wrap_v': True}, 'texel0RGB': {'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': True, 'uv_scale_v': 0, 'uv_scale_v_main': 0.02500000037252903, 'uv_map': False, 'uv_scale_u_main': 0.02500000037252903, 'image': bpy.data.images['liquid.png'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': True, 'uv_wrap_v': True}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}, 'shadeRGB': {'type': 'normals'}, 'primitiveA': 0.75}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': True, 'uv_scale_v': 0, 'uv_scale_v_main': 0.02500000037252903, 'uv_map': False, 'uv_scale_u_main': 0.02500000037252903, 'image': bpy.data.images['liquid.png'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': True, 'uv_wrap_v': True} and texel0A {'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': True, 'uv_scale_v': 0, 'uv_scale_v_main': 0.02500000037252903, 'uv_map': False, 'uv_scale_u_main': 0.02500000037252903, 'image': bpy.data.images['liquid.png'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': True, 'uv_wrap_v': True} into texel0 {'uv_mirror_v': True, 'uv_wrap_u': True, 'uv_layer': '', 'texgen': True, 'uv_scale_v': 0, 'uv_scale_v_main': 0.02500000037252903, 'uv_map': False, 'uv_scale_u_main': 0.02500000037252903, 'image': bpy.data.images['liquid.png'], 'uv_scale_u': 0, 'texgen_linear': False, 'uv_mirror_u': True, 'uv_wrap_v': True}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.2400 sec |   0.2390 sec) Finished exporting materials, now exporting skeletons/animations
INFO:objex.ObjexWriter.write: now exporting skeletons
INFO:objex.ObjexWriter.write:  ... and animations
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.2440 sec |   0.2430 sec) Objex Export Finished

WARNING:objex.OBJEX_OT_export.execute: Scene uses display_device='sRGB' which changes how colors are displayed in the viewport, reducing the preview accuracy.
This can be changed under Color Management in Render properties.
Note that this should also be kept consistent with the Color Space property of image texture nodes (display_device="None", Color Space="Linear").
Recommended value: None
INFO:objex.OBJEX_OT_export.progress_report_print:   (  0.0228 sec |   0.0000 sec) Objex Export path: 'D:\\Games\\Modding\\Zelda 64\\Models\\Z64O_Models\\MM Link\\Adult\\object_link_boy_2_8.objex'
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0239 sec |   0.0000 sec) Finished writing geometry of 'Sun'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Hookshot.Spike, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0297 sec |   0.0048 sec) Finished writing geometry of 'Hookshot.Spike'.
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0313 sec |   0.0005 sec) Finished writing geometry of 'skeleton'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Blade.2, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0403 sec |   0.0079 sec) Finished writing geometry of 'Blade.2'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Sheath.3, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0467 sec |   0.0048 sec) Finished writing geometry of 'Sheath.3'.
WARNING:objex.ObjexWriter.write_object: Mesh Sheath is not triangulated and will be triangulated automatically (for exporting only).
Preview accuracy (UVs, shading, vertex colors) is improved by using a triangulated mesh.
Note: mesh has no triangulate modifier
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0529 sec |   0.0052 sec) Finished writing geometry of 'Sheath'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Broken.Blade.3, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0598 sec |   0.0058 sec) Finished writing geometry of 'Broken.Blade.3'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating riggedmesh, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1246 sec |   0.0632 sec) Finished writing geometry of 'riggedmesh'.
WARNING:objex.ObjexWriter.write_object: Mesh Fist.L is not triangulated and will be triangulated automatically (for exporting only).
Preview accuracy (UVs, shading, vertex colors) is improved by using a triangulated mesh.
Note: mesh has no triangulate modifier
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1335 sec |   0.0074 sec) Finished writing geometry of 'Fist.L'.
WARNING:objex.ObjexWriter.write_object: Mesh Fist.R is not triangulated and will be triangulated automatically (for exporting only).
Preview accuracy (UVs, shading, vertex colors) is improved by using a triangulated mesh.
Note: mesh has no triangulate modifier
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1431 sec |   0.0080 sec) Finished writing geometry of 'Fist.R'.
WARNING:objex.ObjexWriter.write_object: Mesh Bottle.Hand.L is not triangulated and will be triangulated automatically (for exporting only).
Preview accuracy (UVs, shading, vertex colors) is improved by using a triangulated mesh.
Note: mesh has no triangulate modifier
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1515 sec |   0.0074 sec) Finished writing geometry of 'Bottle.Hand.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Ocarina.2, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1610 sec |   0.0079 sec) Finished writing geometry of 'Ocarina.2'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Blade.2.alt, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1786 sec |   0.0138 sec) Finished writing geometry of 'Blade.2.alt'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Hilt.2, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1969 sec |   0.0166 sec) Finished writing geometry of 'Hilt.2'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Shield.2, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2064 sec |   0.0073 sec) Finished writing geometry of 'Shield.2'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Blade.3, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2165 sec |   0.0080 sec) Finished writing geometry of 'Blade.3'.
WARNING:objex.ObjexWriter.write_object: Object Bottle was found to be rigged to skeleton but it also has an armature deform modifier using None
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Bottle, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2313 sec |   0.0127 sec) Finished writing geometry of 'Bottle'.
WARNING:objex.ObjexWriter.write_object: Mesh Hilt.3 is not triangulated and will be triangulated automatically (for exporting only).
Preview accuracy (UVs, shading, vertex colors) is improved by using a triangulated mesh.
Note: mesh has no triangulate modifier
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2486 sec |   0.0152 sec) Finished writing geometry of 'Hilt.3'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Shield.3, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2617 sec |   0.0116 sec) Finished writing geometry of 'Shield.3'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Gauntlet.Fist.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2778 sec |   0.0134 sec) Finished writing geometry of 'Gauntlet.Fist.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Gauntlet.Fist.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2905 sec |   0.0106 sec) Finished writing geometry of 'Gauntlet.Fist.R'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Gauntlet.Forearm.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.3042 sec |   0.0116 sec) Finished writing geometry of 'Gauntlet.Forearm.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Gauntlet.Forearm.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.3271 sec |   0.0203 sec) Finished writing geometry of 'Gauntlet.Forearm.R'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Gauntlet.Hand.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.3425 sec |   0.0128 sec) Finished writing geometry of 'Gauntlet.Hand.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Gauntlet.Hand.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.3611 sec |   0.0165 sec) Finished writing geometry of 'Gauntlet.Hand.R'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Foot.2.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.3786 sec |   0.0148 sec) Finished writing geometry of 'Foot.2.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Foot.2.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.3925 sec |   0.0117 sec) Finished writing geometry of 'Foot.2.R'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Foot.3.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.4122 sec |   0.0175 sec) Finished writing geometry of 'Foot.3.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Foot.3.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.4312 sec |   0.0158 sec) Finished writing geometry of 'Foot.3.R'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Bow, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.4494 sec |   0.0166 sec) Finished writing geometry of 'Bow'.
WARNING:objex.ObjexWriter.write_object: Mesh Hammer is not triangulated and will be triangulated automatically (for exporting only).
Preview accuracy (UVs, shading, vertex colors) is improved by using a triangulated mesh.
Note: mesh has no triangulate modifier
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.4680 sec |   0.0176 sec) Finished writing geometry of 'Hammer'.
WARNING:objex.ObjexWriter.write_object: Mesh Hookshot is not triangulated and will be triangulated automatically (for exporting only).
Preview accuracy (UVs, shading, vertex colors) is improved by using a triangulated mesh.
Note: mesh has no triangulate modifier
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.4962 sec |   0.0254 sec) Finished writing geometry of 'Hookshot'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating FPS.Forearm.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.5068 sec |   0.0095 sec) Finished writing geometry of 'FPS.Forearm.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Blade.3.Break, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.5110 sec |   0.0031 sec) Finished writing geometry of 'Blade.3.Break'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Bow.String, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.5147 sec |   0.0027 sec) Finished writing geometry of 'Bow.String'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating FPS.Forearm.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.5221 sec |   0.0069 sec) Finished writing geometry of 'FPS.Forearm.R'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating FPS.Hand.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.5321 sec |   0.0090 sec) Finished writing geometry of 'FPS.Hand.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating FPS.Hand.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.5432 sec |   0.0100 sec) Finished writing geometry of 'FPS.Hand.R'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Hookshot.Aiming.Reticule, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.5448 sec |   0.0010 sec) Finished writing geometry of 'Hookshot.Aiming.Reticule'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Hookshot.Chain, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.5475 sec |   0.0022 sec) Finished writing geometry of 'Hookshot.Chain'.
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.5485 sec |   0.0000 sec) Finished writing geometry of 'yl.skeleton'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating young.link, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.6060 sec |   0.0558 sec) Finished writing geometry of 'young.link'.
WARNING:objex.ObjexWriter.write_object: Mesh FPS.Hookshot is not triangulated and will be triangulated automatically (for exporting only).
Preview accuracy (UVs, shading, vertex colors) is improved by using a triangulated mesh.
Note: mesh has no triangulate modifier
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.6277 sec |   0.0206 sec) Finished writing geometry of 'FPS.Hookshot'.
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.6287 sec |   0.6054 sec) Finished exporting geometry, now exporting materials
TRACE:objex.export_objex_mtl.write_mtl: Writing name='metal' name_q='"metal"' material=Evaluated Material 'metal' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['04000000.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': True, 'texgen_linear': True, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806}, 'texel0A': {'image': bpy.data.images['04000000.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': True, 'texgen_linear': True, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['04000000.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': True, 'texgen_linear': True, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806} and texel0A {'image': bpy.data.images['04000000.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': True, 'texgen_linear': True, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806} into texel0 {'image': bpy.data.images['04000000.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': True, 'texgen_linear': True, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='bg.sheath' name_q='"bg.sheath"' material=Evaluated Material 'bg.sheath' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['BG_Sheath.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['BG_Sheath.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['BG_Sheath.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['BG_Sheath.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['BG_Sheath.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='sheath.tip' name_q='"sheath.tip"' material=Evaluated Material 'sheath.tip' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['06008CE8.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['06008CE8.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['06008CE8.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['06008CE8.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['06008CE8.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='sheath' name_q='"sheath"' material=Evaluated Material 'sheath' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['060086E8.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['060086E8.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['060086E8.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['060086E8.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['060086E8.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='hat' name_q='"hat"' material=Evaluated Material 'hat' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_ENVIRONMENT': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_ENVIRONMENT': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'environmentRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'environmentA': 1.0, 'texel0RGB': {'image': bpy.data.images['06005280.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['06005280.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged environmentRGB bpy.data.node_groups['Shader Nodetree']...default_value and environmentA 1.0 into environment (0.012983005493879318, 0.14126332104206085, 0.01096009835600853, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['06005280.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['06005280.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['06005280.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='tunic.1' name_q='"tunic.1"' material=Evaluated Material 'tunic.1' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_ENVIRONMENT': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_ENVIRONMENT': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'environmentRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'environmentA': 1.0, 'texel0RGB': {'image': bpy.data.images['06005280.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['06005280.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged environmentRGB bpy.data.node_groups['Shader Nodetree']...default_value and environmentA 1.0 into environment (0.012983005493879318, 0.14126332104206085, 0.01096009835600853, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['06005280.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['06005280.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['06005280.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 06005280.tga <bpy_struct, Image("06005280.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='tunic.2' name_q='"tunic.2"' material=Evaluated Material 'tunic.2' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_ENVIRONMENT': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_ENVIRONMENT': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'environmentRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'environmentA': 1.0, 'texel0RGB': {'image': bpy.data.images['04001D40.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['04001D40.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged environmentRGB bpy.data.node_groups['Shader Nodetree']...default_value and environmentA 1.0 into environment (0.012983005493879318, 0.14126332104206085, 0.01096009835600853, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['04001D40.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['04001D40.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['04001D40.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='collar' name_q='"collar"' material=Evaluated Material 'collar' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_ENVIRONMENT': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_ENVIRONMENT': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'environmentRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'environmentA': 1.0, 'texel0RGB': {'image': bpy.data.images['04001F40.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['04001F40.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged environmentRGB bpy.data.node_groups['Shader Nodetree']...default_value and environmentA 1.0 into environment (0.01161224115639925, 0.14126332104206085, 0.01161225140094757, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['04001F40.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['04001F40.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['04001F40.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='fingers' name_q='"fingers"' material=Evaluated Material 'fingers' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['0600D738.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['0600D738.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['0600D738.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['0600D738.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['0600D738.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='glove.back' name_q='"glove.back"' material=Evaluated Material 'glove.back' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['06008080.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['06008080.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['06008080.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['06008080.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['06008080.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='glove.palm' name_q='"glove.palm"' material=Evaluated Material 'glove.palm' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['06006480.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['06006480.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['06006480.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['06006480.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['06006480.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='cuffs' name_q='"cuffs"' material=Evaluated Material 'cuffs' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['06007880.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['06007880.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['06007880.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['06007880.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['06007880.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='undershirt.limbs' name_q='"undershirt.limbs"' material=Evaluated Material 'undershirt.limbs' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['06005E80.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['06005E80.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['06005E80.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['06005E80.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['06005E80.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='nose.bridge' name_q='"nose.bridge"' material=Evaluated Material 'nose.bridge' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['06007380.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['06007380.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['06007380.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['06007380.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['06007380.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='nose' name_q='"nose"' material=Evaluated Material 'nose' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['06007280.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['06007280.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['06007280.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['06007280.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['06007280.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='eyes' name_q='"eyes"' material=Evaluated Material 'eyes' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['eyes.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['eyes.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['eyes.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['eyes.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['eyes.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ears' name_q='"ears"' material=Evaluated Material 'ears' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['06007180.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['06007180.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['06007180.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['06007180.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['06007180.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mouth' name_q='"mouth"' material=Evaluated Material 'mouth' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['09000000.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['09000000.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['09000000.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['09000000.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['09000000.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='hair' name_q='"hair"' material=Evaluated Material 'hair' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['06005400.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['06005400.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['06005400.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['06005400.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['06005400.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='neck' name_q='"neck"' material=Evaluated Material 'neck' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['06006580.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['06006580.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['06006580.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['06006580.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['06006580.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='undershirt' name_q='"undershirt"' material=Evaluated Material 'undershirt' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['06008EE8.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['06008EE8.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['06008EE8.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['06008EE8.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['06008EE8.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ear.ring' name_q='"ear.ring"' material=Evaluated Material 'ear.ring' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['earring'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['earring'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['earring'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['earring'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['earring'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='boot.foot' name_q='"boot.foot"' material=Evaluated Material 'boot.foot' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['06006480.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['06006480.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['06006480.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['06006480.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['06006480.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 06006480.tga <bpy_struct, Image("06006480.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='boot.buckle' name_q='"boot.buckle"' material=Evaluated Material 'boot.buckle' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['06006280.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['06006280.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['06006280.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['06006280.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['06006280.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='boot' name_q='"boot"' material=Evaluated Material 'boot' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['06006080.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['06006080.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['06006080.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['06006080.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['06006080.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='belt' name_q='"belt"' material=Evaluated Material 'belt' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='buckle' name_q='"buckle"' material=Evaluated Material 'buckle' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['06005680_ZZPAL1.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['06005680_ZZPAL1.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['06005680_ZZPAL1.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['06005680_ZZPAL1.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['06005680_ZZPAL1.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Body' name_q='"Body"' material=Evaluated Material 'Body' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['06006B00.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['06006B00.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['06006B00.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['06006B00.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['06006B00.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Material' name_q='"Material"' material=Evaluated Material 'Material' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['06005B40.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['06005B40.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['06005B40.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['06005B40.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['06005B40.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='grip' name_q='"grip"' material=Evaluated Material 'grip' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['060084E8.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['060084E8.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['060084E8.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['060084E8.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['060084E8.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='side' name_q='"side"' material=Evaluated Material 'side' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['060085E8.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['060085E8.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['060085E8.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['060085E8.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['060085E8.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ocarina' name_q='"ocarina"' material=Evaluated Material 'ocarina' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['04001400.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['04001400.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['04001400.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['04001400.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['04001400.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ms.symbol_v4' name_q='"ms.symbol_v4"' material=Evaluated Material 'ms.symbol_v4' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 0.75, 'texel0RGB': {'image': bpy.data.images['ms_insignia.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['ms_insignia.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 0.75 into primitive (1.0, 1.0, 1.0, 0.75)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['ms_insignia.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['ms_insignia.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['ms_insignia.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ms.hilt.001' name_q='"ms.hilt.001"' material=Evaluated Material 'ms.hilt.001' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['060090E8.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['060090E8.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['060090E8.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['060090E8.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['060090E8.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ns.guard.001' name_q='"ns.guard.001"' material=Evaluated Material 'ns.guard.001' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['06006CE0.tga.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['06006CE0.tga.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['06006CE0.tga.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['06006CE0.tga.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['06006CE0.tga.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ms.gem' name_q='"ms.gem"' material=Evaluated Material 'ms.gem' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['04000000.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': True, 'texgen_linear': True, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806}, 'texel0A': {'image': bpy.data.images['04000000.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': True, 'texgen_linear': True, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 0.8227858543395996, 0.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['04000000.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': True, 'texgen_linear': True, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806} and texel0A {'image': bpy.data.images['04000000.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': True, 'texgen_linear': True, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806} into texel0 {'image': bpy.data.images['04000000.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': True, 'texgen_linear': True, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga <bpy_struct, Image("04000000.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='string' name_q='"string"' material=Evaluated Material 'string' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 06005600_ZZPAL1.tga <bpy_struct, Image("06005600_ZZPAL1.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='shield.back.002' name_q='"shield.back.002"' material=Evaluated Material 'shield.back.002' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['06009768.tga.003'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['06009768.tga.003'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['06009768.tga.003'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['06009768.tga.003'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['06009768.tga.003'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='hylian.crest.002' name_q='"hylian.crest.002"' material=Evaluated Material 'hylian.crest.002' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['04000400.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['04000400.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['04000400.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['04000400.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['04000400.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='glass' name_q='"glass"' material=Evaluated Material 'glass' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 0.75, 'texel0RGB': {'image': bpy.data.images['06000508.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_layer': False, 'uv_map': '', 'texgen': True, 'texgen_linear': False, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806}, 'texel0A': {'image': bpy.data.images['06000508.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_layer': False, 'uv_map': '', 'texgen': True, 'texgen_linear': False, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 0.75 into primitive (1.0, 1.0, 1.0, 0.75)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['06000508.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_layer': False, 'uv_map': '', 'texgen': True, 'texgen_linear': False, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806} and texel0A {'image': bpy.data.images['06000508.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_layer': False, 'uv_map': '', 'texgen': True, 'texgen_linear': False, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806} into texel0 {'image': bpy.data.images['06000508.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_layer': False, 'uv_map': '', 'texgen': True, 'texgen_linear': False, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='liquid' name_q='"liquid"' material=Evaluated Material 'liquid' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_ENVIRONMENT': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 0.75, 'environmentRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'texel0RGB': {'image': bpy.data.images['liquid.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_layer': False, 'uv_map': '', 'texgen': True, 'texgen_linear': False, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806}, 'texel0A': {'image': bpy.data.images['liquid.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_layer': False, 'uv_map': '', 'texgen': True, 'texgen_linear': False, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['liquid.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_layer': False, 'uv_map': '', 'texgen': True, 'texgen_linear': False, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806} and texel0A {'image': bpy.data.images['liquid.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_layer': False, 'uv_map': '', 'texgen': True, 'texgen_linear': False, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806} into texel0 {'image': bpy.data.images['liquid.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': True, 'uv_layer': False, 'uv_map': '', 'texgen': True, 'texgen_linear': False, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='bg.handguard_v4' name_q='"bg.handguard_v4"' material=Evaluated Material 'bg.handguard_v4' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['biggoron_bolt'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['biggoron_bolt'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (0.011612236499786377, 0.10702311992645264, 0.4969330132007599, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['biggoron_bolt'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['biggoron_bolt'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['biggoron_bolt'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='bg.handle_v4' name_q='"bg.handle_v4"' material=Evaluated Material 'bg.handle_v4' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['biggoron_handle.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['biggoron_handle.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (0.262250691652298, 0.26225072145462036, 0.10702313482761383, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['biggoron_handle.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['biggoron_handle.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['biggoron_handle.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='bg.end.1_v4' name_q='"bg.end.1_v4"' material=Evaluated Material 'bg.end.1_v4' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['biggoron_handle.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['biggoron_handle.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (0.33245164155960083, 0.3324515223503113, 0.33245164155960083, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['biggoron_handle.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['biggoron_handle.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['biggoron_handle.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture biggoron_handle.png <bpy_struct, Image("biggoron_handle.png")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='bg.end.2_v4' name_q='"bg.end.2_v4"' material=Evaluated Material 'bg.end.2_v4' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['biggoron_handle.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['biggoron_handle.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (0.011612236499786377, 0.08021988719701767, 0.4969330132007599, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['biggoron_handle.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['biggoron_handle.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['biggoron_handle.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture biggoron_handle.png <bpy_struct, Image("biggoron_handle.png")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='goron.symbol_v4' name_q='"goron.symbol_v4"' material=Evaluated Material 'goron.symbol_v4' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['06009E60_ZZFORCERGBA16.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['06009E60_ZZFORCERGBA16.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['06009E60_ZZFORCERGBA16.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['06009E60_ZZFORCERGBA16.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['06009E60_ZZFORCERGBA16.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='metal.red' name_q='"metal.red"' material=Evaluated Material 'metal.red' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['04000000.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': True, 'texgen_linear': True, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806}, 'texel0A': {'image': bpy.data.images['04000000.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': True, 'texgen_linear': True, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (0.6795426607131958, 0.0, 0.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['04000000.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': True, 'texgen_linear': True, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806} and texel0A {'image': bpy.data.images['04000000.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': True, 'texgen_linear': True, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806} into texel0 {'image': bpy.data.images['04000000.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': True, 'texgen_linear': True, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga <bpy_struct, Image("04000000.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mirror.surface' name_q='"mirror.surface"' material=Evaluated Material 'mirror.surface' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['04000000.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': True, 'texgen_linear': True, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806}, 'texel0A': {'image': bpy.data.images['04000000.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': True, 'texgen_linear': True, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (0.009134024381637573, 0.09084173291921616, 0.3915725350379944, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['04000000.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': True, 'texgen_linear': True, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806} and texel0A {'image': bpy.data.images['04000000.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': True, 'texgen_linear': True, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806} into texel0 {'image': bpy.data.images['04000000.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': True, 'texgen_linear': True, 'uv_scale_u_main': 0.05000000074505806, 'uv_scale_v_main': 0.05000000074505806}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga <bpy_struct, Image("04000000.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mirror' name_q='"mirror"' material=Evaluated Material 'mirror' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['shieldtexture.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': True, 'texgen_linear': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['shieldtexture.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': True, 'texgen_linear': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['shieldtexture.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': True, 'texgen_linear': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['shieldtexture.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': True, 'texgen_linear': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['shieldtexture.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': True, 'texgen_linear': True, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='geruto.insignia.001' name_q='"geruto.insignia.001"' material=Evaluated Material 'geruto.insignia.001' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['0600A968.tga.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['0600A968.tga.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['0600A968.tga.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['0600A968.tga.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['0600A968.tga.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='geruto.insignia.003' name_q='"geruto.insignia.003"' material=Evaluated Material 'geruto.insignia.003' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['06009968.tga.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['06009968.tga.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['06009968.tga.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['06009968.tga.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['06009968.tga.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': True, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='metal.gold' name_q='"metal.gold"' material=Evaluated Material 'metal.gold' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_ENVIRONMENT': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_ENVIRONMENT': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'environmentRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'environmentA': 1.0, 'texel0RGB': {'image': bpy.data.images['04000000.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': True, 'texgen_linear': True, 'uv_scale_u_main': 0.02500000037252903, 'uv_scale_v_main': 0.02500000037252903}, 'texel0A': {'image': bpy.data.images['04000000.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': True, 'texgen_linear': True, 'uv_scale_u_main': 0.02500000037252903, 'uv_scale_v_main': 0.02500000037252903}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged environmentRGB bpy.data.node_groups['Shader Nodetree']...default_value and environmentA 1.0 into environment (1.0, 1.0, 0.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['04000000.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': True, 'texgen_linear': True, 'uv_scale_u_main': 0.02500000037252903, 'uv_scale_v_main': 0.02500000037252903} and texel0A {'image': bpy.data.images['04000000.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': True, 'texgen_linear': True, 'uv_scale_u_main': 0.02500000037252903, 'uv_scale_v_main': 0.02500000037252903} into texel0 {'image': bpy.data.images['04000000.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': True, 'texgen_linear': True, 'uv_scale_u_main': 0.02500000037252903, 'uv_scale_v_main': 0.02500000037252903}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga <bpy_struct, Image("04000000.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='gauntlet.hand' name_q='"gauntlet.hand"' material=Evaluated Material 'gauntlet.hand' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_ENVIRONMENT': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_ENVIRONMENT': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'environmentRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'environmentA': 1.0, 'texel0RGB': {'image': bpy.data.images['0600BEE8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['0600BEE8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged environmentRGB bpy.data.node_groups['Shader Nodetree']...default_value and environmentA 1.0 into environment (1.0, 1.0, 0.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['0600BEE8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['0600BEE8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['0600BEE8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='gauntlet.arm' name_q='"gauntlet.arm"' material=Evaluated Material 'gauntlet.arm' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_ENVIRONMENT': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_ENVIRONMENT': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'environmentRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'environmentA': 1.0, 'texel0RGB': {'image': bpy.data.images['0600BAE8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['0600BAE8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged environmentRGB bpy.data.node_groups['Shader Nodetree']...default_value and environmentA 1.0 into environment (1.0, 1.0, 0.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['0600BAE8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['0600BAE8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['0600BAE8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='bolt' name_q='"bolt"' material=Evaluated Material 'bolt' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['0600C6E8.tga.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['0600C6E8.tga.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['0600C6E8.tga.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['0600C6E8.tga.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['0600C6E8.tga.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='metal.iron' name_q='"metal.iron"' material=Evaluated Material 'metal.iron' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['04000000.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['04000000.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (0.04666508361697197, 0.04666510224342346, 0.08865559101104736, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['04000000.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['04000000.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['04000000.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga <bpy_struct, Image("04000000.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='hover.main' name_q='"hover.main"' material=Evaluated Material 'hover.main' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['3ds_hoverboots.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['3ds_hoverboots.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['3ds_hoverboots.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['3ds_hoverboots.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['3ds_hoverboots.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='metal.hover' name_q='"metal.hover"' material=Evaluated Material 'metal.hover' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['04000000.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['04000000.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (0.5088813900947571, 0.44520118832588196, 0.16513225436210632, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['04000000.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['04000000.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['04000000.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga <bpy_struct, Image("04000000.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='wood.blue' name_q='"wood.blue"' material=Evaluated Material 'wood.blue' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['0600B168.tga.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['0600B168.tga.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (0.05951124429702759, 0.05951128527522087, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['0600B168.tga.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['0600B168.tga.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['0600B168.tga.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='wood.brown' name_q='"wood.brown"' material=Evaluated Material 'wood.brown' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['0600B168.tga.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['0600B168.tga.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (0.6938719749450684, 0.4072403013706207, 0.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['0600B168.tga.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['0600B168.tga.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['0600B168.tga.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 0600B168.tga.001 <bpy_struct, Image("0600B168.tga.001")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='bow.string' name_q='"bow.string"' material=Evaluated Material 'bow.string' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['biggoron_handle.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['biggoron_handle.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['biggoron_handle.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['biggoron_handle.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['biggoron_handle.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture biggoron_handle.png <bpy_struct, Image("biggoron_handle.png")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='wood.red' name_q='"wood.red"' material=Evaluated Material 'wood.red' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['0600B168.tga.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['0600B168.tga.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (0.658375084400177, 0.0, 0.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['0600B168.tga.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['0600B168.tga.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['0600B168.tga.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 0600B168.tga.001 <bpy_struct, Image("0600B168.tga.001")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='wood.grip' name_q='"wood.grip"' material=Evaluated Material 'wood.grip' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['0600B168.tga.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['0600B168.tga.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 0.7230552434921265, 0.31854692101478577, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['0600B168.tga.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['0600B168.tga.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['0600B168.tga.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 0600B168.tga.001 <bpy_struct, Image("0600B168.tga.001")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='hammer.grip' name_q='"hammer.grip"' material=Evaluated Material 'hammer.grip' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['04001A00.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['04001A00.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (0.07818744331598282, 0.0, 0.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['04001A00.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['04001A00.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['04001A00.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='handle' name_q='"handle"' material=Evaluated Material 'handle' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['0600B228.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['0600B228.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['0600B228.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['0600B228.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['0600B228.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='chain' name_q='"chain"' material=Evaluated Material 'chain' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['0600B2A8.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['0600B2A8.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['0600B2A8.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['0600B2A8.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['0600B2A8.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='body.001' name_q='"body.001"' material=Evaluated Material 'body.001' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['0600B1A8.tga.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['0600B1A8.tga.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['0600B1A8.tga.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['0600B1A8.tga.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['0600B1A8.tga.001'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='hookshot.chain' name_q='"hookshot.chain"' material=Evaluated Material 'hookshot.chain' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['0602B338.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['0602B338.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['0602B338.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['0602B338.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['0602B338.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Bow_String' name_q='"Bow_String"' material=Evaluated Material 'Bow_String' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_ENVIRONMENT': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_ENVIRONMENT': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'environmentRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'environmentA': 1.0, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged environmentRGB bpy.data.node_groups['Shader Nodetree']...default_value and environmentA 1.0 into environment (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Hookshot.Aim' name_q='"Hookshot.Aim"' material=Evaluated Material 'Hookshot.Aim' face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['earring'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['earring'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['earring'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['earring'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['earring'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture earring <bpy_struct, Image("earring")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Bruh_ZZNOCULL' name_q='"Bruh_ZZNOCULL"' material=Evaluated Material 'Bruh_ZZNOCULL' face_img=None
WARNING:objex.export_objex_mtl.detect_zztag: Found what may be an ancient ZZ-tag in name Bruh_ZZNOCULL
Those are not used at all anymore and will be ignored
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_ACMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_SHADE': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_TEXEL0': Evaluated NodeTree 'Shader Nodetree', 'G_CCMUX_PRIMITIVE': Evaluated NodeTree 'Shader Nodetree'}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from Evaluated NodeTree 'Shader Nodetree' (socket node: Evaluated NodeTree 'Shader Nodetree')
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'texel0RGB': {'image': bpy.data.images['06005740.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['06005740.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['06005740.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['06005740.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['06005740.tga'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.8101 sec |   0.7867 sec) Finished exporting materials, now exporting skeletons/animations
INFO:objex.ObjexWriter.write: now exporting skeletons
INFO:objex.ObjexWriter.write:  ... and animations
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.8149 sec |   0.7915 sec) Objex Export Finished

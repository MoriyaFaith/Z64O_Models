WARNING:objex.OBJEX_OT_export.execute: Scene uses display_device='sRGB' which changes how colors are displayed in the viewport, reducing the preview accuracy.
This can be changed under Color Management in Scene properties.
Note that this should also be kept consistent with the Color Space property of image texture nodes (display_device="None", Color Space="Linear").
In Blender 2.7x, "Color Space" can be found in the Image Editor.
Recommended value: None
INFO:objex.OBJEX_OT_export.progress_report_print:   (  0.0000 sec |   0.0000 sec) Objex Export path: 'D:\\Games\\Modding\\Zelda 64\\Models\\Z64O_Models\\MM Link\\Adult\\object_link_boy.objex'
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Hookshot.Spike, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0131 sec |   0.0101 sec) Finished writing geometry of 'Hookshot.Spike'.
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0160 sec |   0.0010 sec) Finished writing geometry of 'skeleton'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Sheath.3, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0270 sec |   0.0090 sec) Finished writing geometry of 'Sheath.3'.
WARNING:objex.ObjexWriter.write_object: Mesh Sheath is not triangulated and will be triangulated automatically (for exporting only).
Preview accuracy (UVs, shading, vertex colors) is improved by using a triangulated mesh.
Note: mesh has no triangulate modifier
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0400 sec |   0.0110 sec) Finished writing geometry of 'Sheath'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Broken.Blade.3, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0520 sec |   0.0090 sec) Finished writing geometry of 'Broken.Blade.3'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating riggedmesh, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1030 sec |   0.0490 sec) Finished writing geometry of 'riggedmesh'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Fist.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1150 sec |   0.0100 sec) Finished writing geometry of 'Fist.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Fist.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1280 sec |   0.0110 sec) Finished writing geometry of 'Fist.R'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Bottle.Hand.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1420 sec |   0.0110 sec) Finished writing geometry of 'Bottle.Hand.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Ocarina.2, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1550 sec |   0.0110 sec) Finished writing geometry of 'Ocarina.2'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Blade.2, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1750 sec |   0.0150 sec) Finished writing geometry of 'Blade.2'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Hilt.2, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1940 sec |   0.0170 sec) Finished writing geometry of 'Hilt.2'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Shield.2, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2080 sec |   0.0120 sec) Finished writing geometry of 'Shield.2'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Blade.3, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2200 sec |   0.0100 sec) Finished writing geometry of 'Blade.3'.
WARNING:objex.ObjexWriter.write_object: Object Bottle was found to be rigged to skeleton but it also has an armature deform modifier using None
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Bottle, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2350 sec |   0.0130 sec) Finished writing geometry of 'Bottle'.
WARNING:objex.ObjexWriter.write_object: Mesh Hilt.3 is not triangulated and will be triangulated automatically (for exporting only).
Preview accuracy (UVs, shading, vertex colors) is improved by using a triangulated mesh.
Note: mesh has no triangulate modifier
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2540 sec |   0.0170 sec) Finished writing geometry of 'Hilt.3'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Shield.3, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2700 sec |   0.0140 sec) Finished writing geometry of 'Shield.3'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Gauntlet.Fist.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2850 sec |   0.0130 sec) Finished writing geometry of 'Gauntlet.Fist.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Gauntlet.Fist.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.3010 sec |   0.0140 sec) Finished writing geometry of 'Gauntlet.Fist.R'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Gauntlet.Forearm.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.3160 sec |   0.0120 sec) Finished writing geometry of 'Gauntlet.Forearm.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Gauntlet.Forearm.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.3300 sec |   0.0120 sec) Finished writing geometry of 'Gauntlet.Forearm.R'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Gauntlet.Hand.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.3450 sec |   0.0130 sec) Finished writing geometry of 'Gauntlet.Hand.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Gauntlet.Hand.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.3630 sec |   0.0150 sec) Finished writing geometry of 'Gauntlet.Hand.R'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Foot.2.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.3800 sec |   0.0140 sec) Finished writing geometry of 'Foot.2.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Foot.2.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.3960 sec |   0.0140 sec) Finished writing geometry of 'Foot.2.R'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Foot.3.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.4120 sec |   0.0150 sec) Finished writing geometry of 'Foot.3.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Foot.3.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.4300 sec |   0.0160 sec) Finished writing geometry of 'Foot.3.R'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Bow, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.4460 sec |   0.0150 sec) Finished writing geometry of 'Bow'.
WARNING:objex.ObjexWriter.write_object: Mesh Hammer is not triangulated and will be triangulated automatically (for exporting only).
Preview accuracy (UVs, shading, vertex colors) is improved by using a triangulated mesh.
Note: mesh has no triangulate modifier
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.4650 sec |   0.0169 sec) Finished writing geometry of 'Hammer'.
WARNING:objex.ObjexWriter.write_object: Mesh Hookshot is not triangulated and will be triangulated automatically (for exporting only).
Preview accuracy (UVs, shading, vertex colors) is improved by using a triangulated mesh.
Note: mesh has no triangulate modifier
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.5010 sec |   0.0330 sec) Finished writing geometry of 'Hookshot'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating FPS.Forearm.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.5213 sec |   0.0156 sec) Finished writing geometry of 'FPS.Forearm.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Blade.3.Break, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.5333 sec |   0.0090 sec) Finished writing geometry of 'Blade.3.Break'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Bow.String, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.5464 sec |   0.0101 sec) Finished writing geometry of 'Bow.String'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating FPS.Forearm.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.5794 sec |   0.0300 sec) Finished writing geometry of 'FPS.Forearm.R'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating FPS.Hand.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.6194 sec |   0.0220 sec) Finished writing geometry of 'FPS.Hand.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating FPS.Hand.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.6534 sec |   0.0300 sec) Finished writing geometry of 'FPS.Hand.R'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Hookshot.Aiming.Reticule, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.6648 sec |   0.0094 sec) Finished writing geometry of 'Hookshot.Aiming.Reticule'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Hookshot.Chain, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.6808 sec |   0.0100 sec) Finished writing geometry of 'Hookshot.Chain'.
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.6828 sec |   0.0000 sec) Finished writing geometry of 'yl.skeleton'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating young.link, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.7303 sec |   0.0455 sec) Finished writing geometry of 'young.link'.
WARNING:objex.ObjexWriter.write_object: Mesh FPS.Hookshot is not triangulated and will be triangulated automatically (for exporting only).
Preview accuracy (UVs, shading, vertex colors) is improved by using a triangulated mesh.
Note: mesh has no triangulate modifier
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.7553 sec |   0.0240 sec) Finished writing geometry of 'FPS.Hookshot'.
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.7583 sec |   0.7563 sec) Finished exporting geometry, now exporting materials
TRACE:objex.export_objex_mtl.write_mtl: Writing name='bolt.001' name_q='"bolt.001"' material=bpy.data.materials['bolt.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600C6E8.tga.001'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600C6E8.tga.001'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600C6E8.tga.001'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600C6E8.tga.001'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600C6E8.tga.001'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ears' name_q='"ears"' material=bpy.data.materials['ears'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06007180.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06007180.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06007180.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06007180.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06007180.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='red' name_q='"red"' material=bpy.data.materials['red'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_0': bpy.data...nodes["OBJEX_Color0"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.3564002215862274, 0.0, 0.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='glass.001' name_q='"glass.001"' material=bpy.data.materials['glass.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 0.75, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.02500000037252903, 'image': bpy.data.images['06000508.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.02500000037252903, 'uv_mirror_v': True, 'uv_layer': ''}, 'texel0RGB': {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.02500000037252903, 'image': bpy.data.images['06000508.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.02500000037252903, 'uv_mirror_v': True, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.02500000037252903, 'image': bpy.data.images['06000508.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.02500000037252903, 'uv_mirror_v': True, 'uv_layer': ''} and texel0A {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.02500000037252903, 'image': bpy.data.images['06000508.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.02500000037252903, 'uv_mirror_v': True, 'uv_layer': ''} into texel0 {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.02500000037252903, 'image': bpy.data.images['06000508.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.02500000037252903, 'uv_mirror_v': True, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 0.75 into primitive (1.0, 1.0, 1.0, 0.75)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='metal.iron' name_q='"metal.iron"' material=bpy.data.materials['metal.iron'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.05000000074505806, 'image': bpy.data.images['04000000.tga'], 'uv_wrap_u': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.05000000074505806, 'uv_mirror_v': True, 'uv_layer': ''}, 'texel0RGB': {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.05000000074505806, 'image': bpy.data.images['04000000.tga'], 'uv_wrap_u': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.05000000074505806, 'uv_mirror_v': True, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.05000000074505806, 'image': bpy.data.images['04000000.tga'], 'uv_wrap_u': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.05000000074505806, 'uv_mirror_v': True, 'uv_layer': ''} and texel0A {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.05000000074505806, 'image': bpy.data.images['04000000.tga'], 'uv_wrap_u': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.05000000074505806, 'uv_mirror_v': True, 'uv_layer': ''} into texel0 {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.05000000074505806, 'image': bpy.data.images['04000000.tga'], 'uv_wrap_u': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.05000000074505806, 'uv_mirror_v': True, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.04678334295749664, 0.04678337275981903, 0.0889815241098404, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='belt' name_q='"belt"' material=bpy.data.materials['belt'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06005B40.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06005B40.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06005B40.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06005B40.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06005B40.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='geruto.insignia.003' name_q='"geruto.insignia.003"' material=bpy.data.materials['geruto.insignia.003'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06009968.tga.001'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06009968.tga.001'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06009968.tga.001'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06009968.tga.001'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06009968.tga.001'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mirror' name_q='"mirror"' material=bpy.data.materials['mirror'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_0': bpy.data...nodes["OBJEX_Color0"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0A': {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['shieldtexture.png'], 'uv_wrap_u': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': True, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['shieldtexture.png'], 'uv_wrap_u': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': True, 'uv_layer': ''}, 'primitiveA': 0.75, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['shieldtexture.png'], 'uv_wrap_u': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': True, 'uv_layer': ''} and texel0A {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['shieldtexture.png'], 'uv_wrap_u': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': True, 'uv_layer': ''} into texel0 {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['shieldtexture.png'], 'uv_wrap_u': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': True, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 0.75 into primitive (1.0, 1.0, 1.0, 0.75)
TRACE:objex.export_objex_mtl.write_mtl: Writing name='nose' name_q='"nose"' material=bpy.data.materials['nose'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06007280.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06007280.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06007280.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06007280.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06007280.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='neck' name_q='"neck"' material=bpy.data.materials['neck'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06006580.tga'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06006580.tga'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06006580.tga'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06006580.tga'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06006580.tga'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='string' name_q='"string"' material=bpy.data.materials['string'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='material-01EBFB21.001' name_q='"material-01EBFB21.001"' material=bpy.data.materials['material-01EBFB21.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['3ds_hoverboots.png'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['3ds_hoverboots.png'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['3ds_hoverboots.png'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['3ds_hoverboots.png'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['3ds_hoverboots.png'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='metal.red' name_q='"metal.red"' material=bpy.data.materials['metal.red'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.05000000074505806, 'image': bpy.data.images['04000000.tga'], 'uv_wrap_u': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.05000000074505806, 'uv_mirror_v': True, 'uv_layer': ''}, 'texel0RGB': {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.05000000074505806, 'image': bpy.data.images['04000000.tga'], 'uv_wrap_u': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.05000000074505806, 'uv_mirror_v': True, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.05000000074505806, 'image': bpy.data.images['04000000.tga'], 'uv_wrap_u': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.05000000074505806, 'uv_mirror_v': True, 'uv_layer': ''} and texel0A {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.05000000074505806, 'image': bpy.data.images['04000000.tga'], 'uv_wrap_u': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.05000000074505806, 'uv_mirror_v': True, 'uv_layer': ''} into texel0 {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.05000000074505806, 'image': bpy.data.images['04000000.tga'], 'uv_wrap_u': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.05000000074505806, 'uv_mirror_v': True, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.6784313917160034, 0.0, 0.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga <bpy_struct, Image("04000000.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='side' name_q='"side"' material=bpy.data.materials['side'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['060085E8.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['060085E8.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['060085E8.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['060085E8.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['060085E8.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='undershirt' name_q='"undershirt"' material=bpy.data.materials['undershirt'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06008EE8.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06008EE8.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06008EE8.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06008EE8.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06008EE8.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='body.001' name_q='"body.001"' material=bpy.data.materials['body.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600B1A8.tga.001'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600B1A8.tga.001'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600B1A8.tga.001'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600B1A8.tga.001'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600B1A8.tga.001'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='geruto.insignia.001' name_q='"geruto.insignia.001"' material=bpy.data.materials['geruto.insignia.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600A968.tga.001'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600A968.tga.001'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600A968.tga.001'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600A968.tga.001'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600A968.tga.001'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mouth' name_q='"mouth"' material=bpy.data.materials['mouth'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['09000000.tga'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['09000000.tga'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['09000000.tga'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['09000000.tga'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['09000000.tga'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='nose.bridge' name_q='"nose.bridge"' material=bpy.data.materials['nose.bridge'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06007380.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06007380.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06007380.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06007380.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06007380.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='wood.brown' name_q='"wood.brown"' material=bpy.data.materials['wood.brown'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_0': bpy.data...nodes["OBJEX_Color0"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600B168.tga.001'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.6913820505142212, 0.4092666208744049, 0.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='bg.handle_v4' name_q='"bg.handle_v4"' material=bpy.data.materials['bg.handle_v4'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['biggoron_handle.png'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['biggoron_handle.png'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['biggoron_handle.png'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['biggoron_handle.png'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['biggoron_handle.png'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.2622506618499756, 0.2622506618499756, 0.10702310502529144, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='metal.gold' name_q='"metal.gold"' material=bpy.data.materials['metal.gold'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'texel0RGB': {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.03051760047674179, 'image': bpy.data.images['04000000.tga'], 'uv_wrap_u': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.022887999191880226, 'uv_mirror_v': True, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'texel0A': {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.03051760047674179, 'image': bpy.data.images['04000000.tga'], 'uv_wrap_u': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.022887999191880226, 'uv_mirror_v': True, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.03051760047674179, 'image': bpy.data.images['04000000.tga'], 'uv_wrap_u': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.022887999191880226, 'uv_mirror_v': True, 'uv_layer': ''} and texel0A {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.03051760047674179, 'image': bpy.data.images['04000000.tga'], 'uv_wrap_u': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.022887999191880226, 'uv_mirror_v': True, 'uv_layer': ''} into texel0 {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.03051760047674179, 'image': bpy.data.images['04000000.tga'], 'uv_wrap_u': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.022887999191880226, 'uv_mirror_v': True, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga <bpy_struct, Image("04000000.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='goron.symbol_v4' name_q='"goron.symbol_v4"' material=bpy.data.materials['goron.symbol_v4'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06009E60_ZZFORCERGBA16.tga'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06009E60_ZZFORCERGBA16.tga'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06009E60_ZZFORCERGBA16.tga'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06009E60_ZZFORCERGBA16.tga'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06009E60_ZZFORCERGBA16.tga'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='hat' name_q='"hat"' material=bpy.data.materials['hat'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_1': bpy.data...nodes["OBJEX_Color1"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06005280.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='buckle' name_q='"buckle"' material=bpy.data.materials['buckle'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06005680_ZZPAL1.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06005680_ZZPAL1.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06005680_ZZPAL1.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06005680_ZZPAL1.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06005680_ZZPAL1.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='wood.grip' name_q='"wood.grip"' material=bpy.data.materials['wood.grip'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600B168.tga.001'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': True, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600B168.tga.001'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': True, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600B168.tga.001'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': True, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600B168.tga.001'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': True, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600B168.tga.001'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': True, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 0.7215686440467834, 0.3176470696926117, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 0600B168.tga.001 <bpy_struct, Image("0600B168.tga.001")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ms.gem.001' name_q='"ms.gem.001"' material=bpy.data.materials['ms.gem.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.03051760047674179, 'image': bpy.data.images['04000000.tga'], 'uv_wrap_u': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.022887999191880226, 'uv_mirror_v': True, 'uv_layer': ''}, 'texel0RGB': {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.03051760047674179, 'image': bpy.data.images['04000000.tga'], 'uv_wrap_u': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.022887999191880226, 'uv_mirror_v': True, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.03051760047674179, 'image': bpy.data.images['04000000.tga'], 'uv_wrap_u': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.022887999191880226, 'uv_mirror_v': True, 'uv_layer': ''} and texel0A {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.03051760047674179, 'image': bpy.data.images['04000000.tga'], 'uv_wrap_u': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.022887999191880226, 'uv_mirror_v': True, 'uv_layer': ''} into texel0 {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.03051760047674179, 'image': bpy.data.images['04000000.tga'], 'uv_wrap_u': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.022887999191880226, 'uv_mirror_v': True, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 0.8187932968139648, 0.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga <bpy_struct, Image("04000000.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='bg.end.1_v4' name_q='"bg.end.1_v4"' material=bpy.data.materials['bg.end.1_v4'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['biggoron_handle.png'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['biggoron_handle.png'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['biggoron_handle.png'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['biggoron_handle.png'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['biggoron_handle.png'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.33245155215263367, 0.33245155215263367, 0.33245155215263367, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture biggoron_handle.png <bpy_struct, Image("biggoron_handle.png")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Body' name_q='"Body"' material=bpy.data.materials['Body'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06006B00.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06006B00.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06006B00.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06006B00.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06006B00.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='eyes' name_q='"eyes"' material=bpy.data.materials['eyes'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['eyes.png'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['eyes.png'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['eyes.png'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['eyes.png'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['eyes.png'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='glove.back' name_q='"glove.back"' material=bpy.data.materials['glove.back'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06008080.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06008080.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06008080.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06008080.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06008080.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ns.guard.001' name_q='"ns.guard.001"' material=bpy.data.materials['ns.guard.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06006CE0.tga.001'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06006CE0.tga.001'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06006CE0.tga.001'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06006CE0.tga.001'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06006CE0.tga.001'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='undershirt.limbs' name_q='"undershirt.limbs"' material=bpy.data.materials['undershirt.limbs'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06005E80.tga'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06005E80.tga'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06005E80.tga'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06005E80.tga'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06005E80.tga'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='metal' name_q='"metal"' material=bpy.data.materials['metal'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.05000000074505806, 'image': bpy.data.images['04000000.tga'], 'uv_wrap_u': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.05000000074505806, 'uv_mirror_v': True, 'uv_layer': ''}, 'texel0RGB': {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.05000000074505806, 'image': bpy.data.images['04000000.tga'], 'uv_wrap_u': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.05000000074505806, 'uv_mirror_v': True, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.05000000074505806, 'image': bpy.data.images['04000000.tga'], 'uv_wrap_u': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.05000000074505806, 'uv_mirror_v': True, 'uv_layer': ''} and texel0A {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.05000000074505806, 'image': bpy.data.images['04000000.tga'], 'uv_wrap_u': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.05000000074505806, 'uv_mirror_v': True, 'uv_layer': ''} into texel0 {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.05000000074505806, 'image': bpy.data.images['04000000.tga'], 'uv_wrap_u': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.05000000074505806, 'uv_mirror_v': True, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga <bpy_struct, Image("04000000.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='cuffs' name_q='"cuffs"' material=bpy.data.materials['cuffs'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06007880.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06007880.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06007880.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06007880.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06007880.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Bow_String' name_q='"Bow_String"' material=bpy.data.materials['Bow_String'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_0': bpy.data...nodes["OBJEX_Color0"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['04001C40.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='metal.hover' name_q='"metal.hover"' material=bpy.data.materials['metal.hover'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.05000000074505806, 'image': bpy.data.images['04000000.tga'], 'uv_wrap_u': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.05000000074505806, 'uv_mirror_v': True, 'uv_layer': ''}, 'texel0RGB': {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.05000000074505806, 'image': bpy.data.images['04000000.tga'], 'uv_wrap_u': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.05000000074505806, 'uv_mirror_v': True, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.05000000074505806, 'image': bpy.data.images['04000000.tga'], 'uv_wrap_u': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.05000000074505806, 'uv_mirror_v': True, 'uv_layer': ''} and texel0A {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.05000000074505806, 'image': bpy.data.images['04000000.tga'], 'uv_wrap_u': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.05000000074505806, 'uv_mirror_v': True, 'uv_layer': ''} into texel0 {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.05000000074505806, 'image': bpy.data.images['04000000.tga'], 'uv_wrap_u': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.05000000074505806, 'uv_mirror_v': True, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.5089779496192932, 0.4474545121192932, 0.1664131134748459, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga <bpy_struct, Image("04000000.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ocarina' name_q='"ocarina"' material=bpy.data.materials['ocarina'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['04001400.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['04001400.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['04001400.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['04001400.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['04001400.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='fingers' name_q='"fingers"' material=bpy.data.materials['fingers'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600D738.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600D738.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600D738.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600D738.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600D738.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mirror.surface' name_q='"mirror.surface"' material=bpy.data.materials['mirror.surface'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.05000000074505806, 'image': bpy.data.images['04000000.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.05000000074505806, 'uv_mirror_v': True, 'uv_layer': ''}, 'texel0RGB': {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.05000000074505806, 'image': bpy.data.images['04000000.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.05000000074505806, 'uv_mirror_v': True, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.05000000074505806, 'image': bpy.data.images['04000000.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.05000000074505806, 'uv_mirror_v': True, 'uv_layer': ''} and texel0A {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.05000000074505806, 'image': bpy.data.images['04000000.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.05000000074505806, 'uv_mirror_v': True, 'uv_layer': ''} into texel0 {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.05000000074505806, 'image': bpy.data.images['04000000.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.05000000074505806, 'uv_mirror_v': True, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.009014400653541088, 0.0911124125123024, 0.39227452874183655, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga <bpy_struct, Image("04000000.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Material' name_q='"Material"' material=bpy.data.materials['Material'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06005B40.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06005B40.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06005B40.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06005B40.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06005B40.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 06005B40.tga <bpy_struct, Image("06005B40.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='bg.end.2_v4' name_q='"bg.end.2_v4"' material=bpy.data.materials['bg.end.2_v4'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['biggoron_handle.png'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['biggoron_handle.png'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['biggoron_handle.png'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['biggoron_handle.png'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['biggoron_handle.png'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.011612245813012123, 0.0802198275923729, 0.4969330132007599, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture biggoron_handle.png <bpy_struct, Image("biggoron_handle.png")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='collar' name_q='"collar"' material=bpy.data.materials['collar'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_0': bpy.data...nodes["OBJEX_Color0"].outputs[0], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_ACMUX_1': bpy.data...nodes["OBJEX_Color1"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06009580.tga'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'shadeRGB': {'type': 'normals'}}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='handle' name_q='"handle"' material=bpy.data.materials['handle'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600B228.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600B228.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600B228.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600B228.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600B228.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='hair' name_q='"hair"' material=bpy.data.materials['hair'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06005400.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06005400.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06005400.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06005400.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06005400.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='chain' name_q='"chain"' material=bpy.data.materials['chain'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600B2A8.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600B2A8.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600B2A8.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600B2A8.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600B2A8.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ear.ring' name_q='"ear.ring"' material=bpy.data.materials['ear.ring'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06006980.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06006980.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06006980.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06006980.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06006980.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='boot' name_q='"boot"' material=bpy.data.materials['boot'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06006080.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06006080.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06006080.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06006080.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06006080.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Material.001' name_q='"Material.001"' material=bpy.data.materials['Material.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['BG_Sheath.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': True, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['BG_Sheath.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': True, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['BG_Sheath.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': True, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['BG_Sheath.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': True, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['BG_Sheath.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': True, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='shield.back.002' name_q='"shield.back.002"' material=bpy.data.materials['shield.back.002'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06009768.tga.003'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': True, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06009768.tga.003'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': True, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06009768.tga.003'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': True, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06009768.tga.003'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': True, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06009768.tga.003'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': True, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='glove.palm' name_q='"glove.palm"' material=bpy.data.materials['glove.palm'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06007C80.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06007C80.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06007C80.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06007C80.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06007C80.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='boot.foot' name_q='"boot.foot"' material=bpy.data.materials['boot.foot'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06006480.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06006480.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06006480.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06006480.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06006480.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='tunic.1' name_q='"tunic.1"' material=bpy.data.materials['tunic.1'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_1': bpy.data...nodes["OBJEX_Color1"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06005280.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 06005280.tga <bpy_struct, Image("06005280.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ms.symbol_v4' name_q='"ms.symbol_v4"' material=bpy.data.materials['ms.symbol_v4'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_0': bpy.data...nodes["OBJEX_Color0"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['ms_insignia.png'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['ms_insignia.png'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['ms_insignia.png'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['ms_insignia.png'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['ms_insignia.png'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='sheath' name_q='"sheath"' material=bpy.data.materials['sheath'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['060086E8.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': True, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['060086E8.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': True, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['060086E8.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': True, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['060086E8.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': True, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': True, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['060086E8.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': True, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='bow.string' name_q='"bow.string"' material=bpy.data.materials['bow.string'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['skin.png'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['skin.png'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['skin.png'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['skin.png'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['skin.png'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='hammer.grip' name_q='"hammer.grip"' material=bpy.data.materials['hammer.grip'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['04001A00.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['04001A00.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['04001A00.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['04001A00.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['04001A00.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.07818741351366043, 0.0, 0.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='boot.buckle' name_q='"boot.buckle"' material=bpy.data.materials['boot.buckle'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06006280.tga'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06006280.tga'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06006280.tga'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06006280.tga'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06006280.tga'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='sheath.tip' name_q='"sheath.tip"' material=bpy.data.materials['sheath.tip'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06008CE8.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06008CE8.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06008CE8.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06008CE8.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06008CE8.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ms.hilt.001' name_q='"ms.hilt.001"' material=bpy.data.materials['ms.hilt.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_0': bpy.data...nodes["OBJEX_Color0"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['060090E8.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Bruh_ZZNOCULL' name_q='"Bruh_ZZNOCULL"' material=bpy.data.materials['Bruh_ZZNOCULL'] face_img=None
WARNING:objex.export_objex_mtl.detect_zztag: Found what may be an ancient ZZ-tag in name Bruh_ZZNOCULL
Those are not used at all anymore and will be ignored
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06005740.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06005740.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06005740.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06005740.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06005740.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='gauntlet.hand' name_q='"gauntlet.hand"' material=bpy.data.materials['gauntlet.hand'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_0': bpy.data...nodes["OBJEX_Color0"].outputs[0], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600BEE8.png'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600BEE8.png'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600BEE8.png'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600BEE8.png'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600BEE8.png'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Hookshot.Aim' name_q='"Hookshot.Aim"' material=bpy.data.materials['Hookshot.Aim'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['texture_0602BB18.png'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['texture_0602BB18.png'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['texture_0602BB18.png'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['texture_0602BB18.png'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['texture_0602BB18.png'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='string.002' name_q='"string.002"' material=bpy.data.materials['string.002'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 06005600_ZZPAL1.tga <bpy_struct, Image("06005600_ZZPAL1.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='gauntlet.arm' name_q='"gauntlet.arm"' material=bpy.data.materials['gauntlet.arm'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_0': bpy.data...nodes["OBJEX_Color0"].outputs[0], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600BAE8.png'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600BAE8.png'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'shadeRGB': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600BAE8.png'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600BAE8.png'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600BAE8.png'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='hylian.crest.002' name_q='"hylian.crest.002"' material=bpy.data.materials['hylian.crest.002'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['04000400.tga'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['04000400.tga'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['04000400.tga'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['04000400.tga'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['04000400.tga'], 'uv_wrap_u': False, 'texgen_linear': False, 'uv_wrap_v': False, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ms.gem' name_q='"ms.gem"' material=bpy.data.materials['ms.gem'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.03051760047674179, 'image': bpy.data.images['04000000.tga'], 'uv_wrap_u': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.022887999191880226, 'uv_mirror_v': True, 'uv_layer': ''}, 'texel0RGB': {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.03051760047674179, 'image': bpy.data.images['04000000.tga'], 'uv_wrap_u': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.022887999191880226, 'uv_mirror_v': True, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.03051760047674179, 'image': bpy.data.images['04000000.tga'], 'uv_wrap_u': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.022887999191880226, 'uv_mirror_v': True, 'uv_layer': ''} and texel0A {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.03051760047674179, 'image': bpy.data.images['04000000.tga'], 'uv_wrap_u': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.022887999191880226, 'uv_mirror_v': True, 'uv_layer': ''} into texel0 {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.03051760047674179, 'image': bpy.data.images['04000000.tga'], 'uv_wrap_u': True, 'texgen_linear': True, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.022887999191880226, 'uv_mirror_v': True, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 0.8187932968139648, 0.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga <bpy_struct, Image("04000000.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='tunic.2' name_q='"tunic.2"' material=bpy.data.materials['tunic.2'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_1': bpy.data...nodes["OBJEX_Color1"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['04001D40.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='wood.blue' name_q='"wood.blue"' material=bpy.data.materials['wood.blue'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600B168.tga.001'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.05951124429702759, 0.05951124429702759, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 0600B168.tga.001 <bpy_struct, Image("0600B168.tga.001")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='wood.red' name_q='"wood.red"' material=bpy.data.materials['wood.red'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_0': bpy.data...nodes["OBJEX_Color0"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0600B168.tga.001'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}, 'primitiveA': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.6600000262260437, 0.0, 0.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 0600B168.tga.001 <bpy_struct, Image("0600B168.tga.001")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='glass.000' name_q='"glass.000"' material=bpy.data.materials['glass.000'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 0.75, 'shadeRGB': {'type': 'normals'}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'texel0RGB': {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.02500000037252903, 'image': bpy.data.images['liquid.png'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.02500000037252903, 'uv_mirror_v': True, 'uv_layer': ''}, 'shadeA': {'type': 'normals'}, 'texel0A': {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.02500000037252903, 'image': bpy.data.images['liquid.png'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.02500000037252903, 'uv_mirror_v': True, 'uv_layer': ''}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.02500000037252903, 'image': bpy.data.images['liquid.png'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.02500000037252903, 'uv_mirror_v': True, 'uv_layer': ''} and texel0A {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.02500000037252903, 'image': bpy.data.images['liquid.png'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.02500000037252903, 'uv_mirror_v': True, 'uv_layer': ''} into texel0 {'texgen': True, 'uv_mirror_u': True, 'uv_scale_v_main': 0.02500000037252903, 'image': bpy.data.images['liquid.png'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 0.02500000037252903, 'uv_mirror_v': True, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='hookshot.chain' name_q='"hookshot.chain"' material=bpy.data.materials['hookshot.chain'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0602B338.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0602B338.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0602B338.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0602B338.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['0602B338.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='grip' name_q='"grip"' material=bpy.data.materials['grip'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['060084E8.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['060084E8.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['060084E8.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['060084E8.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['060084E8.tga'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='bg.handguard_v4' name_q='"bg.handguard_v4"' material=bpy.data.materials['bg.handguard_v4'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0], 'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveA': 1.0, 'shadeRGB': {'type': 'normals'}, 'texel0A': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['biggoron_bolt'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'texel0RGB': {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['biggoron_bolt'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['biggoron_bolt'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} and texel0A {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['biggoron_bolt'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''} into texel0 {'texgen': False, 'uv_mirror_u': False, 'uv_scale_v_main': 1.0, 'image': bpy.data.images['biggoron_bolt'], 'uv_wrap_u': True, 'texgen_linear': False, 'uv_wrap_v': True, 'uv_map': False, 'uv_scale_v': 0, 'uv_scale_u': 0, 'uv_scale_u_main': 1.0, 'uv_mirror_v': False, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.011612245813012123, 0.10702310502529144, 0.4969330132007599, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.8823 sec |   0.8803 sec) Finished exporting materials, now exporting skeletons/animations
INFO:objex.ObjexWriter.write: now exporting skeletons
INFO:objex.ObjexWriter.write:  ... and animations
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.8863 sec |   0.8843 sec) Objex Export Finished

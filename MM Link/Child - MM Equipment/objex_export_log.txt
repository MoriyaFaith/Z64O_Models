WARNING:objex.OBJEX_OT_export.execute: Scene uses display_device='sRGB' which changes how colors are displayed in the viewport, reducing the preview accuracy.
This can be changed under Color Management in Scene properties.
Note that this should also be kept consistent with the Color Space property of image texture nodes (display_device="None", Color Space="Linear").
In Blender 2.7x, "Color Space" can be found in the Image Editor.
Recommended value: None
INFO:objex.OBJEX_OT_export.progress_report_print:   (  0.0005 sec |   0.0000 sec) Objex Export path: 'D:\\Games\\Modding\\Zelda 64\\Models\\Z64O_Models\\MM Link\\Child - MM Equipment\\object_link_child.objex'
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Shield.2, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0121 sec |   0.0111 sec) Finished writing geometry of 'Shield.2'.
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0137 sec |   0.0005 sec) Finished writing geometry of 'skeleton'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating riggedmesh, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0710 sec |   0.0556 sec) Finished writing geometry of 'riggedmesh'.
WARNING:objex.ObjexWriter.write_object: Mesh Slingshot is not triangulated and will be triangulated automatically (for exporting only).
Preview accuracy (UVs, shading, vertex colors) is improved by using a triangulated mesh.
Note: mesh has no triangulate modifier
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0854 sec |   0.0134 sec) Finished writing geometry of 'Slingshot'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Ocarina.1, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0965 sec |   0.0100 sec) Finished writing geometry of 'Ocarina.1'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Bottle, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1098 sec |   0.0122 sec) Finished writing geometry of 'Bottle'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating GoronBracelet, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1201 sec |   0.0087 sec) Finished writing geometry of 'GoronBracelet'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Blade.1, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1313 sec |   0.0091 sec) Finished writing geometry of 'Blade.1'.
WARNING:objex.ObjexWriter.write_object: Mesh Hilt.1 is not triangulated and will be triangulated automatically (for exporting only).
Preview accuracy (UVs, shading, vertex colors) is improved by using a triangulated mesh.
Note: mesh has no triangulate modifier
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1430 sec |   0.0107 sec) Finished writing geometry of 'Hilt.1'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Ocarina.2, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1574 sec |   0.0123 sec) Finished writing geometry of 'Ocarina.2'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Shield.1, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1697 sec |   0.0102 sec) Finished writing geometry of 'Shield.1'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Bottle.Hand.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1819 sec |   0.0107 sec) Finished writing geometry of 'Bottle.Hand.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Fist.L, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.1931 sec |   0.0085 sec) Finished writing geometry of 'Fist.L'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Fist.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2049 sec |   0.0107 sec) Finished writing geometry of 'Fist.R'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Bow, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2218 sec |   0.0153 sec) Finished writing geometry of 'Bow'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Boomerang, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2411 sec |   0.0183 sec) Finished writing geometry of 'Boomerang'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Blade.2, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2570 sec |   0.0137 sec) Finished writing geometry of 'Blade.2'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Sheath, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2693 sec |   0.0097 sec) Finished writing geometry of 'Sheath'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating DekuStick, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2811 sec |   0.0102 sec) Finished writing geometry of 'DekuStick'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating FPS.Forearm.R, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.2980 sec |   0.0159 sec) Finished writing geometry of 'FPS.Forearm.R'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating Bow.String, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.3071 sec |   0.0075 sec) Finished writing geometry of 'Bow.String'.
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.3097 sec |   0.3087 sec) Finished exporting geometry, now exporting materials
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Material.002' name_q='"Material.002"' material=bpy.data.materials['Material.002'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['RGBA16_0601BF00.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['RGBA16_0601BF00.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['RGBA16_0601BF00.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['RGBA16_0601BF00.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['RGBA16_0601BF00.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_0601BA90' name_q='"mtl_0601BA90"' material=bpy.data.materials['mtl_0601BA90'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['0601BA90.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['0601BA90.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['0601BA90.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['0601BA90.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['0601BA90.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='red.cap' name_q='"red.cap"' material=bpy.data.materials['red.cap'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 0.004999999888241291, 'uv_scale_u_main': 0.004999999888241291, 'texgen': True, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': True, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'texel0A': {'uv_scale_v_main': 0.004999999888241291, 'uv_scale_u_main': 0.004999999888241291, 'texgen': True, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': True, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.6203922033309937, 0.09568627923727036, 0.09568627923727036, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 0.004999999888241291, 'uv_scale_u_main': 0.004999999888241291, 'texgen': True, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': True, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 0.004999999888241291, 'uv_scale_u_main': 0.004999999888241291, 'texgen': True, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': True, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 0.004999999888241291, 'uv_scale_u_main': 0.004999999888241291, 'texgen': True, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': True, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_06019890' name_q='"mtl_06019890"' material=bpy.data.materials['mtl_06019890'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06019890.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06019890.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06019890.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06019890.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06019890.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='skin' name_q='"skin"' material=bpy.data.materials['skin'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['CI8_060062A0_pal060060A0.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['CI8_060062A0_pal060060A0.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['CI8_060062A0_pal060060A0.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['CI8_060062A0_pal060060A0.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['CI8_060062A0_pal060060A0.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Material.003' name_q='"Material.003"' material=bpy.data.materials['Material.003'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['RGBA16_0601BF80.tga.000'], 'uv_mirror_u': True, 'uv_scale_u': 0, 'uv_layer': ''}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['RGBA16_0601BF80.tga.000'], 'uv_mirror_u': True, 'uv_scale_u': 0, 'uv_layer': ''}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['RGBA16_0601BF80.tga.000'], 'uv_mirror_u': True, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['RGBA16_0601BF80.tga.000'], 'uv_mirror_u': True, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['RGBA16_0601BF80.tga.000'], 'uv_mirror_u': True, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_060063C0' name_q='"mtl_060063C0"' material=bpy.data.materials['mtl_060063C0'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['RGBA16_060063C0.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['RGBA16_060063C0.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['RGBA16_060063C0.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['RGBA16_060063C0.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['RGBA16_060063C0.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mouth' name_q='"mouth"' material=bpy.data.materials['mouth'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['mouth.png'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['mouth.png'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['mouth.png'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['mouth.png'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['mouth.png'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='slingshot' name_q='"slingshot"' material=bpy.data.materials['slingshot'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06008DE0.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06008DE0.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06008DE0.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06008DE0.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06008DE0.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='hylian.crest.002' name_q='"hylian.crest.002"' material=bpy.data.materials['hylian.crest.002'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['04000400.tga.002'], 'uv_mirror_u': True, 'uv_scale_u': 0, 'uv_layer': ''}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['04000400.tga.002'], 'uv_mirror_u': True, 'uv_scale_u': 0, 'uv_layer': ''}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['04000400.tga.002'], 'uv_mirror_u': True, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['04000400.tga.002'], 'uv_mirror_u': True, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['04000400.tga.002'], 'uv_mirror_u': True, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_06002D88' name_q='"mtl_06002D88"' material=bpy.data.materials['mtl_06002D88'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06002D88.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06002D88.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06002D88.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06002D88.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06002D88.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='boomerang.shine' name_q='"boomerang.shine"' material=bpy.data.materials['boomerang.shine'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 0.02500000037252903, 'uv_scale_u_main': 0.02500000037252903, 'texgen': True, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'texel0A': {'uv_scale_v_main': 0.02500000037252903, 'uv_scale_u_main': 0.02500000037252903, 'texgen': True, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 0.0, 0.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 0.02500000037252903, 'uv_scale_u_main': 0.02500000037252903, 'texgen': True, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 0.02500000037252903, 'uv_scale_u_main': 0.02500000037252903, 'texgen': True, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 0.02500000037252903, 'uv_scale_u_main': 0.02500000037252903, 'texgen': True, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='goran.insignia' name_q='"goran.insignia"' material=bpy.data.materials['goran.insignia'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06009E60_ZZFORCERGBA16.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06009E60_ZZFORCERGBA16.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06009E60_ZZFORCERGBA16.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06009E60_ZZFORCERGBA16.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06009E60_ZZFORCERGBA16.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ocarina.oot' name_q='"ocarina.oot"' material=bpy.data.materials['ocarina.oot'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['04001400.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['04001400.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['04001400.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['04001400.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['04001400.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='boomerang.green' name_q='"boomerang.green"' material=bpy.data.materials['boomerang.green'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['p_tex21_4800.png.003'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['p_tex21_4800.png.003'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.0, 0.3185468018054962, 0.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['p_tex21_4800.png.003'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['p_tex21_4800.png.003'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['p_tex21_4800.png.003'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='tunic_top' name_q='"tunic_top"' material=bpy.data.materials['tunic_top'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['I8_06005C40_ZZRGBA16.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['I8_06005C40_ZZRGBA16.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['I8_06005C40_ZZRGBA16.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['I8_06005C40_ZZRGBA16.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['I8_06005C40_ZZRGBA16.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='boomerang.gold' name_q='"boomerang.gold"' material=bpy.data.materials['boomerang.gold'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 0.02500000037252903, 'uv_scale_u_main': 0.02500000037252903, 'texgen': True, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'texel0A': {'uv_scale_v_main': 0.02500000037252903, 'uv_scale_u_main': 0.02500000037252903, 'texgen': True, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 0.75, 0.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 0.02500000037252903, 'uv_scale_u_main': 0.02500000037252903, 'texgen': True, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 0.02500000037252903, 'uv_scale_u_main': 0.02500000037252903, 'texgen': True, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 0.02500000037252903, 'uv_scale_u_main': 0.02500000037252903, 'texgen': True, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga <bpy_struct, Image("04000000.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_06002DC8' name_q='"mtl_06002DC8"' material=bpy.data.materials['mtl_06002DC8'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06002DC8.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06002DC8.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06002DC8.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06002DC8.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06002DC8.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='f3d_material.006' name_q='"f3d_material.006"' material=bpy.data.materials['f3d_material.006'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['tex_000A30.rgba16.png.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['tex_000A30.rgba16.png.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['tex_000A30.rgba16.png.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['tex_000A30.rgba16.png.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['tex_000A30.rgba16.png.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_0600A2E8' name_q='"mtl_0600A2E8"' material=bpy.data.materials['mtl_0600A2E8'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['CI8_0600A2E8_pal060060A0.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['CI8_0600A2E8_pal060060A0.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['CI8_0600A2E8_pal060060A0.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['CI8_0600A2E8_pal060060A0.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['CI8_0600A2E8_pal060060A0.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='eyes' name_q='"eyes"' material=bpy.data.materials['eyes'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['eyes.png'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['eyes.png'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['eyes.png'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['eyes.png'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['eyes.png'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='string' name_q='"string"' material=bpy.data.materials['string'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06005600_ZZPAL1.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Bow_String' name_q='"Bow_String"' material=bpy.data.materials['Bow_String'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_ACMUX_0': bpy.data...nodes["OBJEX_Color0"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['04001C40.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_06002B08' name_q='"mtl_06002B08"' material=bpy.data.materials['mtl_06002B08'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06002B08.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06002B08.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06002B08.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06002B08.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06002B08.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='shield.back.002' name_q='"shield.back.002"' material=bpy.data.materials['shield.back.002'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06009768.tga.003'], 'uv_mirror_u': True, 'uv_scale_u': 0, 'uv_layer': ''}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06009768.tga.003'], 'uv_mirror_u': True, 'uv_scale_u': 0, 'uv_layer': ''}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06009768.tga.003'], 'uv_mirror_u': True, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06009768.tga.003'], 'uv_mirror_u': True, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06009768.tga.003'], 'uv_mirror_u': True, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='boomerang.main' name_q='"boomerang.main"' material=bpy.data.materials['boomerang.main'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['p_tex21_4800.png.003'], 'uv_mirror_u': True, 'uv_scale_u': 0, 'uv_layer': ''}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['p_tex21_4800.png.003'], 'uv_mirror_u': True, 'uv_scale_u': 0, 'uv_layer': ''}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 0.40197786688804626, 0.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['p_tex21_4800.png.003'], 'uv_mirror_u': True, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['p_tex21_4800.png.003'], 'uv_mirror_u': True, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['p_tex21_4800.png.003'], 'uv_mirror_u': True, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture p_tex21_4800.png.003 <bpy_struct, Image("p_tex21_4800.png.003")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='boot.top' name_q='"boot.top"' material=bpy.data.materials['boot.top'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['RGBA16_0600A9C8.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['RGBA16_0600A9C8.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['RGBA16_0600A9C8.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['RGBA16_0600A9C8.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['RGBA16_0600A9C8.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='metal.001' name_q='"metal.001"' material=bpy.data.materials['metal.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 0.030517999082803726, 'uv_scale_u_main': 0.022887999191880226, 'texgen': True, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': True, 'image': bpy.data.images['eff_unknown_10.i8.png'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'texel0A': {'uv_scale_v_main': 0.030517999082803726, 'uv_scale_u_main': 0.022887999191880226, 'texgen': True, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': True, 'image': bpy.data.images['eff_unknown_10.i8.png'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 0.030517999082803726, 'uv_scale_u_main': 0.022887999191880226, 'texgen': True, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': True, 'image': bpy.data.images['eff_unknown_10.i8.png'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 0.030517999082803726, 'uv_scale_u_main': 0.022887999191880226, 'texgen': True, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': True, 'image': bpy.data.images['eff_unknown_10.i8.png'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 0.030517999082803726, 'uv_scale_u_main': 0.022887999191880226, 'texgen': True, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': True, 'image': bpy.data.images['eff_unknown_10.i8.png'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ocarian.fairy.001' name_q='"ocarian.fairy.001"' material=bpy.data.materials['ocarian.fairy.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['060091E0.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['060091E0.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['060091E0.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['060091E0.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['060091E0.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='glass.001' name_q='"glass.001"' material=bpy.data.materials['glass.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 0.02500000037252903, 'uv_scale_u_main': 0.02500000037252903, 'texgen': True, 'uv_wrap_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06000508.tga'], 'uv_mirror_u': True, 'uv_scale_u': 0, 'uv_layer': ''}, 'texel0A': {'uv_scale_v_main': 0.02500000037252903, 'uv_scale_u_main': 0.02500000037252903, 'texgen': True, 'uv_wrap_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06000508.tga'], 'uv_mirror_u': True, 'uv_scale_u': 0, 'uv_layer': ''}, 'primitiveA': 0.75, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 0.75 into primitive (1.0, 1.0, 1.0, 0.75)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 0.02500000037252903, 'uv_scale_u_main': 0.02500000037252903, 'texgen': True, 'uv_wrap_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06000508.tga'], 'uv_mirror_u': True, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 0.02500000037252903, 'uv_scale_u_main': 0.02500000037252903, 'texgen': True, 'uv_wrap_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06000508.tga'], 'uv_mirror_u': True, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 0.02500000037252903, 'uv_scale_u_main': 0.02500000037252903, 'texgen': True, 'uv_wrap_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06000508.tga'], 'uv_mirror_u': True, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='boot.bottom' name_q='"boot.bottom"' material=bpy.data.materials['boot.bottom'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['RGBA16_06006E10.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['RGBA16_06006E10.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['RGBA16_06006E10.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['RGBA16_06006E10.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['RGBA16_06006E10.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_06019090' name_q='"mtl_06019090"' material=bpy.data.materials['mtl_06019090'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06019090.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06019090.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06019090.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06019090.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06019090.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='metal' name_q='"metal"' material=bpy.data.materials['metal'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 0.05000000074505806, 'uv_scale_u_main': 0.05000000074505806, 'texgen': True, 'uv_wrap_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': True, 'uv_scale_u': 0, 'uv_layer': ''}, 'texel0A': {'uv_scale_v_main': 0.05000000074505806, 'uv_scale_u_main': 0.05000000074505806, 'texgen': True, 'uv_wrap_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': True, 'uv_scale_u': 0, 'uv_layer': ''}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 0.05000000074505806, 'uv_scale_u_main': 0.05000000074505806, 'texgen': True, 'uv_wrap_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': True, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 0.05000000074505806, 'uv_scale_u_main': 0.05000000074505806, 'texgen': True, 'uv_wrap_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': True, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 0.05000000074505806, 'uv_scale_u_main': 0.05000000074505806, 'texgen': True, 'uv_wrap_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['04000000.tga'], 'uv_mirror_u': True, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000.tga <bpy_struct, Image("04000000.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_0601B290' name_q='"mtl_0601B290"' material=bpy.data.materials['mtl_0601B290'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['0601B290.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['0601B290.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['0601B290.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['0601B290.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['0601B290.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='collar' name_q='"collar"' material=bpy.data.materials['collar'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentA from bpy.data...nodes["OBJEX_EnvColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['I8_06008418.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'environmentA': 1.0, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['I8_06008418.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged environmentRGB bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value and environmentA 1.0 into environment (0.011612245813012123, 0.14126330614089966, 0.011612245813012123, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['I8_06008418.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['I8_06008418.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['I8_06008418.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_06009C38' name_q='"mtl_06009C38"' material=bpy.data.materials['mtl_06009C38'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['RGBA16_06009C38.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['RGBA16_06009C38.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['RGBA16_06009C38.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['RGBA16_06009C38.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['RGBA16_06009C38.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_0600CC30' name_q='"mtl_0600CC30"' material=bpy.data.materials['mtl_0600CC30'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['0600CC30.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['0600CC30.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (0.44520121812820435, 0.18447501957416534, 0.07818741351366043, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['0600CC30.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['0600CC30.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['0600CC30.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='ms.gem' name_q='"ms.gem"' material=bpy.data.materials['ms.gem'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 0.03051760047674179, 'uv_scale_u_main': 0.022887999191880226, 'texgen': True, 'uv_wrap_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': True, 'image': bpy.data.images['eff_unknown_10.i8.png'], 'uv_mirror_u': True, 'uv_scale_u': 0, 'uv_layer': ''}, 'texel0A': {'uv_scale_v_main': 0.03051760047674179, 'uv_scale_u_main': 0.022887999191880226, 'texgen': True, 'uv_wrap_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': True, 'image': bpy.data.images['eff_unknown_10.i8.png'], 'uv_mirror_u': True, 'uv_scale_u': 0, 'uv_layer': ''}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 0.8187932968139648, 0.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 0.03051760047674179, 'uv_scale_u_main': 0.022887999191880226, 'texgen': True, 'uv_wrap_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': True, 'image': bpy.data.images['eff_unknown_10.i8.png'], 'uv_mirror_u': True, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 0.03051760047674179, 'uv_scale_u_main': 0.022887999191880226, 'texgen': True, 'uv_wrap_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': True, 'image': bpy.data.images['eff_unknown_10.i8.png'], 'uv_mirror_u': True, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 0.03051760047674179, 'uv_scale_u_main': 0.022887999191880226, 'texgen': True, 'uv_wrap_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': True, 'image': bpy.data.images['eff_unknown_10.i8.png'], 'uv_mirror_u': True, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture eff_unknown_10.i8.png <bpy_struct, Image("eff_unknown_10.i8.png")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_06006810' name_q='"mtl_06006810"' material=bpy.data.materials['mtl_06006810'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['RGBA16_06006810.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['RGBA16_06006810.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['RGBA16_06006810.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['RGBA16_06006810.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['RGBA16_06006810.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='glass.000' name_q='"glass.000"' material=bpy.data.materials['glass.000'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_scale_v_main': 0.02500000037252903, 'uv_scale_u_main': 0.02500000037252903, 'texgen': True, 'uv_wrap_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['liquid.png'], 'uv_mirror_u': True, 'uv_scale_u': 0, 'uv_layer': ''}, 'texel0RGB': {'uv_scale_v_main': 0.02500000037252903, 'uv_scale_u_main': 0.02500000037252903, 'texgen': True, 'uv_wrap_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['liquid.png'], 'uv_mirror_u': True, 'uv_scale_u': 0, 'uv_layer': ''}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'primitiveA': 0.75, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 0.02500000037252903, 'uv_scale_u_main': 0.02500000037252903, 'texgen': True, 'uv_wrap_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['liquid.png'], 'uv_mirror_u': True, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 0.02500000037252903, 'uv_scale_u_main': 0.02500000037252903, 'texgen': True, 'uv_wrap_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['liquid.png'], 'uv_mirror_u': True, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 0.02500000037252903, 'uv_scale_u_main': 0.02500000037252903, 'texgen': True, 'uv_wrap_u': True, 'uv_mirror_v': True, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['liquid.png'], 'uv_mirror_u': True, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_0600A418' name_q='"mtl_0600A418"' material=bpy.data.materials['mtl_0600A418'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['CI8_0600A418_pal060060A0.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['CI8_0600A418_pal060060A0.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['CI8_0600A418_pal060060A0.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['CI8_0600A418_pal060060A0.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['CI8_0600A418_pal060060A0.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='dingers' name_q='"dingers"' material=bpy.data.materials['dingers'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['texture_0600DB08_ZZPAL0.png'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['texture_0600DB08_ZZPAL0.png'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['texture_0600DB08_ZZPAL0.png'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['texture_0600DB08_ZZPAL0.png'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['texture_0600DB08_ZZPAL0.png'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_0601A090' name_q='"mtl_0601A090"' material=bpy.data.materials['mtl_0601A090'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06019890.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06019890.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06019890.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06019890.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': False, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['06019890.tga.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 06019890.tga.001 <bpy_struct, Image("06019890.tga.001")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='f3d_material.005' name_q='"f3d_material.005"' material=bpy.data.materials['f3d_material.005'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['tex_000C30.rgba16.png.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['tex_000C30.rgba16.png.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['tex_000C30.rgba16.png.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['tex_000C30.rgba16.png.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['tex_000C30.rgba16.png.001'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_06006A90' name_q='"mtl_06006A90"' material=bpy.data.materials['mtl_06006A90'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['RGBA16_06006A90.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['RGBA16_06006A90.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['RGBA16_06006A90.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['RGBA16_06006A90.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['RGBA16_06006A90.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='gold' name_q='"gold"' material=bpy.data.materials['gold'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 0.004999999888241291, 'uv_scale_u_main': 0.004999999888241291, 'texgen': True, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': True, 'image': bpy.data.images['06009DE0_ZZFORCERGBA16.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'texel0A': {'uv_scale_v_main': 0.004999999888241291, 'uv_scale_u_main': 0.004999999888241291, 'texgen': True, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': True, 'image': bpy.data.images['06009DE0_ZZFORCERGBA16.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 0.004999999888241291, 'uv_scale_u_main': 0.004999999888241291, 'texgen': True, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': True, 'image': bpy.data.images['06009DE0_ZZFORCERGBA16.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 0.004999999888241291, 'uv_scale_u_main': 0.004999999888241291, 'texgen': True, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': True, 'image': bpy.data.images['06009DE0_ZZFORCERGBA16.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 0.004999999888241291, 'uv_scale_u_main': 0.004999999888241291, 'texgen': True, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': True, 'image': bpy.data.images['06009DE0_ZZFORCERGBA16.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='string.001' name_q='"string.001"' material=bpy.data.materials['string.001'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_ACMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[1], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_CCMUX_PRIMITIVE': bpy.data...nodes["OBJEX_PrimColor"].outputs[0]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from bpy.data...nodes["OBJEX_PrimColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from bpy.data...nodes["OBJEX_PrimColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_PrimColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'primitiveRGB': bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 1, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 1, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}, 'primitiveA': 1.0, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data...nodes["OBJEX_PrimColorRGB"].outputs[0].default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 1, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 1, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': True, 'uv_scale_v': 1, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['04000000_ZZFORCERGBA16.tga'], 'uv_mirror_u': False, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.writeTexture: Skipped writing texture 04000000_ZZFORCERGBA16.tga <bpy_struct, Image("04000000_ZZFORCERGBA16.tga")>
TRACE:objex.export_objex_mtl.write_mtl: Writing name='tunic_bottom' name_q='"tunic_bottom"' material=bpy.data.materials['tunic_bottom'] face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[1], 'G_CCMUX_TEXEL0': bpy.data...nodes["OBJEX_Texel0"].outputs[0], 'G_CCMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[0], 'G_ACMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[1], 'G_CCMUX_SHADE': bpy.data...nodes["OBJEX_Shade"].outputs[0], 'G_ACMUX_ENVIRONMENT': bpy.data...nodes["OBJEX_EnvColor"].outputs[1]}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from bpy.data...nodes["OBJEX_Shade"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentA from bpy.data...nodes["OBJEX_EnvColor"].outputs[1] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from bpy.data...nodes["OBJEX_Texel0"].outputs[0] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from bpy.data...nodes["OBJEX_Texel0"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Texel0"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from bpy.data...nodes["OBJEX_Shade"].outputs[1] (socket node: bpy.data...nodes["OBJEX_Shade"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentRGB from bpy.data...nodes["OBJEX_EnvColor"].outputs[0] (socket node: bpy.data...nodes["OBJEX_EnvColor"])
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'shadeRGB': {'type': 'normals'}, 'texel0A': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['I8_06005D80_ZZRGBA16.tga'], 'uv_mirror_u': True, 'uv_scale_u': 0, 'uv_layer': ''}, 'environmentA': 1.0, 'texel0RGB': {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['I8_06005D80_ZZRGBA16.tga'], 'uv_mirror_u': True, 'uv_scale_u': 0, 'uv_layer': ''}, 'environmentRGB': bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged environmentRGB bpy.data...nodes["OBJEX_EnvColorRGB"].outputs[0].default_value and environmentA 1.0 into environment (0.011612245813012123, 0.14126330614089966, 0.011612245813012123, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['I8_06005D80_ZZRGBA16.tga'], 'uv_mirror_u': True, 'uv_scale_u': 0, 'uv_layer': ''} and texel0A {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['I8_06005D80_ZZRGBA16.tga'], 'uv_mirror_u': True, 'uv_scale_u': 0, 'uv_layer': ''} into texel0 {'uv_scale_v_main': 1.0, 'uv_scale_u_main': 1.0, 'texgen': False, 'uv_wrap_u': True, 'uv_mirror_v': False, 'uv_wrap_v': False, 'uv_scale_v': 0, 'uv_map': False, 'texgen_linear': False, 'image': bpy.data.images['I8_06005D80_ZZRGBA16.tga'], 'uv_mirror_u': True, 'uv_scale_u': 0, 'uv_layer': ''}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.4150 sec |   0.4139 sec) Finished exporting materials, now exporting skeletons/animations
INFO:objex.ObjexWriter.write: now exporting skeletons
INFO:objex.ObjexWriter.write:  ... and animations
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.4202 sec |   0.4192 sec) Objex Export Finished
